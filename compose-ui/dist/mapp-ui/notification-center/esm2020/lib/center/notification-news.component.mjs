import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/material/button";
import * as i3 from "../messages/alert/message.component";
export class NotificationCenterNewsComponent {
    constructor() {
        this.closePanel = new EventEmitter();
    }
    onClosePanel() {
        this.closePanel.emit();
    }
}
NotificationCenterNewsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: NotificationCenterNewsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
NotificationCenterNewsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.10", type: NotificationCenterNewsComponent, selector: "mui-notification-news", inputs: { notifications: "notifications" }, outputs: { closePanel: "closePanel" }, exportAs: ["muiNotificationNews"], ngImport: i0, template: "<div class=\"mui-nc-panel-body\">\r\n  <div class=\"mui-nc-panel-details\">\r\n    <ng-template ngFor let-item [ngForOf]=\"notifications | async\">\r\n      <mui-notification-message *ngIf=\"item.type === 'NEWS'\" [notification]=\"item\"></mui-notification-message>\r\n    </ng-template>\r\n  </div>\r\n  <div class=\"mui-nc-panel-actions\">\r\n    <button mat-stroked-button type=\"button\" class=\"mui-btn-close\" (click)=\"onClosePanel()\" i18n=\"@@nc_closebtn\">\r\n      Close\r\n    </button>\r\n  </div>\r\n</div>\r\n", styles: [":host{display:block;height:100%}.mui-nc-panel-body{height:100%;display:flex;flex-direction:column;justify-content:space-between}.mui-nc-panel-details{overflow-y:auto;overflow-x:hidden;padding:0 8px;margin:0}.mui-nc-panel-actions{text-align:center;padding:24px 0;flex:0 0 auto}.mui-btn-dismiss-all{margin-left:24px}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { kind: "component", type: i3.MessageComponent, selector: "mui-notification-message", inputs: ["notification"], outputs: ["notificationDismiss", "messageClickOptionalAction"], exportAs: ["muiNotificationMessage"] }, { kind: "pipe", type: i1.AsyncPipe, name: "async" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: NotificationCenterNewsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'mui-notification-news', exportAs: 'muiNotificationNews', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"mui-nc-panel-body\">\r\n  <div class=\"mui-nc-panel-details\">\r\n    <ng-template ngFor let-item [ngForOf]=\"notifications | async\">\r\n      <mui-notification-message *ngIf=\"item.type === 'NEWS'\" [notification]=\"item\"></mui-notification-message>\r\n    </ng-template>\r\n  </div>\r\n  <div class=\"mui-nc-panel-actions\">\r\n    <button mat-stroked-button type=\"button\" class=\"mui-btn-close\" (click)=\"onClosePanel()\" i18n=\"@@nc_closebtn\">\r\n      Close\r\n    </button>\r\n  </div>\r\n</div>\r\n", styles: [":host{display:block;height:100%}.mui-nc-panel-body{height:100%;display:flex;flex-direction:column;justify-content:space-between}.mui-nc-panel-details{overflow-y:auto;overflow-x:hidden;padding:0 8px;margin:0}.mui-nc-panel-actions{text-align:center;padding:24px 0;flex:0 0 auto}.mui-btn-dismiss-all{margin-left:24px}\n"] }]
        }], propDecorators: { notifications: [{
                type: Input
            }], closePanel: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLW5ld3MuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbWFwcC11aS9ub3RpZmljYXRpb24tY2VudGVyL3NyYy9saWIvY2VudGVyL25vdGlmaWNhdGlvbi1uZXdzLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL21hcHAtdWkvbm90aWZpY2F0aW9uLWNlbnRlci9zcmMvbGliL2NlbnRlci9ub3RpZmljYXRpb24tbmV3cy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLHVCQUF1QixFQUFFLE1BQU0sZUFBZSxDQUFDOzs7OztBQWFoRyxNQUFNLE9BQU8sK0JBQStCO0lBUjVDO1FBV1ksZUFBVSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7S0FLM0M7SUFIQyxZQUFZO1FBQ1YsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN6QixDQUFDOzs2SEFQVSwrQkFBK0I7aUhBQS9CLCtCQUErQixtTENiNUMsOGdCQVlBOzRGRENhLCtCQUErQjtrQkFSM0MsU0FBUzsrQkFDRSx1QkFBdUIsWUFDdkIscUJBQXFCLG1CQUdkLHVCQUF1QixDQUFDLE1BQU07OEJBSXRDLGFBQWE7c0JBQXJCLEtBQUs7Z0JBRUksVUFBVTtzQkFBbkIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcblxyXG5pbXBvcnQgeyBOb3RpZmljYXRpb24gfSBmcm9tICcuLi9zaGFyZWQvbW9kZWxzL25vdGlmaWNhdGlvbic7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ211aS1ub3RpZmljYXRpb24tbmV3cycsXHJcbiAgZXhwb3J0QXM6ICdtdWlOb3RpZmljYXRpb25OZXdzJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vbm90aWZpY2F0aW9uLW5ld3MuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL25vdGlmaWNhdGlvbi1hbGVydHMuY29tcG9uZW50LnNjc3MnXSwgLy8gd2UgcmV1c2UgdGhlIG1haW4gcGFuZWwgc3R5bGVzIGZyb20gYWxlcnRzXHJcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcclxufSlcclxuXHJcbmV4cG9ydCBjbGFzcyBOb3RpZmljYXRpb25DZW50ZXJOZXdzQ29tcG9uZW50IHtcclxuICBASW5wdXQoKSBub3RpZmljYXRpb25zOiBPYnNlcnZhYmxlPE5vdGlmaWNhdGlvbltdPjtcclxuXHJcbiAgQE91dHB1dCgpIGNsb3NlUGFuZWwgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gIG9uQ2xvc2VQYW5lbCgpOiB2b2lkIHtcclxuICAgIHRoaXMuY2xvc2VQYW5lbC5lbWl0KCk7XHJcbiAgfVxyXG59XHJcbiIsIjxkaXYgY2xhc3M9XCJtdWktbmMtcGFuZWwtYm9keVwiPlxyXG4gIDxkaXYgY2xhc3M9XCJtdWktbmMtcGFuZWwtZGV0YWlsc1wiPlxyXG4gICAgPG5nLXRlbXBsYXRlIG5nRm9yIGxldC1pdGVtIFtuZ0Zvck9mXT1cIm5vdGlmaWNhdGlvbnMgfCBhc3luY1wiPlxyXG4gICAgICA8bXVpLW5vdGlmaWNhdGlvbi1tZXNzYWdlICpuZ0lmPVwiaXRlbS50eXBlID09PSAnTkVXUydcIiBbbm90aWZpY2F0aW9uXT1cIml0ZW1cIj48L211aS1ub3RpZmljYXRpb24tbWVzc2FnZT5cclxuICAgIDwvbmctdGVtcGxhdGU+XHJcbiAgPC9kaXY+XHJcbiAgPGRpdiBjbGFzcz1cIm11aS1uYy1wYW5lbC1hY3Rpb25zXCI+XHJcbiAgICA8YnV0dG9uIG1hdC1zdHJva2VkLWJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJtdWktYnRuLWNsb3NlXCIgKGNsaWNrKT1cIm9uQ2xvc2VQYW5lbCgpXCIgaTE4bj1cIkBAbmNfY2xvc2VidG5cIj5cclxuICAgICAgQ2xvc2VcclxuICAgIDwvYnV0dG9uPlxyXG4gIDwvZGl2PlxyXG48L2Rpdj5cclxuIl19