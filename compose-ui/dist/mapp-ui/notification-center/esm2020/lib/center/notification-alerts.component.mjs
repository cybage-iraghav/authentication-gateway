import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/material/button";
import * as i3 from "../messages/alert/message.component";
import * as i4 from "../messages/sticky/message-sticky.component";
export class NotificationCenterAlertsComponent {
    constructor() {
        this.closePanel = new EventEmitter();
        this.dismissAlert = new EventEmitter();
        this.dismissAlertsAll = new EventEmitter();
        this.clickMessageOptionalAction = new EventEmitter();
    }
    onNotificationAlertDismiss(notification) {
        this.dismissAlert.emit(notification);
    }
    onNotificationAlertDismissAll() {
        this.dismissAlertsAll.emit();
    }
    onClosePanel() {
        this.closePanel.emit();
    }
    onMessageClickOptionalAction(event) {
        this.clickMessageOptionalAction.emit(event);
    }
}
NotificationCenterAlertsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: NotificationCenterAlertsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
NotificationCenterAlertsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.10", type: NotificationCenterAlertsComponent, selector: "mui-notification-alerts", inputs: { notifications: "notifications" }, outputs: { closePanel: "closePanel", dismissAlert: "dismissAlert", dismissAlertsAll: "dismissAlertsAll", clickMessageOptionalAction: "clickMessageOptionalAction" }, exportAs: ["muiNotificationAlerts"], ngImport: i0, template: "<div class=\"mui-nc-panel-body\">\r\n  <div class=\"mui-nc-panel-details\">\r\n    <ng-template ngFor let-item [ngForOf]=\"notifications | async\">\r\n      <mui-notification-message-sticky *ngIf=\"item.sticky && item.type !== 'NEWS'\"\r\n          [notification]=\"item\"></mui-notification-message-sticky>\r\n      <mui-notification-message *ngIf=\"!item.sticky && item.type !== 'NEWS'\" [notification]=\"item\"\r\n          (notificationDismiss)=\"onNotificationAlertDismiss($event)\" (messageClickOptionalAction)=\"onMessageClickOptionalAction($event)\"></mui-notification-message>\r\n    </ng-template>\r\n  </div>\r\n  <div class=\"mui-nc-panel-actions\">\r\n    <button mat-stroked-button\r\n        color=\"primary\"\r\n        type=\"button\"\r\n        class=\"mui-btn-close\"\r\n        (click)=\"onClosePanel()\"\r\n        i18n=\"@@nc_closebtn\">\r\n      Close\r\n    </button>\r\n    <button mat-flat-button\r\n        type=\"button\"\r\n        color=\"primary\"\r\n        class=\"mui-btn-dismiss-all\"\r\n        (click)=\"onNotificationAlertDismissAll()\"\r\n        i18n=\"@@nc_dismiss_all\">Dismiss All\r\n    </button>\r\n  </div>\r\n</div>\r\n", styles: [":host{display:block;height:100%}.mui-nc-panel-body{height:100%;display:flex;flex-direction:column;justify-content:space-between}.mui-nc-panel-details{overflow-y:auto;overflow-x:hidden;padding:0 8px;margin:0}.mui-nc-panel-actions{text-align:center;padding:24px 0;flex:0 0 auto}.mui-btn-dismiss-all{margin-left:24px}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { kind: "component", type: i3.MessageComponent, selector: "mui-notification-message", inputs: ["notification"], outputs: ["notificationDismiss", "messageClickOptionalAction"], exportAs: ["muiNotificationMessage"] }, { kind: "component", type: i4.MessageStickyComponent, selector: "mui-notification-message-sticky", inputs: ["notification"], exportAs: ["muiNotificationMessageSticky"] }, { kind: "pipe", type: i1.AsyncPipe, name: "async" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: NotificationCenterAlertsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'mui-notification-alerts', exportAs: 'muiNotificationAlerts', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"mui-nc-panel-body\">\r\n  <div class=\"mui-nc-panel-details\">\r\n    <ng-template ngFor let-item [ngForOf]=\"notifications | async\">\r\n      <mui-notification-message-sticky *ngIf=\"item.sticky && item.type !== 'NEWS'\"\r\n          [notification]=\"item\"></mui-notification-message-sticky>\r\n      <mui-notification-message *ngIf=\"!item.sticky && item.type !== 'NEWS'\" [notification]=\"item\"\r\n          (notificationDismiss)=\"onNotificationAlertDismiss($event)\" (messageClickOptionalAction)=\"onMessageClickOptionalAction($event)\"></mui-notification-message>\r\n    </ng-template>\r\n  </div>\r\n  <div class=\"mui-nc-panel-actions\">\r\n    <button mat-stroked-button\r\n        color=\"primary\"\r\n        type=\"button\"\r\n        class=\"mui-btn-close\"\r\n        (click)=\"onClosePanel()\"\r\n        i18n=\"@@nc_closebtn\">\r\n      Close\r\n    </button>\r\n    <button mat-flat-button\r\n        type=\"button\"\r\n        color=\"primary\"\r\n        class=\"mui-btn-dismiss-all\"\r\n        (click)=\"onNotificationAlertDismissAll()\"\r\n        i18n=\"@@nc_dismiss_all\">Dismiss All\r\n    </button>\r\n  </div>\r\n</div>\r\n", styles: [":host{display:block;height:100%}.mui-nc-panel-body{height:100%;display:flex;flex-direction:column;justify-content:space-between}.mui-nc-panel-details{overflow-y:auto;overflow-x:hidden;padding:0 8px;margin:0}.mui-nc-panel-actions{text-align:center;padding:24px 0;flex:0 0 auto}.mui-btn-dismiss-all{margin-left:24px}\n"] }]
        }], propDecorators: { closePanel: [{
                type: Output
            }], dismissAlert: [{
                type: Output
            }], dismissAlertsAll: [{
                type: Output
            }], clickMessageOptionalAction: [{
                type: Output
            }], notifications: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLWFsZXJ0cy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9tYXBwLXVpL25vdGlmaWNhdGlvbi1jZW50ZXIvc3JjL2xpYi9jZW50ZXIvbm90aWZpY2F0aW9uLWFsZXJ0cy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9tYXBwLXVpL25vdGlmaWNhdGlvbi1jZW50ZXIvc3JjL2xpYi9jZW50ZXIvbm90aWZpY2F0aW9uLWFsZXJ0cy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7QUFhaEcsTUFBTSxPQUFPLGlDQUFpQztJQVI5QztRQVNZLGVBQVUsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ2hDLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQWdCLENBQUM7UUFDaEQscUJBQWdCLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUN0QywrQkFBMEIsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0tBb0IzRDtJQWhCQywwQkFBMEIsQ0FBQyxZQUEwQjtRQUNuRCxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBRUQsNkJBQTZCO1FBQzNCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUMvQixDQUFDO0lBRUQsWUFBWTtRQUNWLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDekIsQ0FBQztJQUVELDRCQUE0QixDQUFDLEtBQWE7UUFDeEMsSUFBSSxDQUFDLDBCQUEwQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM5QyxDQUFDOzsrSEF0QlUsaUNBQWlDO21IQUFqQyxpQ0FBaUMscVRDYjlDLGdwQ0EyQkE7NEZEZGEsaUNBQWlDO2tCQVI3QyxTQUFTOytCQUNFLHlCQUF5QixZQUN6Qix1QkFBdUIsbUJBR2hCLHVCQUF1QixDQUFDLE1BQU07OEJBSXJDLFVBQVU7c0JBQW5CLE1BQU07Z0JBQ0csWUFBWTtzQkFBckIsTUFBTTtnQkFDRyxnQkFBZ0I7c0JBQXpCLE1BQU07Z0JBQ0csMEJBQTBCO3NCQUFuQyxNQUFNO2dCQUVFLGFBQWE7c0JBQXJCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5cclxuaW1wb3J0IHsgTm90aWZpY2F0aW9uIH0gZnJvbSAnLi4vc2hhcmVkL21vZGVscy9ub3RpZmljYXRpb24nO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdtdWktbm90aWZpY2F0aW9uLWFsZXJ0cycsXHJcbiAgZXhwb3J0QXM6ICdtdWlOb3RpZmljYXRpb25BbGVydHMnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9ub3RpZmljYXRpb24tYWxlcnRzLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9ub3RpZmljYXRpb24tYWxlcnRzLmNvbXBvbmVudC5zY3NzJ10sXHJcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcclxufSlcclxuXHJcbmV4cG9ydCBjbGFzcyBOb3RpZmljYXRpb25DZW50ZXJBbGVydHNDb21wb25lbnQge1xyXG4gIEBPdXRwdXQoKSBjbG9zZVBhbmVsID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gIEBPdXRwdXQoKSBkaXNtaXNzQWxlcnQgPSBuZXcgRXZlbnRFbWl0dGVyPE5vdGlmaWNhdGlvbj4oKTtcclxuICBAT3V0cHV0KCkgZGlzbWlzc0FsZXJ0c0FsbCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICBAT3V0cHV0KCkgY2xpY2tNZXNzYWdlT3B0aW9uYWxBY3Rpb24gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gIEBJbnB1dCgpIG5vdGlmaWNhdGlvbnM6IE9ic2VydmFibGU8Tm90aWZpY2F0aW9uW10+O1xyXG5cclxuICBvbk5vdGlmaWNhdGlvbkFsZXJ0RGlzbWlzcyhub3RpZmljYXRpb246IE5vdGlmaWNhdGlvbik6IHZvaWQge1xyXG4gICAgdGhpcy5kaXNtaXNzQWxlcnQuZW1pdChub3RpZmljYXRpb24pO1xyXG4gIH1cclxuXHJcbiAgb25Ob3RpZmljYXRpb25BbGVydERpc21pc3NBbGwoKTogdm9pZCB7XHJcbiAgICB0aGlzLmRpc21pc3NBbGVydHNBbGwuZW1pdCgpO1xyXG4gIH1cclxuXHJcbiAgb25DbG9zZVBhbmVsKCk6IHZvaWQge1xyXG4gICAgdGhpcy5jbG9zZVBhbmVsLmVtaXQoKTtcclxuICB9XHJcblxyXG4gIG9uTWVzc2FnZUNsaWNrT3B0aW9uYWxBY3Rpb24oZXZlbnQ6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgdGhpcy5jbGlja01lc3NhZ2VPcHRpb25hbEFjdGlvbi5lbWl0KGV2ZW50KTtcclxuICB9XHJcblxyXG59XHJcbiIsIjxkaXYgY2xhc3M9XCJtdWktbmMtcGFuZWwtYm9keVwiPlxyXG4gIDxkaXYgY2xhc3M9XCJtdWktbmMtcGFuZWwtZGV0YWlsc1wiPlxyXG4gICAgPG5nLXRlbXBsYXRlIG5nRm9yIGxldC1pdGVtIFtuZ0Zvck9mXT1cIm5vdGlmaWNhdGlvbnMgfCBhc3luY1wiPlxyXG4gICAgICA8bXVpLW5vdGlmaWNhdGlvbi1tZXNzYWdlLXN0aWNreSAqbmdJZj1cIml0ZW0uc3RpY2t5ICYmIGl0ZW0udHlwZSAhPT0gJ05FV1MnXCJcclxuICAgICAgICAgIFtub3RpZmljYXRpb25dPVwiaXRlbVwiPjwvbXVpLW5vdGlmaWNhdGlvbi1tZXNzYWdlLXN0aWNreT5cclxuICAgICAgPG11aS1ub3RpZmljYXRpb24tbWVzc2FnZSAqbmdJZj1cIiFpdGVtLnN0aWNreSAmJiBpdGVtLnR5cGUgIT09ICdORVdTJ1wiIFtub3RpZmljYXRpb25dPVwiaXRlbVwiXHJcbiAgICAgICAgICAobm90aWZpY2F0aW9uRGlzbWlzcyk9XCJvbk5vdGlmaWNhdGlvbkFsZXJ0RGlzbWlzcygkZXZlbnQpXCIgKG1lc3NhZ2VDbGlja09wdGlvbmFsQWN0aW9uKT1cIm9uTWVzc2FnZUNsaWNrT3B0aW9uYWxBY3Rpb24oJGV2ZW50KVwiPjwvbXVpLW5vdGlmaWNhdGlvbi1tZXNzYWdlPlxyXG4gICAgPC9uZy10ZW1wbGF0ZT5cclxuICA8L2Rpdj5cclxuICA8ZGl2IGNsYXNzPVwibXVpLW5jLXBhbmVsLWFjdGlvbnNcIj5cclxuICAgIDxidXR0b24gbWF0LXN0cm9rZWQtYnV0dG9uXHJcbiAgICAgICAgY29sb3I9XCJwcmltYXJ5XCJcclxuICAgICAgICB0eXBlPVwiYnV0dG9uXCJcclxuICAgICAgICBjbGFzcz1cIm11aS1idG4tY2xvc2VcIlxyXG4gICAgICAgIChjbGljayk9XCJvbkNsb3NlUGFuZWwoKVwiXHJcbiAgICAgICAgaTE4bj1cIkBAbmNfY2xvc2VidG5cIj5cclxuICAgICAgQ2xvc2VcclxuICAgIDwvYnV0dG9uPlxyXG4gICAgPGJ1dHRvbiBtYXQtZmxhdC1idXR0b25cclxuICAgICAgICB0eXBlPVwiYnV0dG9uXCJcclxuICAgICAgICBjb2xvcj1cInByaW1hcnlcIlxyXG4gICAgICAgIGNsYXNzPVwibXVpLWJ0bi1kaXNtaXNzLWFsbFwiXHJcbiAgICAgICAgKGNsaWNrKT1cIm9uTm90aWZpY2F0aW9uQWxlcnREaXNtaXNzQWxsKClcIlxyXG4gICAgICAgIGkxOG49XCJAQG5jX2Rpc21pc3NfYWxsXCI+RGlzbWlzcyBBbGxcclxuICAgIDwvYnV0dG9uPlxyXG4gIDwvZGl2PlxyXG48L2Rpdj5cclxuIl19