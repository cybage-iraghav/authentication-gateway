import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import { DateTime } from 'luxon';
import { Subject } from 'rxjs';
import { filter, takeUntil } from 'rxjs/operators';
import { DISPLAY_STATES } from '../../shared/models/message';
import { messageDisplayAnimation } from '../animations';
import * as i0 from "@angular/core";
import * as i1 from "@angular/platform-browser";
import * as i2 from "../../shared/services/notification.service";
import * as i3 from "@angular/common";
import * as i4 from "@angular/material/tooltip";
export class MessageComponent {
    constructor(sanitizer, cd, ncs) {
        this.sanitizer = sanitizer;
        this.cd = cd;
        this.ncs = ncs;
        this.notificationDismiss = new EventEmitter();
        this.messageClickOptionalAction = new EventEmitter();
        this.messageDisplay = DISPLAY_STATES.collapsed;
        this.appearance = 'unify';
        this.iconClass = 'material-icons';
        this.expandIcon = 'expand_more';
        this.collapseIcon = 'expand_less';
        this.destroyed$ = new Subject();
    }
    ngOnChanges() {
        this.message = this.notification.messages[0];
        if (this.message.isExpanded) {
            this.toggleMessageViewState();
        }
        if (this.message.htmlContent && this.message.body) {
            this.message.bodyHtml = this.sanitizer.bypassSecurityTrustHtml(this.message.body);
        }
        if (this.notification.eventTime) {
            const dateTime = DateTime.fromISO(this.notification.eventTime);
            this.eventTimeRelative = dateTime.toRelative({ style: 'narrow' });
            this.eventTimeFormatted = dateTime.toFormat('f');
        }
    }
    ngOnInit() {
        this.ncs.panelOpenedChanges.pipe(takeUntil(this.destroyed$), filter(v => v === true))
            .subscribe(() => {
            this.eventTimeRelative = DateTime.fromISO(this.notification.eventTime)
                .toRelative({ style: 'short' });
            this.cd.markForCheck();
        });
        this.updateAppearance();
    }
    ngOnDestroy() {
        this.destroyed$.next();
        this.destroyed$.complete();
    }
    onDismiss(notification) {
        this.notificationDismiss.emit(notification);
    }
    toggleMessageViewState() {
        if (this.messageDisplay === DISPLAY_STATES.collapsed) {
            this.messageDisplay = DISPLAY_STATES.expanded;
        }
        else {
            this.messageDisplay = DISPLAY_STATES.collapsed;
        }
    }
    getTitle() {
        return this.message.headline;
    }
    onClickOptionalAction() {
        this.messageClickOptionalAction.emit(this.message.optionalActionLink);
    }
    updateAppearance() {
        this.appearance = this.ncs.appearance;
        if (this.appearance === 'unify') {
            this.iconClass = 'mui-icons';
            this.collapseIcon = 'chevron_down';
            this.expandIcon = 'chevron_left';
        }
        else {
            this.iconClass = 'material-icons';
            this.collapseIcon = 'expand_less';
            this.expandIcon = 'expand_more';
        }
    }
}
MessageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: MessageComponent, deps: [{ token: i1.DomSanitizer }, { token: i0.ChangeDetectorRef }, { token: i2.NotificationService }], target: i0.ɵɵFactoryTarget.Component });
MessageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.10", type: MessageComponent, selector: "mui-notification-message", inputs: { notification: "notification" }, outputs: { notificationDismiss: "notificationDismiss", messageClickOptionalAction: "messageClickOptionalAction" }, exportAs: ["muiNotificationMessage"], usesOnChanges: true, ngImport: i0, template: "<div class=\"{{notification.type | lowercase}}\">\r\n  <div class=\"mui-message-container\">\r\n    <div class=\"mui-title-container\">\r\n      <i class=\"{{ iconClass }} mui-message-icon {{ notification.type | lowercase }}\"\r\n          (click)=\"onDismiss(notification)\"></i>\r\n      <span class=\"mui-title\">{{getTitle()}}</span>\r\n      <span class=\"mui-expand\"\r\n          (click)=\"toggleMessageViewState()\">\r\n      <i [class]=\"iconClass\"\r\n          *ngIf=\"messageDisplay === 'collapsed'\">{{ expandIcon }}</i>\r\n      <i [class]=\"iconClass\"\r\n          *ngIf=\"messageDisplay === 'expanded'\">{{ collapseIcon }}</i>\r\n    </span>\r\n    </div>\r\n    <div class=\"mui-title-time\">{{eventTimeRelative}}</div>\r\n    <div class=\"mui-message-body\"\r\n        [@messageDisplayState]=\"messageDisplay\">\r\n      <div class=\"mui-message\">\r\n        <div *ngIf=\"!message.htmlContent\"\r\n            class=\"plaintext\">{{message.body}}</div>\r\n        <div *ngIf=\"message.htmlContent\"\r\n            class=\"htmlcontent\"\r\n            [innerHTML]=\"message.bodyHtml\"></div>\r\n      </div>\r\n      <div class=\"mui-message-image-container\"\r\n          *ngIf=\"message.imageUrl\">\r\n        <img class=\"mui-message-image\"\r\n            src=\"{{message.imageUrl}}\"/>\r\n      </div>\r\n      <div class=\"mui-message-actions\">\r\n        <div *ngIf=\"message.optionalActionLink\"\r\n            class=\"mui-message-actions-optional\"\r\n        >\r\n          <a *ngIf=\"message.optionalActionLink && notification.type === 'NEWS'\"\r\n              href=\"{{message.optionalActionLink}}\"\r\n              target=\"_blank\"\r\n              class=\"mui-btn-action\">{{message.optionalActionTitle}}</a>\r\n          <a *ngIf=\"message.optionalActionLink && notification.type !== 'NEWS'\"\r\n              class=\"mui-btn-action\"\r\n              [matTooltip]=\"message.optionalActionTitle ?? ''\"\r\n              matTooltipClass=\"mui-btn-action-tooltip\"\r\n              [matTooltipDisabled]=\"(message.optionalActionTitle?.length ?? 0) < 30\"\r\n              (click)=\"onClickOptionalAction()\">\r\n            <span>{{message.optionalActionTitle}}</span>\r\n          </a>\r\n        </div>\r\n        <div class=\"mui-message-actions-main\">\r\n          <span class=\"mui-timestamp\">{{ eventTimeFormatted }}</span>\r\n          <a *ngIf=\"notification.type !== 'NEWS'\"\r\n              class=\"mui-btn-dismiss\"\r\n              (click)=\"onDismiss(notification)\"\r\n              i18n=\"@@nc_dismiss_btn\">Dismiss</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n", styles: [".mui-message-container{margin:0;padding:16px 0 9px;overflow:hidden}.mui-title-container{display:flex;align-items:center;gap:8px;height:24px}.mui-message-actions{text-align:right;margin:8px 0 0 32px}.mui-message-actions a{cursor:pointer;display:inline-block;white-space:nowrap}.mui-message-actions .mui-btn-action{overflow:hidden;text-overflow:ellipsis;max-width:90%}.mui-message-actions-optional{margin-bottom:8px}.mui-message-actions-main{display:flex;justify-content:space-between}.mui-title{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;flex:1}.mui-title-time{text-align:right;padding-top:4px;height:20px}.mui-message{margin:8px 0 0 32px;overflow:auto;word-wrap:break-word}.mui-message .plaintext{white-space:pre-wrap}.mui-message .htmlcontent{white-space:normal}.mui-expand{cursor:pointer;height:24px;width:24px}.mui-message-image-container{text-align:left;margin-top:16px}.mui-message-image{max-width:100%}.mui-icons.mui-message-icon.news,.material-icons.mui-message-icon.news{display:none}.news .mui-message{margin:8px 0 0;white-space:pre-wrap}.news .mui-timestamp,.news .mui-title-time{display:none}\n", ".mui-message-icon{display:inline-block;cursor:pointer;text-align:center;vertical-align:middle;flex:0}.mui-snackbar-notification-container .mui-message-icon{height:24px;width:24px;line-height:24px;cursor:default}.material-icons{vertical-align:middle;font-size:20px}\n"], dependencies: [{ kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i4.MatTooltip, selector: "[matTooltip]", exportAs: ["matTooltip"] }, { kind: "pipe", type: i3.LowerCasePipe, name: "lowercase" }], animations: [messageDisplayAnimation], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: MessageComponent, decorators: [{
            type: Component,
            args: [{ selector: 'mui-notification-message', exportAs: 'muiNotificationMessage', animations: [messageDisplayAnimation], changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"{{notification.type | lowercase}}\">\r\n  <div class=\"mui-message-container\">\r\n    <div class=\"mui-title-container\">\r\n      <i class=\"{{ iconClass }} mui-message-icon {{ notification.type | lowercase }}\"\r\n          (click)=\"onDismiss(notification)\"></i>\r\n      <span class=\"mui-title\">{{getTitle()}}</span>\r\n      <span class=\"mui-expand\"\r\n          (click)=\"toggleMessageViewState()\">\r\n      <i [class]=\"iconClass\"\r\n          *ngIf=\"messageDisplay === 'collapsed'\">{{ expandIcon }}</i>\r\n      <i [class]=\"iconClass\"\r\n          *ngIf=\"messageDisplay === 'expanded'\">{{ collapseIcon }}</i>\r\n    </span>\r\n    </div>\r\n    <div class=\"mui-title-time\">{{eventTimeRelative}}</div>\r\n    <div class=\"mui-message-body\"\r\n        [@messageDisplayState]=\"messageDisplay\">\r\n      <div class=\"mui-message\">\r\n        <div *ngIf=\"!message.htmlContent\"\r\n            class=\"plaintext\">{{message.body}}</div>\r\n        <div *ngIf=\"message.htmlContent\"\r\n            class=\"htmlcontent\"\r\n            [innerHTML]=\"message.bodyHtml\"></div>\r\n      </div>\r\n      <div class=\"mui-message-image-container\"\r\n          *ngIf=\"message.imageUrl\">\r\n        <img class=\"mui-message-image\"\r\n            src=\"{{message.imageUrl}}\"/>\r\n      </div>\r\n      <div class=\"mui-message-actions\">\r\n        <div *ngIf=\"message.optionalActionLink\"\r\n            class=\"mui-message-actions-optional\"\r\n        >\r\n          <a *ngIf=\"message.optionalActionLink && notification.type === 'NEWS'\"\r\n              href=\"{{message.optionalActionLink}}\"\r\n              target=\"_blank\"\r\n              class=\"mui-btn-action\">{{message.optionalActionTitle}}</a>\r\n          <a *ngIf=\"message.optionalActionLink && notification.type !== 'NEWS'\"\r\n              class=\"mui-btn-action\"\r\n              [matTooltip]=\"message.optionalActionTitle ?? ''\"\r\n              matTooltipClass=\"mui-btn-action-tooltip\"\r\n              [matTooltipDisabled]=\"(message.optionalActionTitle?.length ?? 0) < 30\"\r\n              (click)=\"onClickOptionalAction()\">\r\n            <span>{{message.optionalActionTitle}}</span>\r\n          </a>\r\n        </div>\r\n        <div class=\"mui-message-actions-main\">\r\n          <span class=\"mui-timestamp\">{{ eventTimeFormatted }}</span>\r\n          <a *ngIf=\"notification.type !== 'NEWS'\"\r\n              class=\"mui-btn-dismiss\"\r\n              (click)=\"onDismiss(notification)\"\r\n              i18n=\"@@nc_dismiss_btn\">Dismiss</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n", styles: [".mui-message-container{margin:0;padding:16px 0 9px;overflow:hidden}.mui-title-container{display:flex;align-items:center;gap:8px;height:24px}.mui-message-actions{text-align:right;margin:8px 0 0 32px}.mui-message-actions a{cursor:pointer;display:inline-block;white-space:nowrap}.mui-message-actions .mui-btn-action{overflow:hidden;text-overflow:ellipsis;max-width:90%}.mui-message-actions-optional{margin-bottom:8px}.mui-message-actions-main{display:flex;justify-content:space-between}.mui-title{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;flex:1}.mui-title-time{text-align:right;padding-top:4px;height:20px}.mui-message{margin:8px 0 0 32px;overflow:auto;word-wrap:break-word}.mui-message .plaintext{white-space:pre-wrap}.mui-message .htmlcontent{white-space:normal}.mui-expand{cursor:pointer;height:24px;width:24px}.mui-message-image-container{text-align:left;margin-top:16px}.mui-message-image{max-width:100%}.mui-icons.mui-message-icon.news,.material-icons.mui-message-icon.news{display:none}.news .mui-message{margin:8px 0 0;white-space:pre-wrap}.news .mui-timestamp,.news .mui-title-time{display:none}\n", ".mui-message-icon{display:inline-block;cursor:pointer;text-align:center;vertical-align:middle;flex:0}.mui-snackbar-notification-container .mui-message-icon{height:24px;width:24px;line-height:24px;cursor:default}.material-icons{vertical-align:middle;font-size:20px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.DomSanitizer }, { type: i0.ChangeDetectorRef }, { type: i2.NotificationService }]; }, propDecorators: { notificationDismiss: [{
                type: Output
            }], messageClickOptionalAction: [{
                type: Output
            }], notification: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,