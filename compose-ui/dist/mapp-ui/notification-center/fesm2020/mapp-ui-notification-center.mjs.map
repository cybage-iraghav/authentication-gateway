{"version":3,"file":"mapp-ui-notification-center.mjs","sources":["../../../../projects/mapp-ui/notification-center/src/lib/shared/models/message.ts","../../../../projects/mapp-ui/notification-center/src/lib/messages/animations.ts","../../../../projects/mapp-ui/notification-center/src/lib/shared/models/notification.ts","../../../../projects/mapp-ui/notification-center/src/lib/shared/models/notification-tabs.ts","../../../../projects/mapp-ui/notification-center/src/lib/shared/models/configurations.ts","../../../../projects/mapp-ui/notification-center/src/lib/shared/services/local-cache.service.ts","../../../../projects/mapp-ui/notification-center/src/lib/shared/services/backend.service.ts","../../../../projects/mapp-ui/notification-center/src/lib/messages/notification-snackbar/notification-snackbar.component.ts","../../../../projects/mapp-ui/notification-center/src/lib/messages/notification-snackbar/notification-snackbar.component.html","../../../../projects/mapp-ui/notification-center/src/lib/shared/services/toast-notification.service.ts","../../../../projects/mapp-ui/notification-center/src/lib/shared/services/notification.service.ts","../../../../projects/mapp-ui/notification-center/src/lib/messages/alert/message.component.ts","../../../../projects/mapp-ui/notification-center/src/lib/messages/alert/message.component.html","../../../../projects/mapp-ui/notification-center/src/lib/messages/sticky/message-sticky.component.ts","../../../../projects/mapp-ui/notification-center/src/lib/messages/sticky/message-sticky.component.html","../../../../projects/mapp-ui/notification-center/src/lib/center/notification-alerts.component.ts","../../../../projects/mapp-ui/notification-center/src/lib/center/notification-alerts.component.html","../../../../projects/mapp-ui/notification-center/src/lib/center/notification-news.component.ts","../../../../projects/mapp-ui/notification-center/src/lib/center/notification-news.component.html","../../../../projects/mapp-ui/notification-center/src/lib/center/notification-center.component.ts","../../../../projects/mapp-ui/notification-center/src/lib/center/notification-center.component.html","../../../../projects/mapp-ui/notification-center/src/lib/notification-center.module.ts","../../../../projects/mapp-ui/notification-center/src/lib/shared/services/mock-messages.ts","../../../../projects/mapp-ui/notification-center/src/lib/shared/services/backend-mock.service.ts","../../../../projects/mapp-ui/notification-center/src/lib/shared/models/volatile-notification.ts","../../../../projects/mapp-ui/notification-center/src/public_api.ts","../../../../projects/mapp-ui/notification-center/src/mapp-ui-notification-center.ts"],"sourcesContent":["/**\r\n * The message holds the actual content for a notification to be displayed on screen.\r\n * The presence of the body property controls how the notification is displayed:\r\n * headline only: Snackbar only\r\n * headline + body: Snackbar + notification message\r\n * Further details {@link https://wiki.mapp.tools/x/urH6B|here}\r\n */\r\nimport { SafeHtml } from '@angular/platform-browser';\r\n\r\nexport interface Message {\r\n  id?: number;\r\n  locale?: string;\r\n  headline: string;\r\n  body?: string;\r\n  optionalActionTitle?: string;\r\n  optionalActionLink?: string;\r\n  imageUrl?: string;\r\n  isExpanded?: boolean;\r\n  bodyHtml?: SafeHtml;\r\n  htmlContent?: boolean;\r\n}\r\n\r\n\r\nexport const DISPLAY_STATES = {\r\n  collapsed: 'collapsed',\r\n  expanded: 'expanded'\r\n};\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { DISPLAY_STATES } from '../shared/models/message';\r\n\r\n/**\r\n * Expand / collapse animation in use by the notification messages\r\n */\r\nexport const messageDisplayAnimation = trigger('messageDisplayState', [\r\n  state(DISPLAY_STATES.collapsed, style({\r\n    height: '0px',\r\n    visibility: 'hidden'\r\n  })),\r\n  state(DISPLAY_STATES.expanded, style({\r\n    height: '*',\r\n    visibility: 'visible'\r\n  })),\r\n  transition('collapsed <=> expanded', animate('150ms cubic-bezier(0.4,0.0,0.2,1)'))\r\n])\r\n","import {Message} from './message';\r\nimport { VolatileNotification } from './volatile-notification';\r\n\r\nexport type NotificationType = 'ERROR' | 'WARNING' | 'SUCCESS' | 'COUNTDOWN' | 'INFO' | 'NEWS';\r\n\r\nexport interface NotificationAudience {\r\n  id: number;\r\n  customerId: string;\r\n  userId: string;\r\n  datacenter: string;\r\n  database: string;\r\n}\r\n\r\nexport class Notification {\r\n  id: number;\r\n  type: NotificationType;\r\n  eventTime: string;\r\n  updateTime?: string;\r\n  expiryTime?: string;\r\n  source?: string;\r\n  sticky: boolean;\r\n  messages: Message[];\r\n  audiences?: NotificationAudience[];\r\n  errorDetails?: unknown;\r\n  isVolatile? = false;\r\n  seen? = false;\r\n\r\n  /**\r\n   * Create a full Notification from a VolatileNotification by generating missing properties.\r\n   * @param vn The VolatileNotification to be converted\r\n   * @returns full Notification object with auto-generated id and eventTime\r\n   */\r\n  static fromVolatile(vn: VolatileNotification): Notification {\r\n    const notification = new Notification();\r\n    notification.messages = [vn.message];\r\n    notification.type = vn.type;\r\n    notification.id = Date.now();\r\n    notification.eventTime = new Date().toISOString();\r\n    notification.sticky = false;\r\n    notification.isVolatile = true;\r\n\r\n    return notification;\r\n  }\r\n\r\n  static isVolatileNotification(n: Notification | VolatileNotification): n is VolatileNotification {\r\n    const notification = n as Notification;\r\n    return notification.id === undefined && notification.eventTime === undefined;\r\n  }\r\n}\r\n","export enum NotificationTabs {\r\n  None = -1,\r\n  AlertsTab = 0,\r\n  NewsTab = 1\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { ApiConfigOptions } from './api-config';\r\n/**\r\n * Configuration for local storage\r\n */\r\nexport class LocalStorageConfig {\r\n  /**\r\n   * @param clientDataStoreBackend key-name under which the notifications from backend will be stored.\r\n   * @param clientDataStoreVolatile key-name under which the volatile notifications will be stored.\r\n   * @param clientDataStoreType type of local storage to use. Defaults to local\r\n   */\r\n  constructor(\r\n    public clientDataStoreBackend = 'nc-notification-center-messages-backend',\r\n    public clientDataStoreVolatile = 'nc-notification-center-messages-volatile',\r\n    public clientDataStoreType: LocalDatastoreType = 'local') {\r\n  }\r\n}\r\n\r\n/**\r\n * Type of local data storage. Either session or local\r\n */\r\nexport type LocalDatastoreType = 'session' | 'local';\r\n\r\n/**\r\n * Configuration options for the notification center panel\r\n */\r\nexport class PanelConfig {\r\n  /**\r\n   * @param topOffset Define offset for the notification panel from the top of the viewport.\r\n   * Defaults to 54px (for usage with mui-app-header). When used with mui-top-navigation component, use 48px.\r\n   */\r\n  constructor(public topOffset = '48px') {\r\n  }\r\n}\r\n\r\nexport const NC_API_CONFIG = new InjectionToken<ApiConfigOptions>('nc.apiConfig');\r\n\r\nexport type NCAppearance = 'legacy' | 'unify';\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { LocalStorageConfig } from '../models/configurations';\r\nimport { Notification } from '../models/notification';\r\n\r\n/**\r\n * Service for handling local caching of notifications, either in local storage or session storage.\r\n * By default, notifications will be cached in the local storage.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class LocalCacheService {\r\n\r\n  private webStorage: Storage;\r\n\r\n  // TODO make config injectable again\r\n  private config: LocalStorageConfig;\r\n\r\n  constructor() {\r\n    this.config = new LocalStorageConfig();\r\n    this.webStorage = this.config.clientDataStoreType === 'session' ? sessionStorage : localStorage;\r\n  }\r\n\r\n  observeBackendNotifications(notifications: Observable<Notification[]>): void {\r\n    this.observeNotifications(notifications, this.config.clientDataStoreBackend);\r\n  }\r\n\r\n  observeVolatileNotifications(notifications: Observable<Notification[]>): void {\r\n    this.observeNotifications(notifications, this.config.clientDataStoreVolatile);\r\n  }\r\n\r\n  private observeNotifications(notifications: Observable<Notification[]>, storageKey: string): void {\r\n    notifications.subscribe(\r\n      (notificationsData) => {\r\n        this.webStorage.setItem(storageKey, JSON.stringify(notificationsData));\r\n      }\r\n    );\r\n  }\r\n\r\n  get backendNotifications(): Notification[] {\r\n    return this.getCachedNotifications(this.config.clientDataStoreBackend);\r\n  }\r\n\r\n  get volatileNotifications(): Notification[] {\r\n    return this.getCachedNotifications(this.config.clientDataStoreVolatile);\r\n  }\r\n\r\n  private getCachedNotifications(storageKey: string): Notification[] {\r\n    const storedNotifications = this.webStorage.getItem(storageKey);\r\n    return storedNotifications != null ? JSON.parse(storedNotifications) : [];\r\n  }\r\n\r\n}\r\n","import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { Observable, EMPTY } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Notification } from '../models/notification';\r\nimport { NC_API_CONFIG } from '../models/configurations';\r\nimport { ApiConfigOptions } from '../models/api-config';\r\nimport { BackendServiceInterface } from './backend.service.interface';\r\n\r\n/**\r\n * The BackendService handles http connection to the nc-service API and provides\r\n * wrapper functions around the individual endpoints.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class BackendService implements BackendServiceInterface {\r\n\r\n  constructor(private http: HttpClient,\r\n              @Inject(NC_API_CONFIG) @Optional() private config: ApiConfigOptions) {\r\n\r\n    if (this.config === null) {\r\n      console.warn('No configuration set for NC API connection. NC will work in UI-only mode.');\r\n    }\r\n  }\r\n\r\n  getNotifications(): Observable<Notification[]> {\r\n    if (this.config === null) {\r\n      return EMPTY;\r\n    }\r\n\r\n    const url = `${this.config.baseUrl}active${this.buildUserQuery()}`;\r\n    return this.http.get<Notification[]>(url);\r\n  }\r\n\r\n  getSessionId(): string {\r\n    if (this.config === null) {\r\n      return '';\r\n    }\r\n\r\n    if (this.config.connectionMode === 'cep') {\r\n      return this.config.sessionId || '';\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  dismissMessages(nIds: Array<number>): void {\r\n    if (this.config !== null) {\r\n      const dismissQuery = this.config.connectionMode === 'cep' ? this.config.sessionId || '' : '/';\r\n      const url = `${this.config.baseUrl}dismiss${dismissQuery}`;\r\n      let payload: any;\r\n      if (this.config.userInfo) {\r\n        payload = Object.assign({}, this.config.userInfo);\r\n        payload.notificationIds = nIds;\r\n      } else {\r\n        payload = nIds;\r\n      }\r\n\r\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n\r\n      this.http.post(url, payload, { headers })\r\n          .subscribe({\r\n                error: (error) => {\r\n                  console.error('NC: Dismiss call error', error);\r\n                }\r\n              }\r\n          );\r\n    }\r\n  }\r\n\r\n  getNewNotifications(sinceDate: string): Observable<Notification[]> {\r\n    if (this.config === null) {\r\n      return EMPTY;\r\n    }\r\n\r\n    let url = `${this.config.baseUrl}active/latest${this.buildUserQuery()}`;\r\n    url += this.config.connectionMode === 'cep' ? '?' : '&';\r\n    url += `since=${sinceDate}`;\r\n\r\n    return this.http.get<Notification[]>(url);\r\n  }\r\n\r\n  private buildUserQuery(): string {\r\n    if (this.config.connectionMode === 'cep') {\r\n      return this.config.sessionId || '';\r\n    } else {\r\n      const userInfo = this.config.userInfo;\r\n      if (typeof userInfo === 'object') {\r\n        let locale = 'en';\r\n        if (typeof userInfo.locale === 'string') {\r\n          locale = userInfo.locale;\r\n        }\r\n        return `?datacenter=${userInfo.datacenter}&database=${userInfo.database}&customerId=${userInfo.customerId}`\r\n          + `&userId=${userInfo.userId}&locale=${locale}`;\r\n      }\r\n\r\n      return '';\r\n    }\r\n  }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, Inject } from '@angular/core';\r\nimport { MAT_SNACK_BAR_DATA, MatSnackBarRef } from '@angular/material/snack-bar';\r\nimport { NCAppearance } from '../../shared/models/configurations';\r\nimport { Notification } from '../../shared/models/notification';\r\n\r\nexport interface NotificationSnackbarData {\r\n  notification: Notification;\r\n  showButton: boolean;\r\n  appearance: NCAppearance;\r\n}\r\n\r\n@Component({\r\n  selector: 'mui-notification-snackbar',\r\n  templateUrl: './notification-snackbar.component.html',\r\n  styleUrls: ['./notification-snackbar.component.css', '../icons.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class NotificationSnackbarComponent {\r\n  iconClass: string;\r\n\r\n  constructor(\r\n      public snackBarRef: MatSnackBarRef<NotificationSnackbarComponent>,\r\n      @Inject(MAT_SNACK_BAR_DATA) public data: NotificationSnackbarData) {\r\n    this.iconClass = data.appearance === 'legacy' ? 'material-icons' : 'mui-icons';\r\n  }\r\n\r\n  get hasAction(): boolean {\r\n    return this.data.showButton;\r\n  }\r\n\r\n  action(): void {\r\n    this.snackBarRef.dismissWithAction();\r\n  }\r\n\r\n}\r\n","<div class=\"mui-snackbar-notification-container\">\r\n  <div matSnackBarLabel>\r\n    <i class=\"{{ iconClass }} mui-message-icon {{ data.notification.type | lowercase }}\"></i>\r\n    {{ data.notification.messages[0].headline }}\r\n  </div>\r\n  <div class=\"mat-simple-snackbar-action\"\r\n      *ngIf=\"hasAction\"\r\n      matSnackBarActions\r\n  >\r\n    <button mat-button\r\n        matSnackBarAction\r\n        (click)=\"action()\" i18n=\"@@nc_snackbar_details_btn\">Details</button>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport type { MatSnackBarConfig, MatSnackBarRef } from '@angular/material/snack-bar';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {\r\n  NotificationSnackbarComponent,\r\n  NotificationSnackbarData\r\n} from '../../messages/notification-snackbar/notification-snackbar.component';\r\nimport { NCAppearance } from '../models/configurations';\r\nimport { Notification } from '../models/notification';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ToastNotificationService {\r\n\r\n  private MSG_DURATION = 5000;\r\n  private mdSnackBarRef: MatSnackBarRef<NotificationSnackbarComponent>;\r\n  private mdSnackBarConfig: MatSnackBarConfig<NotificationSnackbarData> = {};\r\n\r\n  constructor(public snackBar: MatSnackBar) {\r\n    this.mdSnackBarConfig.duration = this.MSG_DURATION;\r\n    this.mdSnackBarConfig.panelClass = ['nc-snackbar-container'];\r\n  }\r\n\r\n  get snackBarRef(): MatSnackBarRef<NotificationSnackbarComponent> {\r\n    return this.mdSnackBarRef;\r\n  }\r\n\r\n  openSnackBar(\r\n      notification: Notification,\r\n      showButton = false,\r\n      onAction?: () => void,\r\n      appearance: NCAppearance = 'unify'): void {\r\n\r\n    this.mdSnackBarConfig.data = {\r\n      notification,\r\n      showButton,\r\n      appearance\r\n    };\r\n    this.mdSnackBarRef = this.snackBar.openFromComponent(NotificationSnackbarComponent, this.mdSnackBarConfig);\r\n    this.mdSnackBarRef.onAction()\r\n        .subscribe(\r\n            () => {\r\n              if (onAction) {\r\n                onAction();\r\n              }\r\n            }\r\n        );\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DateTime } from 'luxon';\r\nimport { BehaviorSubject, Observable, combineLatest, timer } from 'rxjs';\r\nimport { map, takeWhile } from 'rxjs/operators';\r\nimport { NCAppearance } from '../models/configurations';\r\n\r\nimport { BackendService } from './backend.service';\r\nimport { LocalCacheService } from './local-cache.service';\r\nimport { Notification } from '../models/notification';\r\nimport { ToastNotificationService } from './toast-notification.service';\r\nimport { VolatileNotification } from '../models/volatile-notification';\r\nimport { NotificationTabs } from '../models/notification-tabs';\r\n\r\n/**\r\n * Main service class for data handling on notifications.\r\n * This service will coordinate all different data sources of the notifications: volatile, local cache, api responses\r\n * and provide a combined list to the view component.\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class NotificationService {\r\n\r\n  private readonly backendStream: BehaviorSubject<Notification[]>; // messages from backend api\r\n  private readonly volatileStream: BehaviorSubject<Notification[]>; // volatile messages\r\n  private readonly combined: BehaviorSubject<Notification[]>; // both combined\r\n  private unseenCount: BehaviorSubject<number>;\r\n  private readonly pollIntervalDuration = 30000;\r\n  private lastFetchTime: string;\r\n  private isActive = false;\r\n  private panelOpened: BehaviorSubject<boolean>;\r\n\r\n  activeTab = NotificationTabs.None;\r\n\r\n  /** support legacy and unify theme appearance */\r\n  appearance: NCAppearance = 'unify';\r\n\r\n  /**\r\n   * Sort notifications by eventTime in descending order\r\n   */\r\n  static sort(notifications: Notification[]): void {\r\n    notifications.sort((a, b) => {\r\n        if (a.sticky === b.sticky) {\r\n          const timeA = DateTime.fromISO(a.eventTime).valueOf();\r\n          const timeB = DateTime.fromISO(b.eventTime).valueOf();\r\n          return timeB - timeA;\r\n        } else {\r\n          return a.sticky ? -1 : 1;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Mark the notification as seen if it is displayed in the currently open tab\r\n   */\r\n  static markSeenIfNeeded(notification: Notification, activeTab: NotificationTabs): void {\r\n    if (activeTab === NotificationTabs.NewsTab && notification.type === 'NEWS' ||\r\n      activeTab === NotificationTabs.AlertsTab && notification.type !== 'NEWS') {\r\n      notification.seen = true;\r\n    }\r\n  }\r\n\r\n  constructor(private localCacheService: LocalCacheService, private backendService: BackendService,\r\n              private toastNotificationService: ToastNotificationService) {\r\n    this.backendStream = new BehaviorSubject<Notification[]>([]);\r\n    this.volatileStream = new BehaviorSubject<Notification[]>([]);\r\n    this.combined = new BehaviorSubject<Notification[]>([]);\r\n    this.unseenCount = new BehaviorSubject(0);\r\n    this.panelOpened = new BehaviorSubject<boolean>(false);\r\n  }\r\n\r\n  /**\r\n   * Initialize service operation.\r\n   * - Load data from browser storage\r\n   * - Call API for initial list of notifications\r\n   * - init unseen counter\r\n   * - schedule period update of notifications from API\r\n   *\r\n   * This should be called by main nc component once it is ready.\r\n   */\r\n  init(): void {\r\n    this.loadInitialBackendNotifications();\r\n    timer(this.pollIntervalDuration, this.pollIntervalDuration).pipe(takeWhile(() => this.isActive))\r\n    .subscribe(() => (this.fetchLatestNotifications()));\r\n\r\n    this.volatileStream.next(this.localCacheService.volatileNotifications);\r\n\r\n    combineLatest([this.backendStream, this.volatileStream])\r\n      .pipe(\r\n        map(([bs, vs]) => {\r\n          const all = bs.concat(vs);\r\n          NotificationService.sort(all);\r\n          return all;\r\n        })\r\n      )\r\n      .subscribe(this.combined);\r\n\r\n    this.generateUnseenCount();\r\n\r\n    this.localCacheService.observeVolatileNotifications(this.volatileStream.asObservable());\r\n    this.isActive = true;\r\n  }\r\n\r\n  /**\r\n   * Stop the periodic calls for getting new notifications.\r\n   * This is used when nc component is destroyed.\r\n   */\r\n  stopRefresh(): void {\r\n    this.isActive = false;\r\n  }\r\n\r\n  get notifications(): Observable<Notification[]> {\r\n    return this.combined.asObservable();\r\n  }\r\n\r\n  get unseenCounter(): Observable<number> {\r\n    return this.unseenCount.asObservable();\r\n  }\r\n\r\n  get sessionId(): string {\r\n    return this.backendService.getSessionId();\r\n  }\r\n\r\n  /**\r\n   * Get all relevant notifications from backend for first init\r\n   */\r\n  private loadInitialBackendNotifications(): void {\r\n    const getLastUpdateTime = (notifications: Notification[]) => {\r\n      if (notifications.length === 0) {\r\n        return new Date().toISOString();\r\n      }\r\n      const first = notifications[0];\r\n      return first.updateTime ? first.updateTime : first.eventTime;\r\n    };\r\n\r\n    this.backendService.getNotifications().subscribe(\r\n      val => {\r\n        this.mergeBackendSeenState(val);\r\n        this.backendStream.next(val);\r\n        this.localCacheService.observeBackendNotifications(this.backendStream.asObservable());\r\n        this.lastFetchTime = getLastUpdateTime(val);\r\n\r\n        // console.log('initial load of notifications', val);\r\n      },\r\n      error => {\r\n        // api call error case: fall back to stored notifications\r\n        const storedNotifications = this.localCacheService.backendNotifications;\r\n        this.backendStream.next(storedNotifications);\r\n        this.lastFetchTime = getLastUpdateTime(storedNotifications);\r\n\r\n        console.warn('Error retrieving notifications, using local storage data instead', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Check which notifications are already marked as seen in the local storage data and apply to\r\n   * incoming notifications from API. Also mark notifications as seen which are in the current visible tab\r\n   */\r\n  private mergeBackendSeenState(notifications: Notification[]): void {\r\n    const storedNotifications = this.localCacheService.backendNotifications;\r\n    notifications.forEach(n => {\r\n      const found = storedNotifications.find(s => ((s.id === n.id) && s.seen));\r\n\r\n      if (found) {\r\n        n.seen = true;\r\n        // console.log('Already seen', n.id);\r\n      } else {\r\n        NotificationService.markSeenIfNeeded(n, this.activeTab);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * For subsequent repeated polling. Fetch new notifications only since last poll time.\r\n   */\r\n  private fetchLatestNotifications(): void {\r\n    const notifications = this.backendStream.getValue();\r\n\r\n    this.backendService.getNewNotifications(this.lastFetchTime).subscribe(\r\n      val => {\r\n        if (val.length > 0) {\r\n\r\n          val.forEach(n => {\r\n            // first remove existing notifications which were updated\r\n            const index = notifications.findIndex(oldn => oldn.id === n.id);\r\n            if (index > -1) {\r\n              notifications.splice(index, 1);\r\n            }\r\n            // mark notifications as seen already, based on open tab\r\n            NotificationService.markSeenIfNeeded(n, this.activeTab);\r\n          });\r\n\r\n          // add new notifications to the beginning of existing, as they are supposed to be newer\r\n          const merged = val.concat(notifications);\r\n\r\n          this.backendStream.next(merged);\r\n          this.lastFetchTime = new Date().toISOString();\r\n        }\r\n        // console.log('New incoming notifications from backend', val);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Push a new volatile notification. Depending on the message content a Snackbar message or Snackbar + Notification\r\n   * will be generated.\r\n   * message has headline only: Snackbar\r\n   * message has headline and body: Snackbar + Notification\r\n   * @param notification the new notification to push\r\n   */\r\n  addNotification(notification: Notification | VolatileNotification): void {\r\n    if (!this.isActive) {\r\n      throw new Error('NotificationService has not been initialized yet or is not in active mode. Please make' +\r\n        ' sure to have the notification center component placed in your app.');\r\n    }\r\n\r\n    if (Notification.isVolatileNotification(notification)) {\r\n      notification = Notification.fromVolatile(notification);\r\n    } else {\r\n      notification.isVolatile = true;\r\n    }\r\n\r\n    if (notification.messages[0].body === undefined || notification.messages[0].body === '') {\r\n      this.toastNotificationService.openSnackBar(notification, false, undefined, this.appearance);\r\n    } else {\r\n      this.toastNotificationService.openSnackBar(notification, true, this.openPanel.bind(this), this.appearance);\r\n      notification.messages[0].isExpanded = true;\r\n      NotificationService.markSeenIfNeeded(notification, this.activeTab);\r\n\r\n      const notifications = this.volatileStream.getValue();\r\n      notifications.push(notification);\r\n\r\n      this.volatileStream.next(notifications);\r\n    }\r\n    // console.log('new notification was added:', notification);\r\n  }\r\n\r\n  /**\r\n   * Dismiss a specific notification\r\n   * @param notification the notification to be dismissed\r\n   */\r\n  dismissNotification(notification: Notification): void {\r\n    const removeAndUpdate = (stream: BehaviorSubject<Notification[]>) => {\r\n      const notifications = stream.getValue();\r\n      const index = notifications.findIndex(el => el.id === notification.id);\r\n      if (index > -1) {\r\n        notifications.splice(index, 1);\r\n        stream.next(notifications);\r\n      }\r\n    };\r\n\r\n    if (notification.isVolatile) {\r\n      removeAndUpdate(this.volatileStream);\r\n    } else {\r\n      this.backendService.dismissMessages([notification.id]);\r\n      removeAndUpdate(this.backendStream);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dismiss all normal notifications displayed in the Alerts tab. News and sticky notifications will remain.\r\n   */\r\n  dismissAllAlerts(): void {\r\n    // clear out everything but news and sticky's from backend stream\r\n    const notifications = this.backendStream.getValue();\r\n    const filtered: Notification[] = [];\r\n    const dismissedIds: number[] = [];\r\n\r\n    notifications.forEach(\r\n      (n) => {\r\n        if (n.type !== 'NEWS' && !n.sticky) {\r\n          dismissedIds.push(n.id);\r\n        } else if (n.type === 'NEWS' || n.sticky) {\r\n          filtered.push(n);\r\n        }\r\n      }\r\n    );\r\n    if (dismissedIds.length > 0) {\r\n      this.backendService.dismissMessages(dismissedIds);\r\n    }\r\n\r\n    // console.log('dismissing non-sticky alerts, remaining are:', filtered);\r\n    this.backendStream.next(filtered);\r\n\r\n    // volatile stream can be emptied\r\n    this.volatileStream.next([]);\r\n  }\r\n\r\n  /**\r\n   * Set all notifications displayed in a certain tab as seen.\r\n   * Called by notification panel when activating one of the tabs.\r\n   */\r\n  setNotificationsSeen(tab: NotificationTabs): void {\r\n    this.activeTab = tab;\r\n\r\n    const setSeen = (stream: BehaviorSubject<Notification[]>) => {\r\n      const notifications = stream.getValue();\r\n      notifications.forEach(n => NotificationService.markSeenIfNeeded(n, tab));\r\n      stream.next(notifications);\r\n    };\r\n\r\n    setSeen(this.backendStream);\r\n    setSeen(this.volatileStream);\r\n  }\r\n\r\n  /**\r\n   * Calculate the number of unseen notifications for each emission on the combined notifications observable.\r\n   * Emit new value on unseenCount observable if the counter value changes\r\n   */\r\n  private generateUnseenCount(): void {\r\n    this.combined.subscribe(notifications => {\r\n\r\n      const calcUnseen = (acc: number, n: Notification) => !n.seen ? ++acc : acc;\r\n      const count = notifications.reduce(calcUnseen, 0);\r\n      const oldCount = this.unseenCount.getValue();\r\n      if (count !== oldCount) {\r\n        this.unseenCount.next(count);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Observable which reports changes of the panel state when it is opened or closed\r\n   */\r\n  get panelOpenedChanges(): Observable<boolean> {\r\n    return this.panelOpened.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Report update of the notification panel state\r\n   * @param opened Whether the panel was opened or closed\r\n   */\r\n  updatePanelState(opened: boolean): void {\r\n    this.panelOpened.next(opened);\r\n  }\r\n\r\n  /**\r\n   * Open the notification center panel\r\n   */\r\n  openPanel(): void {\r\n    this.updatePanelState(true);\r\n  }\r\n}\r\n","import type { OnChanges, OnDestroy, OnInit } from '@angular/core';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { DateTime } from 'luxon';\r\nimport { Subject } from 'rxjs';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\nimport { NCAppearance } from '../../shared/models/configurations';\r\nimport { DISPLAY_STATES, Message } from '../../shared/models/message';\r\nimport { Notification } from '../../shared/models/notification';\r\nimport { NotificationService } from '../../shared/services/notification.service';\r\nimport { messageDisplayAnimation } from '../animations';\r\n\r\n\r\n@Component({\r\n  selector: 'mui-notification-message',\r\n  exportAs: 'muiNotificationMessage',\r\n  templateUrl: './message.component.html',\r\n  styleUrls: ['./message.component.scss', '../icons.css'],\r\n  animations: [messageDisplayAnimation],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MessageComponent implements OnChanges, OnInit, OnDestroy {\r\n  @Output() notificationDismiss = new EventEmitter<Notification>();\r\n  @Output() messageClickOptionalAction = new EventEmitter();\r\n  @Input() notification: Notification;\r\n\r\n  message: Message; // shortcut to first message\r\n  messageDisplay: string = DISPLAY_STATES.collapsed;\r\n  eventTimeRelative: string | null;\r\n  eventTimeFormatted: string | null;\r\n\r\n  appearance: NCAppearance = 'unify';\r\n  iconClass = 'material-icons';\r\n  expandIcon = 'expand_more';\r\n  collapseIcon = 'expand_less';\r\n\r\n  private destroyed$ = new Subject<void>();\r\n\r\n  constructor(\r\n      private sanitizer: DomSanitizer,\r\n      protected cd: ChangeDetectorRef,\r\n      protected ncs: NotificationService) {\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.message = this.notification.messages[0];\r\n    if (this.message.isExpanded) {\r\n      this.toggleMessageViewState();\r\n    }\r\n    if (this.message.htmlContent && this.message.body) {\r\n      this.message.bodyHtml = this.sanitizer.bypassSecurityTrustHtml(this.message.body);\r\n    }\r\n\r\n    if (this.notification.eventTime) {\r\n      const dateTime = DateTime.fromISO(this.notification.eventTime);\r\n      this.eventTimeRelative = dateTime.toRelative({ style: 'narrow' });\r\n      this.eventTimeFormatted = dateTime.toFormat('f');\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.ncs.panelOpenedChanges.pipe(\r\n        takeUntil(this.destroyed$),\r\n        filter(v => v === true)\r\n    )\r\n        .subscribe(() => {\r\n          this.eventTimeRelative = DateTime.fromISO(this.notification.eventTime)\r\n              .toRelative({ style: 'short' });\r\n          this.cd.markForCheck();\r\n        });\r\n\r\n    this.updateAppearance();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  onDismiss(notification: Notification): void {\r\n    this.notificationDismiss.emit(notification);\r\n  }\r\n\r\n  toggleMessageViewState(): void {\r\n    if (this.messageDisplay === DISPLAY_STATES.collapsed) {\r\n      this.messageDisplay = DISPLAY_STATES.expanded;\r\n    } else {\r\n      this.messageDisplay = DISPLAY_STATES.collapsed;\r\n    }\r\n  }\r\n\r\n  getTitle(): string {\r\n    return this.message.headline;\r\n  }\r\n\r\n  onClickOptionalAction(): void {\r\n    this.messageClickOptionalAction.emit(this.message.optionalActionLink);\r\n  }\r\n\r\n  protected updateAppearance(): void {\r\n    this.appearance = this.ncs.appearance;\r\n    if (this.appearance === 'unify') {\r\n      this.iconClass = 'mui-icons';\r\n      this.collapseIcon = 'chevron_down';\r\n      this.expandIcon = 'chevron_left';\r\n    } else {\r\n      this.iconClass = 'material-icons';\r\n      this.collapseIcon = 'expand_less';\r\n      this.expandIcon = 'expand_more';\r\n    }\r\n  }\r\n}\r\n","<div class=\"{{notification.type | lowercase}}\">\r\n  <div class=\"mui-message-container\">\r\n    <div class=\"mui-title-container\">\r\n      <i class=\"{{ iconClass }} mui-message-icon {{ notification.type | lowercase }}\"\r\n          (click)=\"onDismiss(notification)\"></i>\r\n      <span class=\"mui-title\">{{getTitle()}}</span>\r\n      <span class=\"mui-expand\"\r\n          (click)=\"toggleMessageViewState()\">\r\n      <i [class]=\"iconClass\"\r\n          *ngIf=\"messageDisplay === 'collapsed'\">{{ expandIcon }}</i>\r\n      <i [class]=\"iconClass\"\r\n          *ngIf=\"messageDisplay === 'expanded'\">{{ collapseIcon }}</i>\r\n    </span>\r\n    </div>\r\n    <div class=\"mui-title-time\">{{eventTimeRelative}}</div>\r\n    <div class=\"mui-message-body\"\r\n        [@messageDisplayState]=\"messageDisplay\">\r\n      <div class=\"mui-message\">\r\n        <div *ngIf=\"!message.htmlContent\"\r\n            class=\"plaintext\">{{message.body}}</div>\r\n        <div *ngIf=\"message.htmlContent\"\r\n            class=\"htmlcontent\"\r\n            [innerHTML]=\"message.bodyHtml\"></div>\r\n      </div>\r\n      <div class=\"mui-message-image-container\"\r\n          *ngIf=\"message.imageUrl\">\r\n        <img class=\"mui-message-image\"\r\n            src=\"{{message.imageUrl}}\"/>\r\n      </div>\r\n      <div class=\"mui-message-actions\">\r\n        <div *ngIf=\"message.optionalActionLink\"\r\n            class=\"mui-message-actions-optional\"\r\n        >\r\n          <a *ngIf=\"message.optionalActionLink && notification.type === 'NEWS'\"\r\n              href=\"{{message.optionalActionLink}}\"\r\n              target=\"_blank\"\r\n              class=\"mui-btn-action\">{{message.optionalActionTitle}}</a>\r\n          <a *ngIf=\"message.optionalActionLink && notification.type !== 'NEWS'\"\r\n              class=\"mui-btn-action\"\r\n              [matTooltip]=\"message.optionalActionTitle ?? ''\"\r\n              matTooltipClass=\"mui-btn-action-tooltip\"\r\n              [matTooltipDisabled]=\"(message.optionalActionTitle?.length ?? 0) < 30\"\r\n              (click)=\"onClickOptionalAction()\">\r\n            <span>{{message.optionalActionTitle}}</span>\r\n          </a>\r\n        </div>\r\n        <div class=\"mui-message-actions-main\">\r\n          <span class=\"mui-timestamp\">{{ eventTimeFormatted }}</span>\r\n          <a *ngIf=\"notification.type !== 'NEWS'\"\r\n              class=\"mui-btn-dismiss\"\r\n              (click)=\"onDismiss(notification)\"\r\n              i18n=\"@@nc_dismiss_btn\">Dismiss</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, OnDestroy } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { DateTime } from 'luxon';\r\nimport { Observable, Subscription, timer } from 'rxjs';\r\nimport { DISPLAY_STATES, Message } from '../../shared/models/message';\r\nimport { Notification } from '../../shared/models/notification';\r\nimport { NotificationService } from '../../shared/services/notification.service';\r\n\r\nimport { MessageComponent } from '../alert/message.component';\r\nimport { messageDisplayAnimation } from '../animations';\r\n\r\n@Component({\r\n  selector: 'mui-notification-message-sticky',\r\n  exportAs: 'muiNotificationMessageSticky',\r\n  templateUrl: './message-sticky.component.html',\r\n  styleUrls: ['../alert/message.component.scss', '../icons.css'],\r\n  animations: [messageDisplayAnimation],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MessageStickyComponent extends MessageComponent implements OnChanges, OnDestroy {\r\n\r\n  @Input() override notification: Notification;\r\n\r\n  override message: Message; // shortcut to first message\r\n  override messageDisplay: string = DISPLAY_STATES.expanded;\r\n  timeLeft: string | null = '';\r\n\r\n  private timerSubscription: Subscription;\r\n\r\n  constructor(\r\n      notificationService: NotificationService,\r\n      sanitizer: DomSanitizer,\r\n      cd: ChangeDetectorRef) {\r\n    super(sanitizer, cd, notificationService);\r\n  }\r\n\r\n  override ngOnChanges(): void {\r\n    this.message = this.notification.messages[0];\r\n    if (this.notification.type === 'COUNTDOWN') {\r\n      const updateTimer: Observable<number> = timer(0, 60000);\r\n      this.timerSubscription = updateTimer.subscribe(() => this.timeLeftCalc());\r\n    }\r\n  }\r\n\r\n  override ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n    this.timerSubscription?.unsubscribe();\r\n  }\r\n\r\n  timeLeftCalc(): void {\r\n    if (this.notification.expiryTime) {\r\n      const expiry = DateTime.fromISO(this.notification.expiryTime);\r\n      const duration = expiry.diff(DateTime.local());\r\n      const ms = duration.milliseconds;\r\n      if (ms < 1) {\r\n        this.timerSubscription.unsubscribe();\r\n        this.ncs.dismissNotification(this.notification);\r\n      } else {\r\n        this.timeLeft = expiry.toRelative({ style: 'short' });\r\n      }\r\n      this.cd.markForCheck();\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"sticky-message-container\">\r\n  <div class=\"mui-message-container\">\r\n    <div class=\"mui-title-container\">\r\n      <i class=\"{{ iconClass }} sticky-message-icon warning\"></i>\r\n      <span class=\"mui-title\">{{getTitle()}}</span>\r\n      <span class=\"mui-expand\"\r\n          (click)=\"toggleMessageViewState()\">\r\n      <i [class]=\"iconClass\"\r\n          *ngIf=\"messageDisplay === 'collapsed'\">{{ expandIcon }}</i>\r\n      <i [class]=\"iconClass\"\r\n          *ngIf=\"messageDisplay === 'expanded'\">{{ collapseIcon }}</i>\r\n    </span>\r\n    </div>\r\n    <div class=\"mui-title-time\"\r\n        *ngIf=\"notification.type === 'COUNTDOWN'\">\r\n      <span class=\"sticky-countdown\">{{ timeLeft }}</span>\r\n    </div>\r\n    <div class=\"mui-message-body\"\r\n        [@messageDisplayState]=\"messageDisplay\">\r\n      <div class=\"mui-message\">\r\n        <div class=\"plaintext\">{{message.body}}</div>\r\n      </div>\r\n      <div class=\"mui-message-actions\"\r\n          *ngIf=\"message.optionalActionLink\">\r\n        <a href=\"{{message.optionalActionLink}}\"\r\n            target=\"_blank\"\r\n            class=\"mui-btn-action\"\r\n            i18n=\"@@nc_more_details\"\r\n        >More Details</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Notification } from '../shared/models/notification';\r\n\r\n@Component({\r\n  selector: 'mui-notification-alerts',\r\n  exportAs: 'muiNotificationAlerts',\r\n  templateUrl: './notification-alerts.component.html',\r\n  styleUrls: ['./notification-alerts.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class NotificationCenterAlertsComponent {\r\n  @Output() closePanel = new EventEmitter();\r\n  @Output() dismissAlert = new EventEmitter<Notification>();\r\n  @Output() dismissAlertsAll = new EventEmitter();\r\n  @Output() clickMessageOptionalAction = new EventEmitter();\r\n\r\n  @Input() notifications: Observable<Notification[]>;\r\n\r\n  onNotificationAlertDismiss(notification: Notification): void {\r\n    this.dismissAlert.emit(notification);\r\n  }\r\n\r\n  onNotificationAlertDismissAll(): void {\r\n    this.dismissAlertsAll.emit();\r\n  }\r\n\r\n  onClosePanel(): void {\r\n    this.closePanel.emit();\r\n  }\r\n\r\n  onMessageClickOptionalAction(event: string): void {\r\n    this.clickMessageOptionalAction.emit(event);\r\n  }\r\n\r\n}\r\n","<div class=\"mui-nc-panel-body\">\r\n  <div class=\"mui-nc-panel-details\">\r\n    <ng-template ngFor let-item [ngForOf]=\"notifications | async\">\r\n      <mui-notification-message-sticky *ngIf=\"item.sticky && item.type !== 'NEWS'\"\r\n          [notification]=\"item\"></mui-notification-message-sticky>\r\n      <mui-notification-message *ngIf=\"!item.sticky && item.type !== 'NEWS'\" [notification]=\"item\"\r\n          (notificationDismiss)=\"onNotificationAlertDismiss($event)\" (messageClickOptionalAction)=\"onMessageClickOptionalAction($event)\"></mui-notification-message>\r\n    </ng-template>\r\n  </div>\r\n  <div class=\"mui-nc-panel-actions\">\r\n    <button mat-stroked-button\r\n        color=\"primary\"\r\n        type=\"button\"\r\n        class=\"mui-btn-close\"\r\n        (click)=\"onClosePanel()\"\r\n        i18n=\"@@nc_closebtn\">\r\n      Close\r\n    </button>\r\n    <button mat-flat-button\r\n        type=\"button\"\r\n        color=\"primary\"\r\n        class=\"mui-btn-dismiss-all\"\r\n        (click)=\"onNotificationAlertDismissAll()\"\r\n        i18n=\"@@nc_dismiss_all\">Dismiss All\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Notification } from '../shared/models/notification';\r\n\r\n@Component({\r\n  selector: 'mui-notification-news',\r\n  exportAs: 'muiNotificationNews',\r\n  templateUrl: './notification-news.component.html',\r\n  styleUrls: ['./notification-alerts.component.scss'], // we reuse the main panel styles from alerts\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class NotificationCenterNewsComponent {\r\n  @Input() notifications: Observable<Notification[]>;\r\n\r\n  @Output() closePanel = new EventEmitter();\r\n\r\n  onClosePanel(): void {\r\n    this.closePanel.emit();\r\n  }\r\n}\r\n","<div class=\"mui-nc-panel-body\">\r\n  <div class=\"mui-nc-panel-details\">\r\n    <ng-template ngFor let-item [ngForOf]=\"notifications | async\">\r\n      <mui-notification-message *ngIf=\"item.type === 'NEWS'\" [notification]=\"item\"></mui-notification-message>\r\n    </ng-template>\r\n  </div>\r\n  <div class=\"mui-nc-panel-actions\">\r\n    <button mat-stroked-button type=\"button\" class=\"mui-btn-close\" (click)=\"onClosePanel()\" i18n=\"@@nc_closebtn\">\r\n      Close\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport type { OnDestroy, OnInit } from '@angular/core';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, Input, LOCALE_ID } from '@angular/core';\r\nimport { MatTabChangeEvent } from '@angular/material/tabs';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\nimport { NCAppearance, PanelConfig } from '../shared/models/configurations';\r\n\r\nimport { Notification } from '../shared/models/notification';\r\nimport { NotificationTabs } from '../shared/models/notification-tabs';\r\nimport { NotificationService } from '../shared/services/notification.service';\r\n\r\nconst DISPLAY_STATES = {\r\n  hidden: 'hidden',\r\n  visible: 'visible',\r\n};\r\n\r\n@Component({\r\n  selector: 'mui-notification-center',\r\n  exportAs: 'muiNotificationCenter',\r\n  templateUrl: './notification-center.component.html',\r\n  styleUrls: ['./notification-center.component.scss'],\r\n  animations: [\r\n    trigger('panelDisplayState', [\r\n      state(DISPLAY_STATES.hidden, style({\r\n        right: '-430px',\r\n        width: 0\r\n      })),\r\n\r\n      state(DISPLAY_STATES.visible, style({\r\n        // we only use what is defined in css class\r\n      })),\r\n\r\n      transition('visible => hidden',\r\n        // only animate 'right' property\r\n        animate('0.4s cubic-bezier(0.075, 0.82, 0.165, 1)', style({right: '-430px'}))\r\n      ),\r\n\r\n      transition('hidden => visible', [\r\n          style({\r\n            width: '*' // reset width before animation starts\r\n          }),\r\n          animate('0.4s cubic-bezier(0.075, 0.82, 0.165, 1)', style({right: 0}))\r\n        ]\r\n      )\r\n    ])\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class NotificationCenterComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() config: PanelConfig;\r\n\r\n  /** define appearance, either legacy theme or unify, mainly affects the icons */\r\n  @Input() appearance: NCAppearance = 'unify';\r\n\r\n  selectedTab = NotificationTabs.AlertsTab;\r\n\r\n  panelDisplay: string = DISPLAY_STATES.hidden;\r\n  notifications: Observable<Notification[]>;\r\n  iconClass = 'material-icons';\r\n\r\n  private destroyed$ = new Subject<void>();\r\n\r\n  constructor(\r\n      private notificationService: NotificationService,\r\n      @Inject(LOCALE_ID) locale: string,\r\n      private cd: ChangeDetectorRef) {\r\n    this.config = new PanelConfig();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.notificationService.init();\r\n    this.notifications = this.notificationService.notifications;\r\n    this.notificationService.appearance = this.appearance;\r\n    if (this.appearance === 'unify') {\r\n      this.iconClass = 'mui-icons';\r\n    }\r\n\r\n    this.notificationService.panelOpenedChanges\r\n        .pipe(\r\n            takeUntil(this.destroyed$),\r\n            filter((ev) => ev === true)\r\n        )\r\n        .subscribe(() => this.openPanel())\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.notificationService.stopRefresh();\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  addNotification(notification: Notification): void {\r\n    this.notificationService.addNotification(notification);\r\n  }\r\n\r\n  dismissNotification(notification: Notification): void {\r\n    this.notificationService.dismissNotification(notification);\r\n  }\r\n\r\n  dismissAll(): void {\r\n    this.notificationService.dismissAllAlerts();\r\n    this.toggleState();\r\n  }\r\n\r\n  toggleState(): void {\r\n    if (this.panelDisplay === DISPLAY_STATES.visible) {\r\n      this.panelDisplay = DISPLAY_STATES.hidden;\r\n      this.notificationService.activeTab = NotificationTabs.None;\r\n      this.notificationService.updatePanelState(false);\r\n    } else {\r\n      this.panelDisplay = DISPLAY_STATES.visible;\r\n      this.notificationService.setNotificationsSeen(this.selectedTab);\r\n      this.notificationService.updatePanelState(true);\r\n    }\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  changeTab($event: MatTabChangeEvent): void {\r\n    this.notificationService.setNotificationsSeen($event.index);\r\n  }\r\n\r\n  openPanel(): void {\r\n    if (this.panelDisplay === DISPLAY_STATES.hidden) {\r\n      this.panelDisplay = DISPLAY_STATES.visible;\r\n      this.notificationService.setNotificationsSeen(this.selectedTab);\r\n      this.notificationService.updatePanelState(true);\r\n      this.cd.markForCheck();\r\n    }\r\n  }\r\n\r\n  clickMessageOptionalAction(url: string): void {\r\n    let newUrl = url;\r\n    const patt = new RegExp('\\{jsessionid\\}');\r\n    if (patt.test(url)) {\r\n      newUrl = url.replace(patt, this.notificationService.sessionId );\r\n      // console.log('jsessionid was replaced in url [' + url + '] to', newUrl);\r\n    }\r\n    window.open(newUrl, '_blank');\r\n  }\r\n\r\n  onNotificationDismiss(notification: Notification): void {\r\n    this.dismissNotification(notification);\r\n  }\r\n\r\n  onMessageClickOptionalAction(link: string): void {\r\n    this.clickMessageOptionalAction(link);\r\n  }\r\n\r\n}\r\n","<div [@panelDisplayState]=\"panelDisplay\"\r\n    class=\"mui-notification-center mui-nc-panel\"\r\n    [style.top]=\"config.topOffset\"\r\n    id=\"mui-notification-center\">\r\n  <header class=\"mui-nc-panel-header\">\r\n    <h5 class=\"mui-nc-panel-title\" i18n=\"@@nc_notification_center\">Notification Center</h5>\r\n    <span class=\"{{ iconClass }} mui-nc-panel-close\"\r\n        (click)=\"toggleState()\">close</span>\r\n  </header>\r\n  <div class=\"mui-notification-tabs\">\r\n    <mat-tab-group [(selectedIndex)]=\"selectedTab\"\r\n        (selectedTabChange)=\"changeTab($event)\"\r\n        [disablePagination]=\"true\">\r\n      <mat-tab label=\"Alerts\" i18n-label=\"@@nc_alerts\">\r\n        <mui-notification-alerts [notifications]=\"notifications\"\r\n            (closePanel)=\"toggleState()\"\r\n            (dismissAlert)=\"onNotificationDismiss($event)\"\r\n            (dismissAlertsAll)=\"dismissAll()\"\r\n            (clickMessageOptionalAction)=\"onMessageClickOptionalAction($event)\"></mui-notification-alerts>\r\n      </mat-tab>\r\n      <mat-tab label=\"News & Updates\" i18n-label=\"@@nc_news\">\r\n        <mui-notification-news [notifications]=\"notifications\"\r\n            (closePanel)=\"toggleState()\"></mui-notification-news>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\nimport { NotificationCenterAlertsComponent } from './center/notification-alerts.component';\r\nimport { NotificationCenterComponent } from './center/notification-center.component';\r\nimport { NotificationCenterNewsComponent } from './center/notification-news.component';\r\nimport { MessageComponent } from './messages/alert/message.component';\r\nimport { NotificationSnackbarComponent } from './messages/notification-snackbar/notification-snackbar.component';\r\nimport { MessageStickyComponent } from './messages/sticky/message-sticky.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatButtonModule, MatSnackBarModule, MatTabsModule, MatIconModule, MatTooltipModule],\r\n  exports: [NotificationCenterComponent],\r\n  declarations: [\r\n    NotificationCenterComponent,\r\n    MessageComponent,\r\n    MessageStickyComponent,\r\n    NotificationCenterAlertsComponent,\r\n    NotificationCenterNewsComponent,\r\n    NotificationSnackbarComponent\r\n  ]\r\n})\r\nexport class NotificationCenterModule {\r\n}\r\n","import { DateTime } from 'luxon';\r\nimport { Notification } from '../models/notification';\r\n\r\nfunction getEventTime(offset: number): string {\r\n  return DateTime.local().minus({ minutes: offset }).toISO() ?? '';\r\n}\r\n\r\nfunction getId(): number {\r\n  return Date.now();\r\n}\r\n\r\nexport function getInitialNotifications(): Notification[] {\r\n  return [\r\n    {\r\n      id: 1,\r\n      type: 'COUNTDOWN',\r\n      eventTime: getEventTime(5),\r\n      expiryTime: DateTime.local().plus({ hours: 4 }).toISO() ?? '',\r\n      sticky: true,\r\n      messages: [\r\n        {\r\n          id: 1,\r\n          headline: 'Scheduled maintenance',\r\n          body: 'System will be down for maintenance. Please plan your work accordingly.',\r\n          optionalActionTitle: 'Details',\r\n          optionalActionLink: 'http://mapp.com'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 11,\r\n      type: 'WARNING',\r\n      eventTime: getEventTime(30),\r\n      expiryTime: DateTime.local().plus({ days: 5 }).toISO() ?? '',\r\n      sticky: true,\r\n      messages: [\r\n        {\r\n          id: 11,\r\n          headline: 'Slow Imports',\r\n          body: 'Import speeds in Engage are currently slow. Teams are working on it.',\r\n          // optionalActionTitle: 'Details',\r\n          // optionalActionLink: 'http://mapp.com'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 2,\r\n      eventTime: getEventTime(4),\r\n      type: 'ERROR',\r\n      sticky: false,\r\n      messages: [\r\n        {\r\n          id: 2,\r\n          headline: 'Import Job failed',\r\n          body: '<p><em>The import job with Id 123 failed.<br>The uploaded file was not encoded correctly.<br><br>There has been' +\r\n          ' an error while connecting to the external resource.            Status code:1234</em></p>',\r\n          htmlContent: true\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 3,\r\n      eventTime: getEventTime(2),\r\n      type: 'WARNING',\r\n      sticky: false,\r\n      messages: [\r\n        {\r\n          id: 3,\r\n          headline: 'This is a warning message',\r\n          body: 'Please be aware that strange things might happen if you do not read this warning!'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 4,\r\n      type: 'INFO',\r\n      eventTime: getEventTime(10),\r\n      sticky: false,\r\n      messages: [\r\n        {\r\n          id: 4,\r\n          headline: 'Release Information',\r\n          body: 'Your CEP system has been updated to version 6.90.1940.\\nEnjoy all the great new features and bugs!',\r\n          optionalActionTitle: 'Details',\r\n          optionalActionLink: 'http://mapp.com'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 5,\r\n      type: 'NEWS',\r\n      eventTime: getEventTime(10),\r\n      sticky: false,\r\n      messages: [\r\n        {\r\n          id: 5,\r\n          headline: 'NOW AVAILABLE: Q2 2017 Quarterly Release Recording',\r\n          body: `We are pleased to announce the availability of the recording of the Q2 2017 Quarterly Release Training\r\n          (Tech Session). Please click on the button below to download the recording and presentation.`,\r\n          optionalActionTitle: 'Details',\r\n          optionalActionLink: 'http://mapp.com',\r\n          imageUrl: 'https://picsum.photos/400'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 6,\r\n      type: 'NEWS',\r\n      eventTime: getEventTime(12),\r\n      sticky: false,\r\n      messages: [\r\n        {\r\n          id: 6,\r\n          headline: 'NOW AVAILABLE: Q1 2017 Quarterly Release Recording',\r\n          body: `We are pleased to announce the availability of the recording of the Q2 2017 Quarterly Release Training\r\n          (Tech Session). Please click on the button below to download the recording and presentation.`,\r\n          optionalActionTitle: 'Details',\r\n          optionalActionLink: 'http://mapp.com',\r\n          imageUrl: 'https://picsum.photos/400'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 7,\r\n      eventTime: getEventTime(14),\r\n      type: 'ERROR',\r\n      sticky: false,\r\n      messages: [\r\n        {\r\n          id: 7,\r\n          headline: 'Your new password does not pass the following...',\r\n          htmlContent: true,\r\n          body: `<div data-notification-options=\"{&quot;stripHtml&quot;:false}\">\r\n                  <p><em>Your new password does not pass the following security rules:</em></p>\r\n                  <p><em>- Minimum length is 8 characters<br>\r\n                  - Contain at least one upper case letter<br>\r\n                  - Contain at least one number<br>\r\n                  - Contain at least one symbol<br>\r\n                  </em></p>\r\n                </div>`\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"id\": 8,\r\n      \"type\": \"INFO\",\r\n      \"eventTime\": getEventTime(20),\r\n      \"source\": \"ImportMembersJob\",\r\n      \"messages\": [\r\n        {\r\n          \"id\": 8,\r\n          \"headline\": \"Import Report - test_ueep562_050722\",\r\n          \"body\": \"Hello ,\\n\\n\\nyour import had the following results:\\n\\nNewsletter:            test_ueep562_050722 (test_ueep562_050722@docker01.dmclab.muc.domeus.com)\\non:                    05.07.2022 09:25\\nduration:              3 seconds\\n\\nSynchronisation mode:  Add-Update\\nwith qualifiers: [Keep Unsubscriptions, Overwrite only Attributes from File]\\n\\nNew recipients were:   added without message\\n\\nImport file name:      testLab55_testAndroidUsers050722.csv\\nImport file type:      csv\\n\\nResult overview:\\n\\nFatal Errors:          -\\nProcessed:             2 recipients (AUTO_300129_9868394A9B225B258532FDA3B3FF60FC16ECFE5AD174223B361BF8E5314F9781 (100%))\\n\\n0 recipients added\\n2 recipients updated/replaced\\n0 recipients removed\\n0 errors\\n\\n\\n\\n\\n\\n\\nBest regards, \\n\\nYour team@docker01.dmclab.muc.domeus.com\",\r\n          \"locale\": \"en\",\r\n          \"optionalActionTitle\": \"Download report\",\r\n          \"optionalActionLink\": \"http://10.128.251.55/home/login.jsp?redirectURL=user/importReport.jsp&repid=382\"\r\n        }\r\n      ],\r\n      \"audiences\": [\r\n        {\r\n          \"id\": 1,\r\n          \"datacenter\": \"NC\",\r\n          \"database\": \"localdb\",\r\n          \"customerId\": \"55\",\r\n          \"userId\": \"1\"\r\n        }\r\n      ],\r\n      \"sticky\": false\r\n    }\r\n\r\n\r\n  ];\r\n}\r\n\r\nexport function getNewNotifications(): Notification[] {\r\n  return [\r\n    {\r\n      id: getId(),\r\n      eventTime: getEventTime(0),\r\n      type: 'SUCCESS',\r\n      sticky: false,\r\n      messages: [\r\n        {\r\n          id: 2,\r\n          headline: 'Attribute creation successful',\r\n          body: 'The attribute MyCoolAttribute of type String was created successfully.'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: getId(),\r\n      eventTime: getEventTime(1),\r\n      type: 'ERROR',\r\n      sticky: false,\r\n      messages: [\r\n        {\r\n          id: 2,\r\n          headline: 'Import Job failed',\r\n          body: 'The import job with Id 567 failed.\\nThe uploaded file was not encoded correctly.\\n\\nThere has been' +\r\n          ' an error while connecting to the external resource.            Status code:400'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 9,\r\n      type: 'NEWS',\r\n      eventTime: getEventTime(0),\r\n      sticky: false,\r\n      messages: [\r\n        {\r\n          id: 9,\r\n          headline: 'Updated: NOW AVAILABLE: Q1 2017 Quarterly Release Recording',\r\n          body: `Updated: We are pleased to announce the availability of the recording of the Q2 2017 Quarterly Release\r\n           Training (Tech Session). Please click on the button below to download the recording and presentation.`,\r\n          optionalActionTitle: 'Details',\r\n          optionalActionLink: 'http://mapp.com',\r\n          imageUrl: 'https://picsum.photos/400'\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { Notification } from '../models/notification';\r\nimport { getInitialNotifications, getNewNotifications } from './mock-messages';\r\nimport { BackendServiceInterface } from './backend.service.interface';\r\n\r\n/**\r\n * Mock implementation of BackendService\r\n * It can be used in tests and for running local without api connection\r\n * This class is currently not compatible with AOT compile of cli >= 1.0 if used in DI provider assignment\r\n */\r\n@Injectable()\r\nexport class MockBackendService implements BackendServiceInterface {\r\n\r\n  getSessionId(): string {\r\n    return '';\r\n  }\r\n\r\n  getNotifications(): Observable<Notification[]> {\r\n    return of(getInitialNotifications());\r\n  }\r\n\r\n  dismissMessages(): void {\r\n    // do nothing here\r\n  }\r\n\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  getNewNotifications(sinceDate: string): Observable<Notification[]> {\r\n    return of(getNewNotifications());\r\n  }\r\n}\r\n","import { Message } from './message';\r\nimport { NotificationType } from './notification';\r\n\r\n/**\r\n * Simple base representation of a Notification for easy creation of volatile notifications.\r\n */\r\nexport class VolatileNotification {\r\n  /**\r\n   * Type of the notification\r\n   */\r\n  type: NotificationType;\r\n  /**\r\n   * Message to be used for the notification\r\n   */\r\n  message: Message;\r\n}\r\n","/*\r\n * Public API Surface of ui-notification-center-ng\r\n */\r\n\r\nexport { NotificationCenterModule } from './lib/notification-center.module';\r\nexport { NotificationCenterComponent } from './lib/center/notification-center.component';\r\n\r\nexport { NotificationService } from './lib/shared/services/notification.service';\r\nexport { BackendService } from './lib/shared/services/backend.service';\r\nexport { MockBackendService } from './lib/shared/services/backend-mock.service';\r\n\r\nexport * from './lib/shared/models/message';\r\nexport * from './lib/shared/models/notification';\r\nexport * from './lib/shared/models/configurations';\r\nexport * from './lib/shared/models/volatile-notification';\r\nexport * from './lib/shared/models/api-config';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["DISPLAY_STATES","i2","i3","i1","i1.LocalCacheService","i2.BackendService","i3.ToastNotificationService","i2.NotificationService","i1.NotificationService","i3.MessageComponent","i4.MessageStickyComponent","i3.NotificationCenterAlertsComponent","i4.NotificationCenterNewsComponent"],"mappings":"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"}