{"version":3,"file":"mapp-ui-common.mjs","sources":["../../../../projects/mapp-ui/common/src/lib/app-header/mui-app-header.component.ts","../../../../projects/mapp-ui/common/src/lib/app-header/mui-app-header.component.html","../../../../projects/mapp-ui/common/src/lib/app-header/mui-app-header.module.ts","../../../../projects/mapp-ui/common/src/lib/app-header/index.ts","../../../../projects/mapp-ui/common/src/lib/page-header/mui-page-header.component.ts","../../../../projects/mapp-ui/common/src/lib/page-header/mui-page-header.component.html","../../../../projects/mapp-ui/common/src/lib/page-header/mui-page-header.module.ts","../../../../projects/mapp-ui/common/src/lib/page-header/index.ts","../../../../projects/mapp-ui/common/src/lib/app-nav/headernav/mui-headernav.service.ts","../../../../projects/mapp-ui/common/src/lib/app-nav/headernav/headernav-dialog.component.ts","../../../../projects/mapp-ui/common/src/lib/app-nav/headernav/headernav-dialog.component.html","../../../../projects/mapp-ui/common/src/lib/app-nav/headernav/session-timer.service.ts","../../../../projects/mapp-ui/common/src/lib/app-nav/headernav/session-timer.component.ts","../../../../projects/mapp-ui/common/src/lib/app-nav/headernav/session-timer.component.html","../../../../projects/mapp-ui/common/src/lib/app-nav/headernav/mui-headernav.component.ts","../../../../projects/mapp-ui/common/src/lib/app-nav/headernav/mui-headernav.component.html","../../../../projects/mapp-ui/common/src/lib/app-nav/leftnav/mui-leftnav-content.component.ts","../../../../projects/mapp-ui/common/src/lib/app-nav/leftnav/mui-leftnav.service.ts","../../../../projects/mapp-ui/common/src/lib/app-nav/leftnav/mui-leftnav.component.ts","../../../../projects/mapp-ui/common/src/lib/app-nav/leftnav/mui-leftnav.component.html","../../../../projects/mapp-ui/common/src/lib/app-nav/leftnav/mui-leftnav-container.component.ts","../../../../projects/mapp-ui/common/src/lib/app-nav/leftnav/mui-leftnav-container.component.html","../../../../projects/mapp-ui/common/src/lib/app-nav/mui-navigation.module.ts","../../../../projects/mapp-ui/common/src/lib/stepper/mui-step.component.ts","../../../../projects/mapp-ui/common/src/lib/stepper/mui-stepper.component.ts","../../../../projects/mapp-ui/common/src/lib/stepper/mui-stepper.component.html","../../../../projects/mapp-ui/common/src/lib/stepper/mui-stepper.module.ts","../../../../projects/mapp-ui/common/src/lib/drawer/mui-drawer.component.ts","../../../../projects/mapp-ui/common/src/lib/drawer/mui-drawer.component.html","../../../../projects/mapp-ui/common/src/lib/drawer/mui-drawer.module.ts","../../../../projects/mapp-ui/common/src/lib/icon/mui-icon.component.ts","../../../../projects/mapp-ui/common/src/lib/icon/mui-icon.module.ts","../../../../projects/mapp-ui/common/src/lib/top-navigation/components/edit-password/edit-password.component.ts","../../../../projects/mapp-ui/common/src/lib/top-navigation/components/edit-password/edit-password.component.html","../../../../projects/mapp-ui/common/src/lib/top-navigation/components/edit-profile/edit-profile.component.ts","../../../../projects/mapp-ui/common/src/lib/top-navigation/components/edit-profile/edit-profile.component.html","../../../../projects/mapp-ui/common/src/lib/top-navigation/components/notification-bell/notification-bell.component.ts","../../../../projects/mapp-ui/common/src/lib/top-navigation/components/notification-bell/notification-bell.component.html","../../../../projects/mapp-ui/common/src/lib/top-navigation/components/lang-change-dialog/lang-change-dialog.component.ts","../../../../projects/mapp-ui/common/src/lib/top-navigation/components/lang-change-dialog/lang-change-dialog.component.html","../../../../projects/mapp-ui/common/src/lib/top-navigation/components/top-nav-dialog/top-nav-dialog.component.ts","../../../../projects/mapp-ui/common/src/lib/top-navigation/components/top-nav-dialog/top-nav-dialog.component.html","../../../../projects/mapp-ui/common/src/lib/top-navigation/components/timeout-dialog/timeout-dialog.component.ts","../../../../projects/mapp-ui/common/src/lib/top-navigation/components/timeout-dialog/timeout-dialog.component.html","../../../../projects/mapp-ui/common/src/lib/top-navigation/services/top-navigation-cache.service.ts","../../../../projects/mapp-ui/common/src/lib/top-navigation/services/session-timer.service.ts","../../../../projects/mapp-ui/common/src/lib/top-navigation/services/top-navigation.service.ts","../../../../projects/mapp-ui/common/src/lib/top-navigation/components/profile-menu/profile-menu.component.ts","../../../../projects/mapp-ui/common/src/lib/top-navigation/components/profile-menu/profile-menu.component.html","../../../../projects/mapp-ui/common/src/lib/top-navigation/components/search/search.component.ts","../../../../projects/mapp-ui/common/src/lib/top-navigation/components/search/search.component.html","../../../../projects/mapp-ui/common/src/lib/top-navigation/components/top-nav-menu/top-nav-menu.component.ts","../../../../projects/mapp-ui/common/src/lib/top-navigation/components/top-nav-menu/top-nav-menu.component.html","../../../../projects/mapp-ui/common/src/lib/top-navigation/components/top-nav/mui-top-navigation.component.ts","../../../../projects/mapp-ui/common/src/lib/top-navigation/components/top-nav/mui-top-navigation.component.html","../../../../projects/mapp-ui/common/src/lib/top-navigation/mui-top-navigation.module.ts","../../../../projects/mapp-ui/common/src/lib/top-navigation/interceptors/session-timer-interceptor.ts","../../../../projects/mapp-ui/common/src/public_api.ts","../../../../projects/mapp-ui/common/src/mapp-ui-common.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, Directive } from '@angular/core';\r\n\r\n/** @deprecated */\r\n@Component({\r\n  selector: 'mui-app-header',\r\n  exportAs: 'muiAppHeader',\r\n  templateUrl: './mui-app-header.component.html',\r\n  styleUrls: ['./mui-app-header.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MuiAppHeaderComponent {\r\n\r\n}\r\n\r\n/* Directives used for sub-content of app header */\r\n\r\n@Directive({\r\n  selector: '[muiAppHeaderMenu]',\r\n})\r\nexport class MuiAppHeaderMenuDirective {}\r\n\r\n@Directive({\r\n  selector: '[muiAppHeaderTitle]'\r\n})\r\nexport class MuiAppHeaderTitleDirective {}\r\n\r\n@Directive({\r\n  selector: '[muiAppHeaderActions]'\r\n})\r\nexport class MuiAppHeaderActionsDirective {}\r\n","<div class=\"mui-app-header\">\r\n  <div class=\"mui-app-header-menu\">\r\n    <ng-content select=\"[muiAppHeaderMenu]\"></ng-content>\r\n  </div>\r\n  <div class=\"mui-app-header-logo\"></div>\r\n  <div class=\"mui-app-header-title\">\r\n    <ng-content select=\"[muiAppHeaderTitle]\"></ng-content>\r\n  </div>\r\n  <div class=\"mui-app-header-actions\">\r\n    <ng-content select=\"[muiAppHeaderActions]\"></ng-content>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  MuiAppHeaderActionsDirective,\r\n  MuiAppHeaderComponent,\r\n  MuiAppHeaderMenuDirective,\r\n  MuiAppHeaderTitleDirective\r\n} from './mui-app-header.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [MuiAppHeaderComponent, MuiAppHeaderMenuDirective, MuiAppHeaderTitleDirective, MuiAppHeaderActionsDirective],\r\n  exports: [MuiAppHeaderComponent, MuiAppHeaderMenuDirective, MuiAppHeaderTitleDirective, MuiAppHeaderActionsDirective]\r\n})\r\nexport class MuiAppHeaderModule { }\r\n","/*\r\n * Public API Surface of ui-app-header\r\n */\r\n\r\nexport * from './mui-app-header.module';\r\nexport * from './mui-app-header.component';\r\n","import { ChangeDetectionStrategy, Component, Directive } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mui-page-header',\r\n  exportAs: 'muiPageHeader',\r\n  templateUrl: 'mui-page-header.component.html',\r\n  styleUrls: ['mui-page-header.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MuiPageHeaderComponent {\r\n\r\n}\r\n\r\n/* directives used for page header */\r\n\r\n/**\r\n * Directive for page header title\r\n */\r\n@Directive({\r\n  selector: '[muiPageHeaderTitle]'\r\n})\r\nexport class MuiPageHeaderTitleDirective {}\r\n\r\n/**\r\n * Directive for page header subtitle, placed below title\r\n */\r\n@Directive({\r\n  selector: '[muiPageHeaderSubtitle]'\r\n})\r\nexport class MuiPageHeaderSubtitleDirective {\r\n}\r\n\r\n/**\r\n * Directive for page header actions, placed on the right side\r\n */\r\n@Directive({\r\n  selector: '[muiPageHeaderActions]'\r\n})\r\nexport class MuiPageHeaderActionsDirective {}\r\n","<div class=\"mui-page-header\">\r\n  <div class=\"mui-page-header-content\">\r\n    <div class=\"mui-page-header-title\">\r\n      <ng-content select=\"[muiPageHeaderTitle]\"></ng-content>\r\n    </div>\r\n    <div class=\"mui-page-header-subtitle\">\r\n      <ng-content select=\"[muiPageHeaderSubtitle]\"></ng-content>\r\n    </div>\r\n  </div>\r\n  <div class=\"mui-page-header-actions\">\r\n    <ng-content select=\"[muiPageHeaderActions]\"></ng-content>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  MuiPageHeaderActionsDirective,\r\n  MuiPageHeaderComponent,\r\n  MuiPageHeaderSubtitleDirective,\r\n  MuiPageHeaderTitleDirective\r\n} from './mui-page-header.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    MuiPageHeaderComponent, MuiPageHeaderActionsDirective,\r\n    MuiPageHeaderTitleDirective, MuiPageHeaderSubtitleDirective\r\n  ],\r\n  declarations: [\r\n    MuiPageHeaderComponent, MuiPageHeaderActionsDirective,\r\n    MuiPageHeaderTitleDirective, MuiPageHeaderSubtitleDirective\r\n  ]\r\n})\r\nexport class MuiPageHeaderModule {\r\n}\r\n","/*\r\n * Public API Surface of ui-page-header\r\n */\r\n\r\nexport * from './mui-page-header.module';\r\nexport * from './mui-page-header.component';\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class MuiHeadernavService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getNavigationItems(apiUrl: string): Observable<any> {\r\n    return this.http.get(apiUrl);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\r\nimport type { OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport type { SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n\r\n@Component({\r\n  templateUrl: './headernav-dialog.component.html',\r\n  styleUrls: ['./headernav-dialog.component.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HeadernavDialogComponent implements OnInit {\r\n\r\n  contentSrc: SafeResourceUrl;\r\n  htmlContent: SafeHtml;\r\n  useIframe = false;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private sanitizer: DomSanitizer,\r\n    private http: HttpClient,\r\n    private cd: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.contentSrc = this.sanitizer.bypassSecurityTrustResourceUrl(this.data.href);\r\n    if (this.data.modal.iframe) {\r\n      this.useIframe = true;\r\n    } else {\r\n      this.http.get(this.data.href, { responseType: 'text' }).subscribe(content => {\r\n        this.htmlContent = this.sanitizer.bypassSecurityTrustHtml(content);\r\n        this.cd.detectChanges();\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>{{ data.modal.title }}</h2>\r\n<mat-dialog-content>\r\n  <iframe *ngIf=\"useIframe\" [src]=\"contentSrc\" frameborder=\"0\" class=\"dialog-iframe\"></iframe>\r\n  <div *ngIf=\"!useIframe\">\r\n    <div [innerHTML]=\"htmlContent\"></div>\r\n  </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button color=\"primary\" mat-dialog-close>Close</button>\r\n</mat-dialog-actions>\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, EMPTY } from 'rxjs';\r\nimport { NotificationService } from '@mapp-ui/notification-center';\r\nimport type { VolatileNotification } from '@mapp-ui/notification-center';\r\n\r\n@Injectable()\r\nexport class SessionTimerService {\r\n\r\n  endpointUrl: string;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Optional() private notificationService: NotificationService\r\n  ) {\r\n  }\r\n\r\n  keepAlive(): Observable<any> {\r\n    return this.doRequest(new HttpParams().set('keepAlive', 'true'));\r\n  }\r\n\r\n  stopKeepAlive(): Observable<any> {\r\n    return this.doRequest(new HttpParams().set('keepAlive', 'false'));\r\n  }\r\n\r\n  ping(): Observable<any> {\r\n    return this.doRequest();\r\n  }\r\n\r\n  sessionTimedOut(message: string): void {\r\n    if (this.notificationService) {\r\n      const notification: VolatileNotification = {\r\n        type: 'WARNING',\r\n        message: {\r\n          headline: message\r\n        }\r\n      };\r\n      this.notificationService.addNotification(notification);\r\n    }\r\n  }\r\n\r\n  idleModeActivated(message: string): void {\r\n    if (this.notificationService) {\r\n      const notification: VolatileNotification = {\r\n        type: 'WARNING',\r\n        message: {\r\n          headline: message\r\n        }\r\n      };\r\n      this.notificationService.addNotification(notification);\r\n    }\r\n\r\n  }\r\n\r\n  private doRequest(params?: HttpParams): Observable<any> {\r\n    const isValid = this.endpointUrl !== undefined && this.endpointUrl.length > 0;\r\n    if (!isValid) {\r\n      console.warn('Endpoint url for session timer is empty. Please check configuration');\r\n      return EMPTY;\r\n    }\r\n\r\n    if (params) {\r\n      return this.http.get(this.endpointUrl, { params });\r\n    }\r\n\r\n    return this.http.get(this.endpointUrl);\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport type { OnInit } from '@angular/core';\r\nimport { Observable, Subscription, interval, timer, fromEvent } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { SessionTimerService } from './session-timer.service';\r\n\r\n@Component({\r\n  selector: 'mui-session-timer',\r\n  exportAs: 'muiSessionTimer',\r\n  templateUrl: './session-timer.component.html',\r\n  styleUrls: ['./session-timer.component.css'],\r\n  providers: [SessionTimerService]\r\n})\r\nexport class SessionTimerComponent implements OnInit {\r\n// TODO animations?\r\n\r\n  @Input()\r\n  navItem: any;\r\n\r\n  @Input()\r\n  trackClicks = false;\r\n\r\n  timer: Subscription;\r\n  sessionTime: Date;\r\n\r\n  private timerCountdown: Observable<number>;\r\n  private activeKeepAlive: Subscription;\r\n  private activeClickTracker: Subscription;\r\n\r\n  constructor(private service: SessionTimerService) {\r\n    this.timerCountdown = interval(1000);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.navItem) {\r\n      this.sessionTime = new Date(this.navItem.timeout);\r\n      this.service.endpointUrl = this.navItem.href;\r\n\r\n      if (this.navItem.keepAlive && !this.navItem.idleMode) {\r\n        this.startKeepAlive();\r\n      } else {\r\n        this.startTimer();\r\n      }\r\n\r\n      if (this.navItem.idleMode) {\r\n        this.onIdleModeActivated();\r\n      }\r\n    }\r\n\r\n    if (this.trackClicks) {\r\n      this.startClickTracker();\r\n    }\r\n  }\r\n\r\n  startTimer(): void {\r\n    // TODO review if there is more elegant handling using additional rxjs operators\r\n    this.timer = this.timerCountdown.subscribe(() => {\r\n      const tick = this.sessionTime.getTime() - 1000;\r\n      this.sessionTime = new Date(tick);\r\n\r\n      if (tick === 0) {\r\n        this.timer.unsubscribe();\r\n        this.service.sessionTimedOut(this.navItem.expiredMsg);\r\n\r\n        if (typeof this.navItem.expiredHref === 'string') {\r\n          setTimeout(() => {\r\n            window.location.assign(this.navItem.expiredHref);\r\n          }, 5000);\r\n        }\r\n      }\r\n    });\r\n\r\n    if (this.activeKeepAlive && !this.activeKeepAlive.closed) {\r\n      this.stopKeepAlive();\r\n    }\r\n  }\r\n\r\n  stopAndResetTimer(): void {\r\n    this.timer.unsubscribe();\r\n    this.resetTimer();\r\n    this.startKeepAlive();\r\n  }\r\n\r\n  onIdleModeActivated(): void {\r\n    // console.log('Idle mode activated...');\r\n    this.service.idleModeActivated(this.navItem.idleModeMsg);\r\n  }\r\n\r\n  private startClickTracker(): void {\r\n    // console.log('start tracking clicks');\r\n    const clickCheckInterval = this.navItem.timeout / 200;\r\n    const clicks = fromEvent(document, 'click');\r\n    this.activeClickTracker = clicks.pipe(debounceTime(clickCheckInterval)).subscribe(() => {\r\n      this.resetTimer();\r\n      this.service.ping().subscribe();\r\n      // console.log('timer reset because of clicks');\r\n    });\r\n  }\r\n\r\n  private stopClickTracker(): void {\r\n    // console.log('stop tracking clicks');\r\n    this.activeClickTracker.unsubscribe();\r\n  }\r\n\r\n  private resetTimer(): void {\r\n    this.sessionTime = new Date(this.navItem.timeout);\r\n  }\r\n\r\n  private startKeepAlive(): void {\r\n    // console.log('starting keepalive');\r\n    this.activeKeepAlive = timer(10, 30000).subscribe(() => {\r\n      this.service.keepAlive().subscribe(res => {\r\n        if (res.idleMode === true) {\r\n          this.onIdleModeActivated();\r\n          this.startTimer();\r\n        }\r\n      });\r\n    });\r\n\r\n    // stop the clicktracker while keepalive is enabled\r\n    if (this.trackClicks && this.activeClickTracker) {\r\n      this.stopClickTracker();\r\n    }\r\n  }\r\n\r\n  private stopKeepAlive(): void {\r\n    // console.log('stopping keepalive!');\r\n    this.activeKeepAlive.unsubscribe();\r\n    this.service.stopKeepAlive().subscribe();\r\n\r\n    // start click tracker again if needed\r\n    if (this.trackClicks) {\r\n      this.startClickTracker();\r\n    }\r\n  }\r\n\r\n}\r\n","<button *ngIf=\"timer && !timer.closed\" mat-icon-button class=\"text-nav-button session-timer-button\"\r\n  (click)=\"stopAndResetTimer()\">\r\n  <span class=\"button-text\">{{ sessionTime | date:'mm:ss' }}</span>\r\n  <mat-icon class=\"stop-timer-icon\">timer_off</mat-icon>\r\n</button>\r\n<button *ngIf=\"!timer || timer.closed\" mat-icon-button (click)=\"startTimer()\">\r\n  <mat-icon>timer</mat-icon>\r\n</button>\r\n\r\n","import { Component, EventEmitter, Input, Optional, Output, SimpleChanges } from '@angular/core';\r\nimport type { OnChanges, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { EMPTY, Observable, Subject } from 'rxjs';\r\nimport { debounce, map } from 'rxjs/operators';\r\nimport { NotificationService } from '@mapp-ui/notification-center';\r\nimport type { NotificationCenterComponent } from '@mapp-ui/notification-center';\r\n\r\nimport { MuiHeadernavService } from './mui-headernav.service';\r\nimport { HeadernavDialogComponent } from './headernav-dialog.component';\r\n\r\n/**\r\n * Component which handles the navigation in the app header\r\n * @deprecated\r\n */\r\n@Component({\r\n  selector: 'mui-headernav',\r\n  exportAs: 'muiHeaderNav',\r\n  templateUrl: './mui-headernav.component.html',\r\n  styleUrls: ['./mui-headernav.component.css'],\r\n  providers: [MuiHeadernavService]\r\n})\r\nexport class MuiHeadernavComponent implements OnInit, OnChanges {\r\n\r\n  /**\r\n   * Url of the cep API endpoint for header navigation.\r\n   * Should be given as full absolute url including sessionId.\r\n   */\r\n  @Input()\r\n  apiUrl: string;\r\n\r\n  /**\r\n   * Flag to control the behavior when one of the items in the language menu is clicked.\r\n   * If false (default), the language link will be executed, redirecting to CEP start page and activating new language.\r\n   * If true, the language link will not be followed. Instead output event languageChanged will be fired.\r\n   * see languageChanged\r\n   */\r\n  @Input()\r\n  handleLanguageChange = false;\r\n\r\n  /**\r\n   * Provide reference to the NotificationCenterComponent, by template variable.\r\n   * This is required in order to have integration with Notification Center working.\r\n   */\r\n  @Input()\r\n  notificationCenter: NotificationCenterComponent;\r\n\r\n  /**\r\n   * Control flag for the session timer.\r\n   * If false (default), timer will only be refreshed when component initializes (i.e. page reload)\r\n   * If true, user clicks will be monitored and used to reset the timer at certain intervals.\r\n   */\r\n  @Input()\r\n  trackClicks = false; // for session timer\r\n\r\n  /**\r\n   * Specify topic key for context aware help. This will be appended to the help link offered in the help (?) menu.\r\n   */\r\n  @Input()\r\n  helpTopicId: string;\r\n\r\n  /**\r\n   * Output event which emits when a new language has been selected in the language picker menu and\r\n   * handleLanguageChange is enabled.\r\n   * Emits the locale string as payload.\r\n   * see handleLanguageChange\r\n   */\r\n  @Output()\r\n  languageChanged = new EventEmitter<string>();\r\n\r\n  navItems: any[];\r\n  searchFieldHidden = true;\r\n  notificationCount: Observable<number>;\r\n  notificationBadgeHidden: Observable<boolean>;\r\n  notificationCenterEnabled = false;\r\n\r\n  private helpLinkChanges: Subject<string>;\r\n  private initialized$: Subject<void>;\r\n\r\n  constructor(private headernavService: MuiHeadernavService,\r\n              private dialog: MatDialog,\r\n              @Optional() private notificationService: NotificationService) {\r\n    this.helpLinkChanges = new Subject<string>();\r\n    this.initialized$ = new Subject();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['helpTopicId'] && changes['helpTopicId'].currentValue) {\r\n      this.updateHelpLink(changes['helpTopicId'].currentValue);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.apiUrl) {\r\n      this.headernavService\r\n        .getNavigationItems(this.apiUrl)\r\n        .subscribe(data => {\r\n          this.navItems = data.topNav;\r\n          this.initialized$.complete();\r\n        });\r\n\r\n      this.onHelpLinkChanges();\r\n    } else {\r\n      console.warn('MuiHeadernavConponent: No value set for [apiUrl]. No topnav items will be generated.');\r\n    }\r\n\r\n    if (this.notificationService && this.notificationCenter) {\r\n      this.notificationCount = this.notificationService.unseenCounter;\r\n      this.notificationBadgeHidden = this.notificationService.unseenCounter.pipe(map(x => x === 0));\r\n      this.notificationCenterEnabled = true;\r\n    } else {\r\n      this.notificationCount = EMPTY;\r\n    }\r\n  }\r\n\r\n  menuItemClicked($event: Event, item: any): void {\r\n\r\n    if (item.blank) {\r\n      $event.preventDefault();\r\n      window.open(item.href);\r\n    } else if (this.handleLanguageChange && typeof item.locale === 'string') {\r\n      $event.preventDefault();\r\n      this.languageChanged.emit(item.locale);\r\n    } else if (typeof item.modal === 'object') {\r\n      $event.preventDefault();\r\n      this.createModal(item);\r\n    }\r\n  }\r\n\r\n  toggleNotificationPanel(): void {\r\n    if (this.notificationCenterEnabled) {\r\n      this.notificationCenter.toggleState();\r\n    }\r\n  }\r\n\r\n  onSearchTermEntered(searchTerm: string, searchUrl: string): void {\r\n    const searchQuery = searchUrl + encodeURIComponent(searchTerm);\r\n    window.location.assign(searchQuery);\r\n  }\r\n\r\n  /**\r\n   * Updates the help link to point to a new help topic\r\n   * @param helpKey The new help key to assign to the link\r\n   */\r\n  updateHelpLink(helpKey: string): void {\r\n    this.helpLinkChanges.next(helpKey);\r\n  }\r\n\r\n  private onHelpLinkChanges(): void {\r\n    this.helpLinkChanges.pipe(\r\n      debounce(() => this.initialized$)\r\n    )\r\n    .subscribe(helpKey => {\r\n      const helpSection = this.navItems.find((value: any) => value.type === 'help');\r\n      if (helpSection) {\r\n        const helpLinkItem = helpSection.menu.find((value: any) => value.id === 'tn-help-onlinehelp');\r\n        if (helpLinkItem) {\r\n          try {\r\n            const helpUrl = new URL(helpLinkItem.href);\r\n            if (helpUrl.searchParams.get('label') !== null) {\r\n              helpUrl.searchParams.set('label', `Engage_${helpKey}`);\r\n              helpUrl.hash = '';\r\n            } else {\r\n              // TODO old help link, remove after migration done\r\n              helpUrl.hash = helpKey;\r\n            }\r\n            helpLinkItem.href = helpUrl.toString();\r\n          } catch (e) {\r\n            console.error('failed parsing help url', e);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  private createModal(item: any): void {\r\n    this.dialog.open(HeadernavDialogComponent, {\r\n      data: item,\r\n      panelClass: item.modal.class\r\n    });\r\n  }\r\n}\r\n","<ng-container *ngFor=\"let item of navItems\">\r\n\r\n  <ng-container [ngSwitch]=\"item['type']\">\r\n    <div class=\"search-container\" *ngSwitchCase=\"'search'\">\r\n      <div class=\"search-controls\" [class.hidden]=\"searchFieldHidden\">\r\n      <button mat-icon-button (click)=\"searchFieldHidden = !searchFieldHidden\">\r\n        <mat-icon>search</mat-icon>\r\n      </button>\r\n      <mat-form-field class=\"search-field\">\r\n        <input type=\"text\" matInput #search (keyup.enter)=\"onSearchTermEntered(search.value, item.href)\"/>\r\n        <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"search.value = ''\">\r\n          <mat-icon class=\"search-clear-icon\">close</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n      </div>\r\n    </div>\r\n\r\n    <ng-container *ngSwitchCase=\"'notification'\">\r\n      <button mat-icon-button *ngIf=\"notificationCenterEnabled\" (click)=\"toggleNotificationPanel()\">\r\n        <mat-icon class=\"nc-notification-icon\" [matBadge]=\"notificationCount | async\"\r\n          [matBadgeHidden]=\"notificationBadgeHidden | async\" matBadgeColor=\"warn\">notifications</mat-icon>\r\n      </button>\r\n    </ng-container>\r\n\r\n    <ng-container *ngSwitchCase=\"'help'\">\r\n      <button mat-icon-button [matMenuTriggerFor]=\"helpMenu\">\r\n        <mat-icon>help</mat-icon>\r\n      </button>\r\n      <mat-menu #helpMenu=\"matMenu\" [overlapTrigger]=\"false\">\r\n        <a *ngFor=\"let menuItem of item.menu\" mat-menu-item [href]=\"menuItem.href\"\r\n          (click)=\"menuItemClicked($event, menuItem)\">{{ menuItem.name }}</a>\r\n      </mat-menu>\r\n    </ng-container>\r\n\r\n    <ng-container *ngSwitchCase=\"'appSwitcher'\">\r\n      <button mat-icon-button [matMenuTriggerFor]=\"appsMenu\">\r\n        <mat-icon>apps</mat-icon>\r\n      </button>\r\n      <mat-menu #appsMenu=\"matMenu\" [overlapTrigger]=\"false\">\r\n        <a *ngFor=\"let menuItem of item.menu\" mat-menu-item [href]=\"menuItem.href\"\r\n          (click)=\"menuItemClicked($event, menuItem)\">{{ menuItem.name }}</a>\r\n      </mat-menu>\r\n    </ng-container>\r\n\r\n    <ng-container *ngSwitchCase=\"'langSwitcher'\">\r\n      <button mat-icon-button [matMenuTriggerFor]=\"langMenu\" class=\"text-nav-button\">\r\n        <span class=\"button-text\">{{ item.name }}</span>\r\n      </button>\r\n      <mat-menu #langMenu=\"matMenu\" [overlapTrigger]=\"false\">\r\n        <a *ngFor=\"let menuItem of item.menu\" mat-menu-item [href]=\"menuItem.href\"\r\n          (click)=\"menuItemClicked($event, menuItem)\">{{ menuItem.name }}</a>\r\n      </mat-menu>\r\n    </ng-container>\r\n\r\n    <mui-session-timer *ngSwitchCase=\"'sessionTimer'\" [navItem]=\"item\" [trackClicks]=\"trackClicks\">\r\n    </mui-session-timer>\r\n\r\n    <ng-container *ngSwitchCase=\"'user'\">\r\n      <button mat-icon-button [matMenuTriggerFor]=\"userMenu\">\r\n        <mat-icon>person</mat-icon>\r\n      </button>\r\n      <mat-menu #userMenu=\"matMenu\" [overlapTrigger]=\"false\">\r\n        <a *ngFor=\"let menuItem of item.menu\" mat-menu-item [href]=\"menuItem.href\"\r\n          (click)=\"menuItemClicked($event, menuItem)\">{{ menuItem.name }}</a>\r\n      </mat-menu>\r\n    </ng-container>\r\n\r\n  </ng-container>\r\n</ng-container>\r\n","import { Component, HostBinding, ViewEncapsulation } from '@angular/core';\r\n\r\n/**\r\n * Container component for the main app content area\r\n * @deprecated\r\n */\r\n@Component({\r\n  selector: 'mui-leftnav-content',\r\n  template: '<ng-content></ng-content>',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MuiLeftnavContentComponent {\r\n\r\n  @HostBinding('class') readonly hostElementClass = 'mui-leftnav-content';\r\n\r\n  @HostBinding('class.pushed')\r\n  isContentPushed = false;\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { LeftnavResponse } from './leftnav.interfaces';\r\n\r\n@Injectable()\r\nexport class MuiLeftnavService {\r\n\r\n  readonly sessionStorageKey = 'cepLeftnavActive'; // TODO consider rename prefix\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getNavigationItems(apiUrl: string): Observable<LeftnavResponse> {\r\n    return this.http.get<LeftnavResponse>(apiUrl);\r\n  }\r\n\r\n  loadSavedActiveNavItems(): { section: string, page: string } | null {\r\n    if (!sessionStorage) {\r\n      return null;\r\n    }\r\n\r\n    return JSON.parse(window.sessionStorage.getItem(this.sessionStorageKey) ?? 'null');\r\n  }\r\n\r\n  saveActiveNavItems(activeItem: { section: string, page: string | null }): void {\r\n    if (window.sessionStorage) {\r\n      window.sessionStorage.setItem(this.sessionStorageKey, JSON.stringify(activeItem));\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, EventEmitter, Input, Optional, Output } from '@angular/core';\r\nimport type { OnInit } from '@angular/core';\r\nimport { animate, trigger, state, style, transition } from '@angular/animations';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { MuiLeftnavService } from './mui-leftnav.service';\r\nimport { LeftnavItem } from './leftnav.interfaces';\r\n\r\n/**\r\n * Component which handles the left-side navigation menu\r\n * @deprecated\r\n */\r\n@Component({\r\n  selector: 'mui-leftnav',\r\n  exportAs: 'muiLeftnav',\r\n  templateUrl: './mui-leftnav.component.html',\r\n  styleUrls: ['./mui-leftnav.component.scss'],\r\n  providers: [MuiLeftnavService],\r\n  animations: [\r\n    trigger('mainNavState', [\r\n      state('collapsed', style({\r\n        width: '60px'\r\n      })),\r\n      state('expanded', style({\r\n        width: '280px'\r\n      })),\r\n      transition('collapsed <=> expanded', animate(200))\r\n    ])\r\n  ]\r\n})\r\nexport class MuiLeftnavComponent implements OnInit {\r\n\r\n  /**\r\n   * Url of the cep API endpoint for left navigation.\r\n   * Should be given as full absolute url including sessionId.\r\n   */\r\n  @Input() apiUrl: string;\r\n  @Input() subNavSwitchDelay = 500;\r\n\r\n  /**\r\n   * Output event which emits when the left nav panel exapnds or collapses\r\n   */\r\n  @Output() navExpanded = new EventEmitter<boolean>();\r\n\r\n  navItems: LeftnavItem[];\r\n  mainNavState: 'expanded' | 'collapsed' = 'collapsed';\r\n  subPanelOpen = false;\r\n\r\n  // the currently active main item (hover state)\r\n  activeMainItem = '';\r\n\r\n  // the currently highlighted items (based on current view / page)\r\n  highlightedSubMenuItem: string | undefined;\r\n  highlightedMainItem = '';\r\n\r\n  navMouseEvents = new Subject<{ event: 'enter' | 'leave', item?: LeftnavItem }>();\r\n  readonly menuLabel = {\r\n    id: 'mm-menu',\r\n    name: 'Menu'\r\n  };\r\n\r\n  constructor(private leftNavService: MuiLeftnavService, @Optional() private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.apiUrl) {\r\n      this.leftNavService.getNavigationItems(this.apiUrl).subscribe(data => {\r\n        this.navItems = data.mainNav;\r\n        this.loadSavedActiveNavItems();\r\n      });\r\n    } else {\r\n      console.warn('MuiLeftnavConponent: No value set for [apiUrl]. No nav items will be generated.');\r\n    }\r\n\r\n    this.navMouseEvents.pipe(debounceTime(this.subNavSwitchDelay)).subscribe(e => this.onNavMouseEvent(e));\r\n  }\r\n\r\n  toggleState(): void {\r\n    this.mainNavState = this.mainNavState === 'collapsed' ? 'expanded' : 'collapsed';\r\n    this.navExpanded.emit(this.mainNavState === 'expanded');\r\n  }\r\n\r\n  onEnterMainItem(item: LeftnavItem): void {\r\n    this.navMouseEvents.next({ event: 'enter', item });\r\n  }\r\n\r\n  onMouseLeaveNav(): void {\r\n    this.navMouseEvents.next({event: 'leave'});\r\n  }\r\n\r\n  setActivePage(sectionId: string, pageId?: string, href?: string): void {\r\n    const activePage = {\r\n      section: sectionId,\r\n      page: pageId ? pageId : null\r\n    };\r\n\r\n    this.leftNavService.saveActiveNavItems(activePage);\r\n\r\n    if (href) {\r\n      // try to handle relative links using the router\r\n      // use location assignment for absolute urls or when no router is available\r\n      if (href.match(/https?:\\/\\//) || !this.router) {\r\n        window.location.assign(href);\r\n      } else {\r\n        this.router.navigate([href]);\r\n        this.highlightedMainItem = sectionId;\r\n        this.highlightedSubMenuItem = pageId;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  private onNavMouseEvent(e: { event: 'enter' | 'leave', item?: LeftnavItem }): void {\r\n    if (e.event === 'enter' && e.item) {\r\n      this.activeMainItem = e.item.id;\r\n      this.subPanelOpen = typeof e.item.menu === 'object';\r\n    } else {\r\n      this.subPanelOpen = false;\r\n      this.activeMainItem = '';\r\n    }\r\n  }\r\n\r\n  private loadSavedActiveNavItems(): void {\r\n    const cepNavActive = this.leftNavService.loadSavedActiveNavItems();\r\n\r\n    // look for saved entries from sesstion storage\r\n    if (cepNavActive !== null) {\r\n      const activeSection = this.navItems.find(item => item.id === cepNavActive.section);\r\n      if (activeSection) {\r\n        this.highlightedMainItem = activeSection.id;\r\n\r\n        if (activeSection.menu) {\r\n          const activePage = activeSection.menu.find(item => item.id === cepNavActive.page);\r\n          if (activePage) {\r\n            this.highlightedSubMenuItem = activePage.id;\r\n          }\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    // if the router is configured, additionally match against the current url and find corresponding items to highlight\r\n    // this will give correct highlight in case of manual entered urls or bookmarks\r\n    if (this.router) {\r\n      this.navItems.find(item => {\r\n        if (item.href === this.router.url) {\r\n          this.highlightedMainItem = item.id;\r\n          this.highlightedSubMenuItem = undefined;\r\n          return true;\r\n        } else if (item.menu) {\r\n          const subItem = item.menu.find(subitem => subitem.href === this.router.url);\r\n          if (subItem) {\r\n            this.highlightedSubMenuItem = subItem.id;\r\n            this.highlightedMainItem = item.id;\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n}\r\n","<nav class=\"leftnav-container\" (mouseleave)=\"onMouseLeaveNav()\">\r\n  <ul class=\"leftnav-main\" [@mainNavState]=\"mainNavState\">\r\n    <li>\r\n      <button mat-button class=\"nav-item main\" (click)=\"toggleState()\">\r\n        <mat-icon class=\"nav-item-icon\">menu</mat-icon>\r\n        &nbsp;\r\n      </button>\r\n    </li>\r\n    <!-- main menu --->\r\n    <li *ngFor=\"let item of navItems\" (mouseenter)=\"onEnterMainItem(item)\">\r\n      <button mat-button class=\"nav-item main\" [class.active]=\"item.id === activeMainItem\"\r\n        [class.highlight]=\"item.id === highlightedMainItem\"\r\n        (click)=\"setActivePage(item.id, undefined, item.href)\">\r\n        <mat-icon class=\"nav-item-icon\">{{ item.matIcon }}</mat-icon>\r\n        {{ item.name }}\r\n        <mat-icon class=\"nav-item-submenu-indicator\" *ngIf=\"item.menu\">chevron_right</mat-icon>\r\n      </button>\r\n    </li>\r\n  </ul>\r\n  <!-- 2nd level menu -->\r\n  <ul class=\"leftnav-sub\" [class.open]=\"subPanelOpen\">\r\n    <li *ngFor=\"let item of navItems\">\r\n      <ul *ngIf=\"item.menu\" class=\"submenu\" [class.active]=\"activeMainItem === item.id\">\r\n        <li class=\"subnav-header\"><h5>{{ item.name }}</h5></li>\r\n        <li *ngFor=\"let subitem of item.menu\">\r\n          <button mat-button class=\"nav-item sub\" [class.highlight]=\"subitem.id === highlightedSubMenuItem\"\r\n            (click)=\"setActivePage(item.id, subitem.id, subitem.href)\">{{ subitem.name }}\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n","import { AfterContentInit, Component, ContentChild, HostBinding, ViewEncapsulation } from '@angular/core';\r\nimport { MuiLeftnavContentComponent } from './mui-leftnav-content.component';\r\nimport { MuiLeftnavComponent } from './mui-leftnav.component';\r\n\r\n/**\r\n * Container component for holding left navigation and main app content\r\n * @deprecated\r\n */\r\n@Component({\r\n  selector: 'mui-leftnav-container',\r\n  exportAs: 'muiLeftnavContainer',\r\n  templateUrl: 'mui-leftnav-container.component.html',\r\n  styleUrls: ['mui-leftnav.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class MuiLeftnavContainerComponent implements AfterContentInit {\r\n\r\n  @HostBinding('class') readonly containerClass = 'mui-leftnav-container';\r\n\r\n  @ContentChild(MuiLeftnavContentComponent) content: MuiLeftnavContentComponent;\r\n  @ContentChild(MuiLeftnavComponent) leftnav: MuiLeftnavComponent;\r\n\r\n  ngAfterContentInit(): void {\r\n    this.leftnav.navExpanded.subscribe(expanded => {\r\n      this.content.isContentPushed = expanded;\r\n    });\r\n  }\r\n}\r\n","<ng-content select=\"mui-leftnav\"></ng-content>\r\n\r\n<ng-content select=\"mui-leftnav-content\"></ng-content>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\n\r\nimport { MuiHeadernavComponent } from './headernav/mui-headernav.component';\r\nimport { HeadernavDialogComponent } from './headernav/headernav-dialog.component';\r\nimport { SessionTimerComponent } from './headernav/session-timer.component';\r\nimport { MuiLeftnavContainerComponent } from './leftnav/mui-leftnav-container.component';\r\nimport { MuiLeftnavContentComponent } from './leftnav/mui-leftnav-content.component';\r\nimport { MuiLeftnavComponent } from './leftnav/mui-leftnav.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatInputModule,\r\n    MatDialogModule,\r\n    MatBadgeModule\r\n\r\n  ],\r\n  exports: [MuiLeftnavComponent, MuiLeftnavContainerComponent, MuiLeftnavContentComponent, MuiHeadernavComponent],\r\n  declarations: [\r\n    MuiLeftnavComponent, MuiLeftnavContainerComponent, MuiLeftnavContentComponent,\r\n    MuiHeadernavComponent, HeadernavDialogComponent, SessionTimerComponent\r\n  ]\r\n})\r\nexport class MuiNavigationModule {\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport type { OnDestroy } from '@angular/core';\r\n\r\n\r\nexport type StepStatus = '' | 'error' | 'edit' | 'done';\r\n\r\n@Component({\r\n  selector: 'mui-step',\r\n  exportAs: 'muiStep',\r\n  styles: [`\r\n    .mui-step-content {\r\n      padding: 24px 0;\r\n      width: 100%;\r\n    }\r\n  `],\r\n  template: `\r\n    <div *ngIf=\"active\" class=\"mui-step-content\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MuiStepComponent implements OnDestroy {\r\n  /* eslint-disable @typescript-eslint/naming-convention, no-underscore-dangle, id-blacklist, id-match */\r\n  private _name: string;\r\n  private _info: string;\r\n  private _active = false;\r\n  private _clickable = false;\r\n  private _status: StepStatus  = '';\r\n\r\n  stepClasses = {};\r\n\r\n  /**\r\n   * Emits when internal state of step changes. Allows parent component to track and issue change detector refresh.\r\n   */\r\n  @Output() stateChanges = new EventEmitter<void>();\r\n\r\n\r\n  constructor(private cdr: ChangeDetectorRef) {\r\n  }\r\n\r\n  get name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  /**\r\n   * Main label to display for the step\r\n   */\r\n  @Input()\r\n  set name(value: string) {\r\n    this._name = value;\r\n    this.onStateChanged();\r\n  }\r\n\r\n  get info(): string {\r\n    return this._info;\r\n  }\r\n\r\n  /**\r\n   * Additional Info to display below the main label\r\n   */\r\n  @Input()\r\n  set info(value: string) {\r\n    this._info = value;\r\n    this.onStateChanged();\r\n  }\r\n\r\n  get active(): boolean {\r\n    return this._active;\r\n  }\r\n\r\n  /**\r\n   * Wether the step is currently active or not\r\n   */\r\n  @Input()\r\n  set active(value: boolean) {\r\n    this._active = value;\r\n    this.onStateChanged();\r\n  }\r\n\r\n  get clickable(): boolean {\r\n    return this._clickable;\r\n  }\r\n\r\n  /**\r\n   * Control if the step should be clickable\r\n   */\r\n  @Input()\r\n  set clickable(value: boolean) {\r\n    this._clickable = value;\r\n    this.onStateChanged();\r\n  }\r\n\r\n  get status(): StepStatus {\r\n    return this._status;\r\n  }\r\n\r\n  @Input()\r\n  set status(value: StepStatus) {\r\n    this._status = value;\r\n    this.onStateChanged();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.stateChanges.complete();\r\n  }\r\n\r\n  private onStateChanged(): void {\r\n    this.setStepClasses();\r\n    this.cdr.markForCheck();\r\n    this.stateChanges.emit();\r\n  }\r\n\r\n  private setStepClasses(): void {\r\n    this.stepClasses = {\r\n      'mui-state-active': this._active,\r\n      'mui-clickable': this._clickable,\r\n      'mui-state-error': this._status === 'error',\r\n      'mui-state-edit': this._status === 'edit',\r\n      'mui-state-done': this._status === 'done'\r\n    };\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  Input\r\n} from '@angular/core';\r\nimport type { AfterContentInit, OnDestroy, QueryList } from '@angular/core';\r\nimport { merge, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { MuiStepComponent, StepStatus } from './mui-step.component';\r\n\r\n@Component({\r\n  selector: 'mui-stepper',\r\n  exportAs: 'muiStepper',\r\n  templateUrl: './mui-stepper.component.html',\r\n  styleUrls: ['./mui-stepper.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class MuiStepperComponent implements AfterContentInit, OnDestroy {\r\n\r\n  @Input() isClickable: boolean;\r\n\r\n  @ContentChildren(MuiStepComponent) steps: QueryList<MuiStepComponent>;\r\n  numberOfSteps = 0;\r\n  activeStepIndex = 0;\r\n\r\n  private destroyed$ = new Subject<void>();\r\n\r\n  constructor(private cdr: ChangeDetectorRef) {\r\n  }\r\n\r\n  get stepArray(): MuiStepComponent[] {\r\n    return this.steps.toArray();\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    // track changes in the child steps\r\n    const stepChangesArray = this.steps.map((step) => step.stateChanges);\r\n    const stepChanges = merge(...stepChangesArray)\r\n      .pipe(\r\n        takeUntil(this.destroyed$)\r\n      );\r\n\r\n    stepChanges.subscribe(() => {\r\n      this.cdr.markForCheck();\r\n    });\r\n\r\n    // get active step\r\n    const activeSteps = this.steps.filter((step) => step.active);\r\n\r\n    // if there is no active step, make first step active\r\n    if (activeSteps.length === 1) {\r\n      this.selectStep(activeSteps[0]);\r\n    } else {\r\n      this.selectStep(this.steps.first);\r\n    }\r\n\r\n    // get number of steps\r\n    this.numberOfSteps = this.steps.length;\r\n\r\n    // set all steps to clickable if stepper is of type clickable\r\n    if (this.isClickable) {\r\n      this.steps.forEach(step => step.clickable = true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Select the given step and make it active\r\n   * @param step Step to make active\r\n   */\r\n  selectStep(step: MuiStepComponent): void {\r\n    this.steps.forEach((s, i) => {\r\n      if (s === step) {\r\n        this.activeStepIndex = i;\r\n      }\r\n      s.active = false;\r\n    });\r\n\r\n    // activate the step the user has clicked\r\n    step.active = true;\r\n  }\r\n\r\n  /**\r\n   * Continue to next step\r\n   */\r\n  nextStep(): void {\r\n    if (this.activeStepIndex < this.numberOfSteps - 1) {\r\n      const steps = this.stepArray;\r\n      steps[this.activeStepIndex].active = false;\r\n      this.activeStepIndex++;\r\n      steps[this.activeStepIndex].active = true;\r\n    }\r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Go back to previous step\r\n   */\r\n  previousStep(): void {\r\n    if (this.activeStepIndex !== 0) {\r\n      const steps = this.stepArray;\r\n      steps[this.activeStepIndex].active = false;\r\n      this.activeStepIndex--;\r\n      steps[this.activeStepIndex].active = true;\r\n    }\r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Set status for a step\r\n   * @param status new status for the step\r\n   * @param stepIndex index of step of which status should be updated. Defaults to current active step\r\n   */\r\n  setStatus(status: StepStatus, stepIndex?: number): void {\r\n    if (!stepIndex) {\r\n      stepIndex = this.activeStepIndex;\r\n    }\r\n\r\n    const activeStep = this.stepArray[stepIndex];\r\n    if (activeStep) {\r\n      activeStep.status = status;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Control clickable state of a step\r\n   * @param clickable wether to set a step to clickable or non-clickable\r\n   * @param stepIndex Index of the step to change. Defaults to current active step\r\n   */\r\n  setClickable(clickable: boolean, stepIndex?: number): void {\r\n    if (!stepIndex) {\r\n      stepIndex = this.activeStepIndex;\r\n    }\r\n\r\n    if (stepIndex < this.stepArray.length) {\r\n      this.stepArray[stepIndex].clickable = clickable;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n}\r\n","<ul class=\"mui-stepper\">\r\n  <li *ngFor=\"let step of steps\" (click)=\"step.clickable && selectStep(step)\" [ngClass]=\"step.stepClasses\"\r\n    [ngStyle]=\"{'width': (100 / numberOfSteps) + '%'}\">\r\n    <div class=\"mui-step-name\">{{step.name}}</div>\r\n    <div class=\"mui-step-info\">{{step.info}}</div>\r\n  </li>\r\n</ul>\r\n<ng-content></ng-content>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MuiStepperComponent } from './mui-stepper.component';\r\nimport { MuiStepComponent } from './mui-step.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [ CommonModule ],\r\n  declarations: [ MuiStepperComponent, MuiStepComponent ],\r\n  exports: [ MuiStepperComponent, MuiStepComponent ]\r\n})\r\n\r\nexport class MuiStepperModule {\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, Directive, Optional } from '@angular/core';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\n\r\n/** @deprecated */\r\n@Component({\r\n  selector: 'mui-drawer',\r\n  exportAs: 'muiDrawer',\r\n  templateUrl: './mui-drawer.component.html',\r\n  styleUrls: ['mui-drawer.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MuiDrawerComponent {\r\n\r\n  constructor(@Optional() private sidenav: MatSidenav) {\r\n  }\r\n\r\n  closeSidenav(): void {\r\n    if (this.sidenav) {\r\n      this.sidenav.close();\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * Supporting directives for content projection\r\n */\r\n\r\n@Directive({\r\n  selector: '[muiDrawerTitle]'\r\n})\r\nexport class MuiDrawerTitleDirective {}\r\n\r\n@Directive({\r\n  selector: '[muiDrawerContent]'\r\n})\r\nexport class MuiDrawerContentDirective {}\r\n\r\n@Directive({\r\n  selector: '[muiDrawerAddons]'\r\n})\r\nexport class MuiDrawerAddonsDirective {}\r\n\r\n@Directive({\r\n  selector: '[muiDrawerControls]'\r\n})\r\nexport class MuiDrawerControlsDirective {}\r\n\r\n","<div class=\"mui-drawer\">\r\n  <div class=\"mui-drawer-header\">\r\n    <div class=\"mui-drawer-title\">\r\n      <ng-content select=\"[muiDrawerTitle]\"></ng-content>\r\n    </div>\r\n    <button mat-icon-button class=\"mui-drawer-close\" [disableRipple]=\"true\" (click)=\"closeSidenav()\" tabindex=\"-1\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"mui-drawer-add-ons\">\r\n    <ng-content select=\"[muiDrawerAddons]\"></ng-content>\r\n  </div>\r\n  <div class=\"mui-drawer-body\">\r\n    <div class=\"mui-drawer-details\">\r\n      <ng-content select=\"[muiDrawerContent]\"></ng-content>\r\n    </div>\r\n    <div class=\"mui-drawer-actions\">\r\n      <ng-content select=\"[muiDrawerControls]\"></ng-content>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport {\r\n  MuiDrawerAddonsDirective,\r\n  MuiDrawerComponent,\r\n  MuiDrawerContentDirective,\r\n  MuiDrawerControlsDirective,\r\n  MuiDrawerTitleDirective\r\n} from './mui-drawer.component';\r\n\r\n@NgModule({\r\n  imports: [MatButtonModule, MatIconModule],\r\n  exports: [MuiDrawerComponent, MuiDrawerTitleDirective, MuiDrawerContentDirective, MuiDrawerAddonsDirective, MuiDrawerControlsDirective],\r\n  declarations: [MuiDrawerComponent, MuiDrawerTitleDirective, MuiDrawerContentDirective, MuiDrawerAddonsDirective,\r\n    MuiDrawerControlsDirective]\r\n})\r\nexport class MuiDrawerModule {\r\n}\r\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  HostBinding,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\n\r\n/**\r\n * Companion component for the engage icon-font, inspired by mat-icon.\r\n * Example: `<mui-icon>profile</mui-icon>`\r\n */\r\n@Component({\r\n  selector: 'mui-icon',\r\n  exportAs: 'muiIcon',\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['./mui-icon.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MuiIconComponent implements OnChanges {\r\n\r\n  @HostBinding('attr.role') role = 'img';\r\n  @HostBinding('class') hostClassNames: string[];\r\n\r\n  /**\r\n   * Define a color theme for the icon, based on Unify color definitions.\r\n   * Value 'default' inherits the color from surrounding elements / rules.\r\n   */\r\n  @Input() color: 'info' | 'warning' | 'error' | 'success' | 'tip' | 'default';\r\n\r\n  private isInline = false;\r\n  private readonly defaultClassNames = ['mui-icon', 'mui-icons'];\r\n\r\n  constructor() {\r\n    this.hostClassNames = [...this.defaultClassNames];\r\n  }\r\n\r\n  /**\r\n   * Whether the icon should be inlined, automatically sizing the icon to match the font size of\r\n   * the element the icon is contained in.\r\n   */\r\n  @Input()\r\n  @HostBinding('class.mui-icon-inline')\r\n  get inline(): boolean {\r\n    return this.isInline;\r\n  }\r\n\r\n  set inline(inline: string | boolean) {\r\n    this.isInline = coerceBooleanProperty(inline);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['color'] && this.color) {\r\n      this.hostClassNames = [...this.defaultClassNames, 'mui-icon-' + this.color]\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MuiIconComponent } from './mui-icon.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [MuiIconComponent],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [MuiIconComponent]\r\n})\r\nexport class MuiIconModule {\r\n}\r\n","import { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport type { SafeHtml } from '@angular/platform-browser';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { NotificationService } from '@mapp-ui/notification-center';\r\n\r\n@Component({\r\n  selector: 'mui-edit-password',\r\n  templateUrl: './edit-password.component.html',\r\n  styleUrls: ['./edit-password.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EditPasswordComponent implements OnInit {\r\n\r\n  @Input()\r\n  userId: string;\r\n\r\n  @Input()\r\n  updatePasswordUrl: string;\r\n\r\n  @Input()\r\n  oldPasswordRequired = false;\r\n\r\n  form: UntypedFormGroup;\r\n  errorMessage: SafeHtml | null;\r\n\r\n  constructor(\r\n      private fb: UntypedFormBuilder,\r\n      private http: HttpClient,\r\n      private nc: NotificationService,\r\n      private sanitizer: DomSanitizer,\r\n      private cd: ChangeDetectorRef\r\n  ) {\r\n  }\r\n\r\n  get newPassword(): UntypedFormControl {\r\n    return this.form.get('new_psw') as UntypedFormControl;\r\n  }\r\n\r\n  get newPasswordConfirm(): UntypedFormControl {\r\n    return this.form.get('new_psw_confirm') as UntypedFormControl;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      new_psw: ['', Validators.required],\r\n      new_psw_confirm: ['', Validators.required]\r\n    }, {\r\n      validators: control => {\r\n        const psw = control.get('new_psw')?.value;\r\n        const pswConfirm = control.get('new_psw_confirm');\r\n        const pswConfirmVal = pswConfirm?.value;\r\n        if (pswConfirmVal.length > 0 && pswConfirmVal !== psw) {\r\n          const passwordMatchError = { noPasswordMatch: true };\r\n          pswConfirm?.setErrors(passwordMatchError);\r\n          return passwordMatchError;\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n    });\r\n\r\n    if (this.oldPasswordRequired) {\r\n      this.form.addControl('psw', this.fb.control('', Validators.required));\r\n    }\r\n  }\r\n\r\n  updatePassword(): void {\r\n    if (this.form.valid) {\r\n      const data = this.form.value;\r\n      data.suid = this.userId;\r\n      data.action = 'changeSystemUserPassword';\r\n      data.errorPage = '/inc/ecError.jsp';\r\n      const body = new HttpParams({ fromObject: data });\r\n\r\n      const responseHandler = (res: string) => {\r\n        if (res.indexOf('ec-errors') > -1) {\r\n          this.errorMessage = this.sanitizer.bypassSecurityTrustHtml(res);\r\n        } else {\r\n          this.nc.addNotification({\r\n            type: 'SUCCESS',\r\n            message: {\r\n              headline: 'Password updated successfully.'\r\n            }\r\n          });\r\n          this.errorMessage = null;\r\n        }\r\n        this.cd.markForCheck();\r\n      };\r\n\r\n      if (this.updatePasswordUrl) {\r\n        this.http.post(this.updatePasswordUrl, body, { responseType: 'text' })\r\n            .subscribe({\r\n              next: responseHandler,\r\n              error: (err: HttpErrorResponse) => {\r\n                this.nc.addNotification({\r\n                  type: 'ERROR',\r\n                  message: {\r\n                    headline: 'Password update failed.',\r\n                    body: err.message\r\n                  }\r\n                });\r\n              }\r\n            });\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n}\r\n","<section class=\"form-container\">\r\n  <h4 class=\"mat-h4\" i18n=\"@@topnav_setpasswd_title\">\r\n    Set a new password\r\n  </h4>\r\n\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"two-col\">\r\n      <div class=\"col\">\r\n        <div *ngIf=\"oldPasswordRequired\">\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label i18n=\"@@topnav_oldpasswd\">Old Password</mat-label>\r\n            <input formControlName=\"psw\"\r\n                matInput\r\n                required\r\n                type=\"password\">\r\n            <mat-error i18n=\"@@topnav_field_required\">This field is required</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label i18n=\"@@topnav_newpasswd\">New Password</mat-label>\r\n            <input formControlName=\"new_psw\"\r\n                matInput\r\n                required\r\n                type=\"password\">\r\n            <mat-error *ngIf=\"newPassword.hasError('required')\"\r\n                i18n=\"@@topnav_field_required\">This field is required</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div>\r\n          <mat-form-field appearance=\"outline\">\r\n            <mat-label i18n=\"@@topnav_confirmpasswd\">Confirm Password</mat-label>\r\n            <input formControlName=\"new_psw_confirm\"\r\n                matInput\r\n                required\r\n                type=\"password\">\r\n            <mat-error *ngIf=\"newPasswordConfirm.hasError('noPasswordMatch')\"\r\n                i18n=\"@@topnav_passwordnomatch\">Passwords do not match\r\n            </mat-error>\r\n            <mat-error *ngIf=\"newPasswordConfirm.hasError('required')\"\r\n                i18n=\"@@topnav_field_required\">This field is required</mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"errorMessage\"\r\n          class=\"col error\">\r\n        <div [innerHTML]=\"errorMessage\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"actions\">\r\n      <button (click)=\"updatePassword()\"\r\n          color=\"primary\"\r\n          mat-flat-button\r\n          type=\"submit\"\r\n          [disabled]=\"form.invalid\"\r\n          i18n=\"@@topnav_savebtn\"\r\n      >Save\r\n      </button>\r\n    </div>\r\n  </form>\r\n</section>\r\n","import { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { NotificationService } from '@mapp-ui/notification-center';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { LanguageData, LanguageList, TimeZoneData, TimeZoneList } from '../../core/models/profile-data';\r\nimport { UserMgmtProperties } from '../../core/models/user-mgmt-properties';\r\n\r\n@Component({\r\n  selector: 'mui-edit-profile',\r\n  templateUrl: './edit-profile.component.html',\r\n  styleUrls: ['./edit-profile.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EditProfileComponent implements OnInit {\r\n\r\n  @Input()\r\n  profileDataUrl: string;\r\n\r\n  @Input()\r\n  languageDataUrl: string;\r\n\r\n  @Input()\r\n  timeZoneDataUrl: string;\r\n\r\n  @Input()\r\n  profileSaveUrl: string;\r\n\r\n  profileData: UserMgmtProperties;\r\n  languages$: Observable<LanguageData[]>;\r\n  timeZones$: Observable<TimeZoneData[]>;\r\n  form: UntypedFormGroup;\r\n  displayMfaSetting = false;\r\n\r\n  constructor(\r\n      private http: HttpClient,\r\n      private fb: UntypedFormBuilder,\r\n      private cd: ChangeDetectorRef,\r\n      private nc: NotificationService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    if (this.profileDataUrl) {\r\n      this.http.get<UserMgmtProperties>(this.profileDataUrl)\r\n          .subscribe(res => {\r\n            this.profileData = res;\r\n            this.form.reset({\r\n              email: this.profileData['systemUser.Email'],\r\n              role: this.profileData['systemUser.CustomerRole'],\r\n              timeZone: this.profileData['systemUser.TimeZone'],\r\n              locale: this.profileData['systemUser.Locale'],\r\n              type: this.profileData['systemUser.Type'],\r\n              communication: this.profileData['systemUser.EmergencyCommunication'] === 'true',\r\n              firstName: this.profileData['systemUser.FirstName'],\r\n              lastName: this.profileData['systemUser.LastName'],\r\n              mfaEnabled: this.profileData['systemUser.MFA'] === 'true'\r\n            });\r\n            this.displayMfaSetting = this.profileData['systemUser.CanViewMFA'] === 'true';\r\n            this.cd.markForCheck();\r\n          });\r\n    }\r\n\r\n    if (this.languageDataUrl) {\r\n      this.languages$ = this.http.get<LanguageList>(this.languageDataUrl)\r\n          .pipe(\r\n              map(res => res.languagewithcountryseq)\r\n          );\r\n    }\r\n\r\n    if (this.timeZoneDataUrl) {\r\n      this.timeZones$ = this.http.get<TimeZoneList>(this.timeZoneDataUrl)\r\n          .pipe(\r\n              map(res => res.timezones)\r\n          );\r\n    }\r\n  }\r\n\r\n  saveUserProfile(): void {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    const formData = this.form.value;\r\n    const rawBody: Record<string, string> = {\r\n      'systemUser.Email': this.profileData['systemUser.Email'],\r\n      'systemUser.PK': this.profileData['systemUser.PK'],\r\n      'systemUser.Type': this.profileData['systemUser.Type'],\r\n      'systemUser.CustomerRole': this.profileData['systemUser.CustomerRole'],\r\n      'systemUser.Locale': formData.locale,\r\n      'systemUser.TimeZone': formData.timeZone,\r\n      'systemUser.FirstName': formData.firstName,\r\n      'systemUser.LastName': formData.lastName,\r\n      'systemUser_emergencyCommunication': formData.communication ? 'on' : 'off',\r\n      action: 'saveSystemUser',\r\n      errorPage: '/inc/ecError.jsp'\r\n    };\r\n    if (this.displayMfaSetting) {\r\n      rawBody['systemUser_mfaAdminRole'] = formData.mfaEnabled ? 'on' : 'off';\r\n    }\r\n\r\n    const body = new HttpParams({ fromObject: rawBody });\r\n\r\n    const responseHandler = (res: string) => {\r\n      if (res.indexOf('ec-errors') > -1) {\r\n        this.nc.addNotification({\r\n          type: 'ERROR',\r\n          message: {\r\n            headline: 'Profile update failed.',\r\n            body: res,\r\n            htmlContent: true\r\n          }\r\n        });\r\n      } else {\r\n        this.nc.addNotification({\r\n          type: 'SUCCESS',\r\n          message: {\r\n            headline: 'Profile updated.'\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    if (this.profileSaveUrl) {\r\n      this.http.post(this.profileSaveUrl, body, { responseType: 'text' })\r\n          .subscribe({\r\n            next: responseHandler,\r\n            error: (err: HttpErrorResponse) => {\r\n              console.error('Unexpected error saving user profile', err);\r\n            }\r\n          });\r\n    }\r\n\r\n  }\r\n\r\n  private createForm(): void {\r\n    this.form = this.fb.group({\r\n      email: [{ value: '', disabled: true }],\r\n      role: [{ value: 'administrator', disabled: true }],\r\n      timeZone: '',\r\n      locale: '',\r\n      type: [{ value: 'h', disabled: true }],\r\n      communication: false,\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      mfaEnabled: false\r\n    });\r\n  }\r\n}\r\n","<section *ngIf=\"profileData\"\r\n    class=\"form-container\">\r\n  <form [formGroup]=\"form\">\r\n    <div class=\"form-row\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label i18n=\"@@topnav_editprofile_accounttype\">Type</mat-label>\r\n        <mat-select formControlName=\"type\">\r\n          <mat-option value=\"u\"\r\n              i18n=\"@@topnav_editprofile_uiuser\">\r\n            UI User\r\n          </mat-option>\r\n          <mat-option value=\"a\"\r\n              i18n=\"@@topnav_editprofile_apiuser\">\r\n            API User\r\n          </mat-option>\r\n          <mat-option value=\"h\"\r\n              i18n=\"@@topnav_editprofile_hybriduser\">\r\n            Hybrid User\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label i18n=\"@@topnav_editprofile_role\">Role</mat-label>\r\n        <mat-select formControlName=\"role\">\r\n          <mat-option value=\"administrator\"\r\n              i18n=\"@@topnav_editprofile_admin\">\r\n            Administrator\r\n          </mat-option>\r\n          <mat-option value=\"project_manager\"\r\n              i18n=\"@@topnav_editprofile_pm\">\r\n            Project Manager\r\n          </mat-option>\r\n          <mat-option value=\"client_admin\"\r\n              i18n=\"@@topnav_editprofile_clientadmin\">\r\n            Client Administrator\r\n          </mat-option>\r\n          <mat-option value=\"super_user\"\r\n              i18n=\"@@topnav_editprofile_superuser\">\r\n            Superuser\r\n          </mat-option>\r\n          <mat-option value=\"user\"\r\n              i18n=\"@@topnav_editprofile_normaluser\">\r\n            Normal User\r\n          </mat-option>\r\n          <mat-option value=\"cust_user1\">\r\n            <span i18n=\"@@topnav_editprofile_customuser\">Custom User</span> 1\r\n          </mat-option>\r\n          <mat-option value=\"cust_user2\">\r\n            <span i18n=\"@@topnav_editprofile_customuser\">Custom User</span> 2\r\n          </mat-option>\r\n          <mat-option value=\"cust_user3\">\r\n            <span i18n=\"@@topnav_editprofile_customuser\">Custom User</span> 3\r\n          </mat-option>\r\n          <mat-option value=\"cust_user4\">\r\n            <span i18n=\"@@topnav_editprofile_customuser\">Custom User</span> 4\r\n          </mat-option>\r\n          <mat-option value=\"cust_user5\">\r\n            <span i18n=\"@@topnav_editprofile_customuser\">Custom User</span> 5\r\n          </mat-option>\r\n          <mat-option value=\"cust_user6\">\r\n            <span i18n=\"@@topnav_editprofile_customuser\">Custom User</span> 6\r\n          </mat-option>\r\n          <mat-option value=\"cust_user7\">\r\n            <span i18n=\"@@topnav_editprofile_customuser\">Custom User</span> 7\r\n          </mat-option>\r\n          <mat-option value=\"cust_user8\">\r\n            <span i18n=\"@@topnav_editprofile_customuser\">Custom User</span> 8\r\n          </mat-option>\r\n          <mat-option value=\"none_role\"\r\n              i18n=\"@@topnav_editprofile_role_none\">\r\n            None\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n    </div>\r\n    <div class=\"form-row\">\r\n      <mat-form-field appearance=\"outline\"\r\n          class=\"email\">\r\n        <mat-label i18n=\"@@topnav_editprofile_email\">Email</mat-label>\r\n        <input formControlName=\"email\"\r\n            matInput\r\n            type=\"email\"\r\n        >\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"form-row\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label i18n=\"@@topnav_editprofile_firstname\">First Name</mat-label>\r\n        <input formControlName=\"firstName\"\r\n            matInput\r\n            required>\r\n        <mat-error i18n=\"@@topnav_field_required\">This field is required</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label i18n=\"@@topnav_editprofile_lastname\">Last Name</mat-label>\r\n        <input formControlName=\"lastName\"\r\n            matInput\r\n            required>\r\n        <mat-error i18n=\"@@topnav_field_required\">This field is required</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"form-row\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label i18n=\"@@topnav_editprofile_language\">Language</mat-label>\r\n        <mat-select formControlName=\"locale\">\r\n          <mat-option *ngFor=\"let lang of languages$ | async\"\r\n              [value]=\"lang.id\">{{ lang.name }}</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label i18n=\"@@topnav_editprofile_timezone\">Time Zone</mat-label>\r\n        <mat-select formControlName=\"timeZone\">\r\n          <mat-option *ngFor=\"let zone of timeZones$ | async\"\r\n              [value]=\"zone.id\">{{ zone.name }}</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"form-row toggle\">\r\n      <mat-slide-toggle formControlName=\"communication\"\r\n          labelPosition=\"after\"\r\n          i18n=\"@@topnav_editprofile_receive_emergency\">Receive emergency\r\n        communication\r\n      </mat-slide-toggle>\r\n    </div>\r\n    <div class=\"form-row toggle\"\r\n        *ngIf=\"displayMfaSetting\">\r\n      <mat-slide-toggle formControlName=\"mfaEnabled\"\r\n          labelPosition=\"after\"\r\n          i18n=\"@@topnav_editprofile_mfa\">Enable MFA for admin role\r\n      </mat-slide-toggle>\r\n    </div>\r\n    <div class=\"actions\">\r\n      <button (click)=\"saveUserProfile()\"\r\n          color=\"primary\"\r\n          mat-flat-button\r\n          type=\"button\"\r\n          i18n=\"@@topnav_savebtn\"\r\n      >Save\r\n      </button>\r\n    </div>\r\n  </form>\r\n</section>\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit, Optional } from '@angular/core';\r\nimport type { NotificationCenterComponent } from '@mapp-ui/notification-center';\r\nimport { NotificationService } from '@mapp-ui/notification-center';\r\nimport { EMPTY, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { NavItem } from '../../core/models/navigation';\r\n\r\n@Component({\r\n  selector: 'mui-notification-bell',\r\n  templateUrl: './notification-bell.component.html',\r\n  styleUrls: ['./notification-bell.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class NotificationBellComponent implements OnInit {\r\n  @Input()\r\n  navItem: NavItem;\r\n  @Input()\r\n  notificationCenter: NotificationCenterComponent;\r\n\r\n  notificationCount: Observable<number>;\r\n  notificationBadgeHidden: Observable<boolean>;\r\n  notificationCenterEnabled = false;\r\n\r\n  constructor(@Optional() private notificationService: NotificationService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.notificationService && this.notificationCenter) {\r\n      this.notificationCount = this.notificationService.unseenCounter;\r\n      this.notificationBadgeHidden = this.notificationCount.pipe(map(x => x === 0));\r\n      this.notificationCenterEnabled = true;\r\n    } else {\r\n      this.notificationCount = EMPTY;\r\n    }\r\n\r\n  }\r\n\r\n  toggleNotificationPanel(): void {\r\n    if (this.notificationCenterEnabled) {\r\n      this.notificationCenter.toggleState();\r\n    }\r\n  }\r\n\r\n}\r\n","<button (click)=\"toggleNotificationPanel()\"\r\n    class=\"mui-auxnav-button\"\r\n    mat-icon-button\r\n    [id]=\"navItem.id\"\r\n>\r\n  <span [matBadgeHidden]=\"notificationBadgeHidden | async\"\r\n      [matBadge]=\"notificationCount | async\"\r\n      class=\"mui-icons\"\r\n      matBadgeColor=\"warn\">{{ navItem.icon }}</span>\r\n</button>\r\n\r\n","import { Component, HostBinding } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mui-lang-change-dialog',\r\n  templateUrl: './lang-change-dialog.component.html',\r\n  styleUrls: ['./lang-change-dialog.component.scss']\r\n})\r\nexport class LangChangeDialogComponent {\r\n  @HostBinding('class') hostClass = 'mui-dialog';\r\n}\r\n","<button mat-icon-button\r\n    mat-dialog-close=\"cancel\"\r\n    class=\"mui-dialog-close\">\r\n  <mui-icon>close</mui-icon>\r\n</button>\r\n\r\n<h2 class=\"dialog-title-icon-centered\"\r\n    mat-dialog-title>\r\n  <mui-icon color=\"info\">info</mui-icon>\r\n  <span i18n=\"@@topnav_langchange_title\">The language will be changed</span>\r\n</h2>\r\n<mat-dialog-content class=\"mat-typography dialog-content-centered\">\r\n  <p i18n=\"@@topnav_langchange_text1\">Engage needs to be reloaded to apply the language change. You will be redirected\r\n    to the start page.</p>\r\n  <p i18n=\"@@topnav_langchange_text2\">Any unsaved work will be lost.</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"center\">\r\n  <button color=\"primary\"\r\n      mat-dialog-close=\"cancel\"\r\n      mat-stroked-button\r\n      i18n=\"@@topnav_cancelbtn\"\r\n  >Cancel\r\n  </button>\r\n  <button color=\"primary\"\r\n      mat-dialog-close=\"change\"\r\n      mat-flat-button\r\n      i18n=\"@@topnav_langchange_changebtn\"\r\n  >Change\r\n  </button>\r\n</mat-dialog-actions>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n/**\r\n * Dialog component which handles the \"About\" dialog as well as the \"Account Settings\"\r\n */\r\n@Component({\r\n  templateUrl: './top-nav-dialog.component.html',\r\n  styleUrls: ['./top-nav-dialog.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TopNavDialogComponent implements OnInit {\r\n  @HostBinding('class') hostClass = 'mui-dialog';\r\n  htmlContent: SafeHtml;\r\n\r\n  constructor(\r\n      @Inject(MAT_DIALOG_DATA) public data: any,\r\n      private sanitizer: DomSanitizer,\r\n      private http: HttpClient,\r\n      private cd: ChangeDetectorRef\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.data.srcUrl) {\r\n      this.http.get(this.data.srcUrl, { responseType: 'text' })\r\n          .subscribe(content => {\r\n            this.htmlContent = this.sanitizer.bypassSecurityTrustHtml(content);\r\n            this.cd.detectChanges();\r\n          });\r\n    }\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>\r\n  <span *ngIf=\"data.title\">{{ data.title }}</span>\r\n  <span *ngIf=\"data.accountSettings\" i18n=\"@@topnav_account_tab\">Account Settings</span>\r\n</h2>\r\n<button class=\"mui-dialog-close\"\r\n    mat-dialog-close=\"close\"\r\n    tabindex=\"-1\"\r\n    mat-icon-button>\r\n  <span class=\"mui-icons account-dialog-close\">close</span>\r\n</button>\r\n\r\n<div class=\"mui-nav-dialog-content\">\r\n  <mat-tab-group *ngIf=\"data.accountSettings\"\r\n      mat-stretch-tabs=\"false\">\r\n    <mat-tab label=\"Edit Profile\"\r\n        i18n-label=\"@@topnav_editprofile_tab\">\r\n      <ng-template matTabContent>\r\n        <mui-edit-profile\r\n            [languageDataUrl]=\"data.languageDataUrl\"\r\n            [profileDataUrl]=\"data.profileDataUrl\"\r\n            [profileSaveUrl]=\"data.profileSaveUrl\"\r\n            [timeZoneDataUrl]=\"data.timeZoneDataUrl\"></mui-edit-profile>\r\n      </ng-template>\r\n    </mat-tab>\r\n    <mat-tab label=\"New Password\"\r\n        i18n-label=\"@@topnav_newpasswd_tab\">\r\n      <ng-template matTabContent>\r\n        <mui-edit-password [updatePasswordUrl]=\"data.updatePasswordUrl\"\r\n            [userId]=\"data.userId\"\r\n            [oldPasswordRequired]=\"data.oldPasswordRequired\"\r\n        ></mui-edit-password>\r\n      </ng-template>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n\r\n  <div *ngIf=\"htmlContent\"\r\n      [innerHTML]=\"htmlContent\"></div>\r\n\r\n  <div *ngFor=\"let item of data.additionalContent\">\r\n    {{ item }}\r\n  </div>\r\n\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: './timeout-dialog.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TimeoutDialogComponent {\r\n  @HostBinding('class') hostClass = 'mui-dialog';\r\n}\r\n","<h2 class=\"dialog-title-icon-centered\"\r\n    mat-dialog-title>\r\n  <mui-icon color=\"warning\">warning</mui-icon>\r\n  <span i18n=\"@@topnav_sessiontimeout_title\">Session Timeout Alert</span>\r\n</h2>\r\n<mat-dialog-content class=\"mat-typography dialog-content-centered\">\r\n  <p class=\"timeout-minutes\"\r\n      i18n=\"@@topnav_sessiontimeout_text1\">Your session will end in 5 minutes.</p>\r\n  <p i18n=\"@@topnav_sessiontimeout_text2\">You've been timed out due to inactivity. You may <span\r\n      class=\"bold\">stop the timer</span> or\r\n    <span class=\"bold\">resume working normally.</span></p>\r\n  <p i18n=\"@@topnav_sessiontimeout_text3\">You will be logged out automatically when the session expires.</p>\r\n  <p class=\"timer-menu-hint\"\r\n      i18n=\"@@topnav_sessiontimeout_text4\">You can restart the timer from the User Menu.</p>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"center\">\r\n  <button color=\"primary\"\r\n      mat-dialog-close=\"Resume\"\r\n      mat-flat-button\r\n      i18n=\"@@topnav_sessiontimeout_resume\"\r\n  >Resume\r\n  </button>\r\n  <button color=\"primary\"\r\n      mat-dialog-close=\"Stop\"\r\n      mat-flat-button\r\n      i18n=\"@@topnav_sessiontimeout_stop\"\r\n  >Stop Timeout\r\n  </button>\r\n</mat-dialog-actions>\r\n","import { Injectable } from '@angular/core';\r\nimport { Navigation } from '../core/models/navigation';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TopNavigationCacheService {\r\n  private readonly storageKeyData = 'muiTopNavData';\r\n  private readonly storageKeySession = 'muiTopNavSession';\r\n\r\n  loadStoredNavigationData(): Navigation | null {\r\n    if (this.isCachedSessionIdValid()) {\r\n      const storedData = sessionStorage.getItem(this.storageKeyData);\r\n      if (storedData) {\r\n        return JSON.parse(storedData);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  storeNavigationData(data: Navigation): void {\r\n    sessionStorage.setItem(this.storageKeyData, JSON.stringify(data));\r\n    const sessionId = this.getSessionIdFromRequest();\r\n    if (sessionId) {\r\n      sessionStorage.setItem(this.storageKeySession, sessionId);\r\n    }\r\n  }\r\n\r\n  invalidateCache(): void {\r\n    console.log('top navigation: clearing cache');\r\n    sessionStorage.removeItem(this.storageKeySession);\r\n    sessionStorage.removeItem(this.storageKeyData);\r\n  }\r\n\r\n  private isCachedSessionIdValid() {\r\n    const storedSessionId = sessionStorage.getItem(this.storageKeySession);\r\n    const currentSessionId = this.getSessionIdFromRequest();\r\n    return !!(storedSessionId && currentSessionId && storedSessionId === currentSessionId);\r\n  }\r\n\r\n  private getSessionIdFromRequest(): string | undefined {\r\n    return window.location.pathname.match(/;jsessionid=[A-F0-9]{32}(?:;[a-z0-9]+)?/)?.[0];\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable, Optional } from '@angular/core';\r\nimport type {} from '@angular/localize/init';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport type { VolatileNotification } from '@mapp-ui/notification-center';\r\nimport { NotificationService } from '@mapp-ui/notification-center';\r\nimport { BehaviorSubject, concat, EMPTY, Observable, Subject, Subscription, timer } from 'rxjs';\r\nimport { debounceTime, mapTo } from 'rxjs/operators';\r\nimport { TimeoutDialogComponent } from '../components/timeout-dialog/timeout-dialog.component';\r\nimport { NavItem } from '../core/models/navigation';\r\nimport { KeepAliveResponse, SessionTimerConfig } from '../core/models/session-timer';\r\nimport { TopNavigationCacheService } from './top-navigation-cache.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SessionTimerService {\r\n\r\n  private config: SessionTimerConfig;\r\n  private endpointUrl: string;\r\n  private timerSubscription: Subscription;\r\n  private activeKeepAlive: Subscription;\r\n  private isTimeoutActive$ = new BehaviorSubject<boolean>(true);\r\n  private isInitialized = false;\r\n  private timerReset$ = new Subject<void>();\r\n\r\n  constructor(\r\n      private http: HttpClient,\r\n      private dialog: MatDialog,\r\n      private cacheService: TopNavigationCacheService,\r\n      @Optional() private notificationService: NotificationService\r\n  ) {\r\n  }\r\n\r\n  get isTimeoutActive(): Observable<boolean> {\r\n    return this.isTimeoutActive$.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Initialize the service based on the provided configuration\r\n   * @param navItem navigation item for the timer, holding the configuration data\r\n   */\r\n  init(navItem: NavItem): void {\r\n    this.config = navItem.properties as unknown as SessionTimerConfig;\r\n    this.endpointUrl = navItem.href ?? '';\r\n\r\n    if (this.config.keepAlive && !this.config.idleMode) {\r\n      this.startKeepAlive();\r\n    } else {\r\n      this.startTimer();\r\n    }\r\n\r\n    if (this.config.idleMode) {\r\n      this.onIdleModeActivated();\r\n    }\r\n\r\n    this.timerResetListener();\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  /**\r\n   * Start the \"keep alive\" mode.\r\n   * Backend will be pinged periodically (30 seconds) to keep the session alive.\r\n   */\r\n  startKeepAlive(clearCache = false): void {\r\n    this.stopTimer();\r\n    this.activeKeepAlive = timer(10, 30000)\r\n        .subscribe(() => {\r\n          this.startKeepAliveReq()\r\n              .subscribe(res => {\r\n                if (res.idleMode) {\r\n                  this.onIdleModeActivated();\r\n                  this.startTimer();\r\n                }\r\n              });\r\n        });\r\n\r\n    this.isTimeoutActive$.next(false);\r\n    if (clearCache) {\r\n      this.cacheService.invalidateCache();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop the \"keep alive\" mode and restart the regular timeout monitor.\r\n   */\r\n  stopKeepAlive(): void {\r\n    this.activeKeepAlive.unsubscribe();\r\n    this.stopKeepAliveReq()\r\n        .subscribe();\r\n\r\n    this.startTimer();\r\n    this.isTimeoutActive$.next(true);\r\n    this.cacheService.invalidateCache();\r\n  }\r\n\r\n  /**\r\n   * Reset the current timer and start a new countdown.\r\n   * Used by SessionInterceptor\r\n   */\r\n  resetTimer(): void {\r\n    if (!this.activeKeepAlive || this.activeKeepAlive.closed) {\r\n      this.timerReset$.next();\r\n    }\r\n  }\r\n\r\n  private timerResetListener(): void {\r\n    this.timerReset$\r\n        .pipe(debounceTime(10000))\r\n        .subscribe(() => {\r\n          if (this.isInitialized) {\r\n            console.log('session timer reset.');\r\n            this.stopTimer();\r\n            this.startTimer();\r\n          }\r\n        });\r\n  }\r\n\r\n  private onSessionTimedOut(): void {\r\n    if (this.notificationService) {\r\n      const notification: VolatileNotification = {\r\n        type: 'WARNING',\r\n        message: {\r\n          headline: $localize`:@@topnav_session_expired:Your session expired. You will be redirected to the login page.`\r\n        }\r\n      };\r\n      this.notificationService.addNotification(notification);\r\n    }\r\n  }\r\n\r\n  private onIdleModeActivated(): void {\r\n    if (this.notificationService) {\r\n      const notification: VolatileNotification = {\r\n        type: 'WARNING',\r\n        message: {\r\n          headline: $localize`:@@topnav_system_restart:Your Engage system will restart shortly due to a server reboot. Please save your work and log out. You can log back in immediately.`\r\n        }\r\n      };\r\n      this.notificationService.addNotification(notification);\r\n    }\r\n\r\n  }\r\n\r\n  private startKeepAliveReq(): Observable<KeepAliveResponse> {\r\n    return this.doRequest(new HttpParams().set('keepAlive', 'true'));\r\n  }\r\n\r\n  private stopKeepAliveReq(): Observable<KeepAliveResponse> {\r\n    return this.doRequest(new HttpParams().set('keepAlive', 'false'));\r\n  }\r\n\r\n  private doRequest(params?: HttpParams): Observable<KeepAliveResponse> {\r\n    const isValid = this.endpointUrl.length > 0;\r\n    if (!isValid) {\r\n      console.warn('Endpoint url for session timer is empty. Please check configuration');\r\n      return EMPTY;\r\n    }\r\n\r\n    if (params) {\r\n      return this.http.get<KeepAliveResponse>(this.endpointUrl, { params });\r\n    }\r\n\r\n    return this.http.get<KeepAliveResponse>(this.endpointUrl);\r\n  }\r\n\r\n  private startTimer(): void {\r\n    const warningTime = this.config.timeout * (5 / 6); // 25 minutes for 30 min session\r\n    const timeoutTime = this.config.timeout / 6; // 5 minutes for 30 min session\r\n    const warningTimer = timer(warningTime)\r\n        .pipe(mapTo('warning'));\r\n    const expiryTimer = timer(timeoutTime)\r\n        .pipe(mapTo('expired'));\r\n\r\n    this.timerSubscription = concat(warningTimer, expiryTimer)\r\n        .subscribe(v => {\r\n          if (v === 'warning') {\r\n            this.showTimeoutWarningDialog();\r\n          }\r\n          if (v === 'expired') {\r\n            this.timerSubscription.unsubscribe();\r\n            this.onSessionTimedOut();\r\n\r\n            if (this.config.expiredHref.length > 0) {\r\n              setTimeout(() => {\r\n                window.location.assign(this.config.expiredHref);\r\n              }, 5000);\r\n            }\r\n          }\r\n        });\r\n\r\n\r\n    if (this.activeKeepAlive && !this.activeKeepAlive.closed) {\r\n      this.stopKeepAliveReq();\r\n    }\r\n\r\n  }\r\n\r\n  private stopTimer(): void {\r\n    this.timerSubscription?.unsubscribe();\r\n  }\r\n\r\n  private showTimeoutWarningDialog(): void {\r\n    const dialogConfig: MatDialogConfig = {\r\n      width: '500px',\r\n      hasBackdrop: true,\r\n      disableClose: true,\r\n      autoFocus: false,\r\n      panelClass: 'mui-timeout-dialog'\r\n    };\r\n    const dialogRef = this.dialog.open(TimeoutDialogComponent, dialogConfig);\r\n    dialogRef.afterClosed()\r\n        .subscribe(res => {\r\n          if (res === 'Stop') {\r\n            this.startKeepAlive(true);\r\n          }\r\n        });\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Navigation, NavItem } from '../core/models/navigation';\r\nimport { TopNavigationCacheService } from './top-navigation-cache.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TopNavigationService {\r\n  private helpTopicKeys$ = new BehaviorSubject<string>('default');\r\n  private helpBaseUrl = '';\r\n  private activeMenuIdChanges$: BehaviorSubject<string>;\r\n  private serviceVersionInfos: string[] = [];\r\n\r\n  constructor(\r\n      private http: HttpClient,\r\n      private cacheService: TopNavigationCacheService\r\n  ) {\r\n    this.activeMenuIdChanges$ = new BehaviorSubject<string>('');\r\n  }\r\n\r\n  /** Load navigation data from provided endpoint URL */\r\n  loadNavigationData(apiUrl: string, disableCache: boolean, forceReload: boolean): Observable<Navigation> {\r\n    if (!apiUrl) {\r\n      throw new Error('No API URL defined for top navigation component.');\r\n    }\r\n\r\n    if (forceReload) {\r\n      this.cacheService.invalidateCache();\r\n    }\r\n\r\n    let result$;\r\n    let cached = false;\r\n    const storedData = disableCache ? null : this.cacheService.loadStoredNavigationData();\r\n    if (storedData) {\r\n      cached = true;\r\n      result$ = of(storedData);\r\n    } else {\r\n      result$ = this.http.get<Navigation>(apiUrl);\r\n    }\r\n    return result$\r\n        .pipe(\r\n            tap(navData => {\r\n              this.initHelpLink(navData);\r\n              this.initActiveMenuSection(navData);\r\n              if (!cached && !disableCache) {\r\n                this.cacheService.storeNavigationData(navData);\r\n              }\r\n            })\r\n        );\r\n  }\r\n\r\n  /**\r\n   * Provide a new topic key for context aware deep linking. It will be used the next time when help link is clicked\r\n   * in the help menu.\r\n   * @example\r\n   * updateHelpLink('channels-inapp-list');\r\n   * // resulting link: https://supportlink.mapp.com/redirect?label=Engage_channels-inapp-list&language=en\r\n   * @param topicId the new topic id to use when help link is clicked.\r\n   * Will be prefixed with 'Engage_' in the resulting link\r\n   */\r\n  updateHelpLink(topicId: string): void {\r\n    this.helpTopicKeys$.next(topicId);\r\n  }\r\n\r\n  /**\r\n   * Retrieve an updated online help link based on the original one and the current value from the help topics stream.\r\n   * @param helpLink URL for the original help link\r\n   * @exception Fails with TypeError when provided string cannot be parsed as URL\r\n   */\r\n  getUpdatedHelpLink(helpLink: string): string {\r\n    const helpUrl = new URL(helpLink);\r\n    const prefix = 'Engage_';\r\n    if (helpUrl.searchParams.get('label') !== null) {\r\n      let helpTopic = this.helpTopicKeys$.value;\r\n      if (!helpTopic.startsWith(prefix)) {\r\n        helpTopic = prefix + helpTopic;\r\n      }\r\n      helpUrl.searchParams.set('label', helpTopic);\r\n      helpUrl.hash = '';\r\n    }\r\n    return helpUrl.toString();\r\n  }\r\n\r\n  /**\r\n   * Get the current help url based on nav data base url and current state based on calls to 'updateHelpLink'.\r\n   * Only works once nav data has been loaded, error thrown otherwise.\r\n   */\r\n  getCurrentHelpUrl(): string {\r\n    return this.getUpdatedHelpLink(this.helpBaseUrl);\r\n  }\r\n\r\n  /** Send a request to backend to change the desired UI language */\r\n  changeUILanguage(url: string): void {\r\n    this.cacheService.invalidateCache();\r\n    // TODO remove once URL in endpoint has been changed to correct format\r\n    const startPageUrl = url.replace('/automated/action.jsp', '/start.jsp')\r\n    window.location.assign(startPageUrl);\r\n  }\r\n\r\n  /**\r\n   * An Observable which emits the id of the currently active main navigation section.\r\n   * Changes when user navigates to a new page.\r\n   */\r\n  get activeMenuIdChanges(): Observable<string> {\r\n    return this.activeMenuIdChanges$.asObservable();\r\n  }\r\n\r\n  /** Return the ID of the active menu section based on the current view */\r\n  get activeNavMenuId(): string {\r\n    return this.activeMenuIdChanges$.value;\r\n  }\r\n\r\n  /** Update the active top nav menu Id. Should be called when navigating to a new page. */\r\n  set activeNavMenuId(menuId: string) {\r\n    this.activeMenuIdChanges$.next(menuId)\r\n  }\r\n\r\n  /**\r\n   * Add info about your service to the \"About Engage\" dialog. Entries will be added at the bottom of the dialog,\r\n   * after the main content retrieved from aboutEcm.jsp\r\n   * @param info new entry to be added. Needs to be a plain string.\r\n   */\r\n  addServiceVersionInfo(info: string): void {\r\n    this.serviceVersionInfos.push(info);\r\n  }\r\n\r\n  /**\r\n   * Retrieve current value for service versions which have been added so far.\r\n   */\r\n  getServiceVersionInfos(): string[] {\r\n    return this.serviceVersionInfos;\r\n  }\r\n\r\n  /**\r\n   * Extract the help url and make it available to getCurrentHelpUrl.\r\n   * Needed by some Engage legacy use cases.\r\n   */\r\n  private initHelpLink(navData: Navigation): void {\r\n    const helpItem = navData.auxNav.find(item => item.id === 'aux-help')\r\n        ?.menu\r\n        ?.find(item => item.id === 'aux-help-onlinehelp');\r\n    this.helpBaseUrl = helpItem?.href ?? '';\r\n  }\r\n\r\n  /**\r\n   * Try to find the top navigation section which is currently \"active\".\r\n   * Based on matching the current window url against all navigation links retrieved from API.\r\n   */\r\n  private initActiveMenuSection(navData: Navigation): void {\r\n    const location = window.location.href;\r\n    const findMatchingHref = (\r\n        data: NavItem[],\r\n        result: string[]): boolean => {\r\n      return data.some(val => {\r\n        result.push(val.id);\r\n        if (location === val?.href) {\r\n          return true;\r\n        } else if (val.menu) {\r\n          const inner = findMatchingHref(val.menu, result);\r\n          result.pop();\r\n          return inner;\r\n        } else {\r\n          result.pop();\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n\r\n    const matchedNavSection: string[] = [];\r\n    findMatchingHref(navData.mainNav.slice(1), matchedNavSection);\r\n    if (matchedNavSection[0]) {\r\n      this.activeNavMenuId = matchedNavSection[0]\r\n    } else if (location.endsWith('start.jsp')) { // special handling for first arrival on start page after login\r\n      this.activeNavMenuId = 'nav-dashboard';\r\n    }\r\n  }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { Observable } from 'rxjs';\r\nimport { NavItem } from '../../core/models/navigation';\r\nimport { SessionTimerService } from '../../services/session-timer.service';\r\nimport { TopNavigationService } from '../../services/top-navigation.service';\r\nimport { LangChangeDialogComponent } from '../lang-change-dialog/lang-change-dialog.component';\r\nimport { TopNavDialogComponent } from '../top-nav-dialog/top-nav-dialog.component';\r\n\r\n@Component({\r\n  selector: 'mui-profile-menu',\r\n  templateUrl: './profile-menu.component.html',\r\n  styleUrls: ['./profile-menu.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ProfileMenuComponent implements OnInit {\r\n  @Input()\r\n  navItem: NavItem;\r\n\r\n  isActiveMenu = false;\r\n  userInitials: string;\r\n  isTimeoutActive$: Observable<boolean>;\r\n\r\n  constructor(\r\n      private dialog: MatDialog,\r\n      private timerService: SessionTimerService,\r\n      private topNavService: TopNavigationService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initSessionTimer();\r\n    this.setUserInitials();\r\n    this.prepareLanguageMenu();\r\n  }\r\n\r\n  onMenuOpened(): void {\r\n    this.isActiveMenu = true;\r\n  }\r\n\r\n  onMenuClosed(): void {\r\n    this.isActiveMenu = false;\r\n  }\r\n\r\n  onItemClicked(menuItem: NavItem): void {\r\n    switch (menuItem.id) {\r\n      case 'aux-user-settings':\r\n        this.openAccountDialog(menuItem);\r\n        break;\r\n      default:\r\n        this.handleGenericClick(menuItem);\r\n    }\r\n  }\r\n\r\n  onLangMenuClicked(menuItem: NavItem): void {\r\n    const config: MatDialogConfig = {\r\n      autoFocus: false,\r\n      hasBackdrop: true,\r\n      width: '500px'\r\n    };\r\n\r\n    const dialogRef = this.dialog.open(LangChangeDialogComponent, config);\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (res === 'change' && menuItem.href) {\r\n        this.topNavService.changeUILanguage(menuItem.href);\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubMenuClosed(): void {\r\n    // intentionally empty, just needed to refresh hover state in menu\r\n  }\r\n\r\n  toggleSessionTimer($event: MatSlideToggleChange): void {\r\n    if ($event.checked) {\r\n      this.timerService.stopKeepAlive();\r\n    } else {\r\n      this.timerService.startKeepAlive(true);\r\n    }\r\n  }\r\n\r\n  private openAccountDialog(item: NavItem): void {\r\n    const config: MatDialogConfig = {\r\n      autoFocus: false,\r\n      hasBackdrop: true,\r\n      width: '700px',\r\n      minHeight: 500,\r\n      disableClose: true,\r\n      panelClass: 'mui-top-nav-dialog',\r\n      data: {\r\n        ...item.properties,\r\n        accountSettings: true\r\n      }\r\n    };\r\n\r\n    this.dialog.open(TopNavDialogComponent, config);\r\n  }\r\n\r\n  private handleGenericClick(menuItem: NavItem): void {\r\n    if (menuItem.href) {\r\n      window.location.assign(menuItem.href);\r\n    }\r\n  }\r\n\r\n  private setUserInitials(): void {\r\n    const userName = this.navItem?.properties?.['userName'] as string;\r\n    if (userName) {\r\n      this.userInitials = userName.split(' ')\r\n          .reduce((\r\n              prev,\r\n              current) => {\r\n            return prev + current.substring(0, 1);\r\n          }, '');\r\n    }\r\n  }\r\n\r\n  private initSessionTimer(): void {\r\n    const config = this.navItem?.menu?.find(itm => itm.id === 'aux-timer');\r\n    if (config) {\r\n      this.timerService.init(config);\r\n    }\r\n    this.isTimeoutActive$ = this.timerService.isTimeoutActive;\r\n  }\r\n\r\n  private prepareLanguageMenu(): void {\r\n    const mainLangEntry = this.navItem?.menu?.find(itm => itm.id === 'aux-user-lang');\r\n    if (mainLangEntry && mainLangEntry.properties && mainLangEntry.menu) {\r\n      const currentLangId = mainLangEntry.properties['currentLanguageId'];\r\n      const index = mainLangEntry.menu.findIndex(i => i.id === currentLangId);\r\n      if (index > -1) {\r\n        const currentLangEntry = mainLangEntry.menu.splice(index, 1)[0];\r\n        mainLangEntry.name = currentLangEntry.name;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<button (menuClosed)=\"onMenuClosed()\"\r\n    (menuOpened)=\"onMenuOpened()\"\r\n    *ngIf=\"navItem.icon\"\r\n    [class.active]=\"isActiveMenu\"\r\n    [matMenuTriggerFor]=\"level2\"\r\n    class=\"mui-navitem-icon-btn\"\r\n    mat-icon-button\r\n    [id]=\"navItem.id\"\r\n>\r\n  <span *ngIf=\"!userInitials\"\r\n      class=\"mui-icons\">{{ navItem.icon }}</span>\r\n  <span *ngIf=\"userInitials\"\r\n      class=\"initials\">{{ userInitials }}</span>\r\n</button>\r\n\r\n<mat-menu #level2=\"matMenu\"\r\n    class=\"mui-navitem-menu\">\r\n  <ng-container *ngFor=\"let menuItem of navItem.menu\">\r\n    <ng-container [ngSwitch]=\"menuItem.id\">\r\n      <button *ngSwitchCase=\"'aux-user-lang'\"\r\n          [matMenuTriggerData]=\"{items: menuItem.menu}\"\r\n          [matMenuTriggerFor]=\"level3\"\r\n          class=\"mui-navitem-button\"\r\n          mat-menu-item\r\n          (menuClosed)=\"onSubMenuClosed()\"\r\n          [id]=\"'2-' + menuItem.id\"\r\n      >\r\n        <span>{{ menuItem.name }}</span>\r\n      </button>\r\n      <div *ngSwitchCase=\"'aux-timer'\"\r\n          class=\"mui-navitem-button\"\r\n          mat-menu-item\r\n          [id]=\"'2-' + menuItem.id\"\r\n      >\r\n        <mat-slide-toggle\r\n            (change)=\"toggleSessionTimer($event)\"\r\n            [checked]=\"isTimeoutActive$ | async\"\r\n            color=\"primary\"\r\n            labelPosition=\"before\"\r\n        >{{ menuItem.name }}</mat-slide-toggle>\r\n      </div>\r\n      <button *ngSwitchDefault\r\n          (click)=\"onItemClicked(menuItem)\"\r\n          class=\"mui-navitem-button\"\r\n          mat-menu-item\r\n          [id]=\"'2-' + menuItem.id\"\r\n      >\r\n        <span>{{ menuItem.name }}</span>\r\n      </button>\r\n    </ng-container>\r\n  </ng-container>\r\n</mat-menu>\r\n\r\n<mat-menu #level3=\"matMenu\"\r\n    class=\"mui-navitem-menu\">\r\n  <ng-template let-items=\"items\"\r\n      matMenuContent>\r\n    <button (click)=\"onLangMenuClicked(itm)\"\r\n        *ngFor=\"let itm of items\"\r\n        class=\"mui-navitem-button\"\r\n        mat-menu-item\r\n        [id]=\"'3-' + itm.id\"\r\n    >{{ itm.name}}</button>\r\n  </ng-template>\r\n</mat-menu>\r\n","import { Component, Input } from '@angular/core';\r\nimport { NavItem } from '../../core/models/navigation';\r\n\r\n@Component({\r\n  selector: 'mui-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent {\r\n  @Input()\r\n  navItem: NavItem;\r\n\r\n  isSearchOpen = false;\r\n\r\n  onSearchTermEntered(value: string): void {\r\n    const searchQuery = this.navItem.href + encodeURIComponent(value);\r\n    window.location.assign(searchQuery);\r\n  }\r\n}\r\n","<button #trigger=\"cdkOverlayOrigin\"\r\n    (click)=\"isSearchOpen = !isSearchOpen\"\r\n    [class.active]=\"isSearchOpen\"\r\n    cdkOverlayOrigin\r\n    class=\"mui-auxnav-button\"\r\n    mat-icon-button\r\n    [id]=\"navItem.id\"\r\n>\r\n  <span class=\"mui-icons\">{{ navItem.icon }}</span>\r\n</button>\r\n\r\n<ng-template\r\n    (overlayOutsideClick)=\"isSearchOpen = false\"\r\n    [cdkConnectedOverlayOpen]=\"isSearchOpen\"\r\n    [cdkConnectedOverlayOrigin]=\"trigger\"\r\n    cdkConnectedOverlay\r\n>\r\n  <div class=\"mui-aux-search-panel\"\r\n      cdkTrapFocus\r\n      [cdkTrapFocusAutoCapture]=\"true\"\r\n  >\r\n    <mat-form-field appearance=\"outline\"\r\n        class=\"mui-aux-search-field\">\r\n      <input #search\r\n          (keyup.enter)=\"onSearchTermEntered(search.value)\"\r\n          matInput\r\n          placeholder=\"Search\"\r\n          i18n-placeholder=\"placeholder on search input@@topnav_search_placeholder\"\r\n          cdkFocusInitial\r\n      />\r\n      <button *ngIf=\"search.value !== ''\"\r\n          (click)=\"search.value = ''\"\r\n          aria-label=\"Clear search\"\r\n          mat-icon-button\r\n          matIconSuffix>\r\n        <span class=\"mui-icons search-clear-icon\">close</span>\r\n      </button>\r\n\r\n    </mat-form-field>\r\n  </div>\r\n\r\n</ng-template>\r\n","import { DOCUMENT } from '@angular/common';\r\nimport { ChangeDetectionStrategy, Component, HostBinding, Inject, Input, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { NavItem } from '../../core/models/navigation';\r\nimport { TopNavigationService } from '../../services/top-navigation.service';\r\nimport { TopNavDialogComponent } from '../top-nav-dialog/top-nav-dialog.component';\r\n\r\n@Component({\r\n  selector: 'mui-top-nav-menu',\r\n  templateUrl: './top-nav-menu.component.html',\r\n  styleUrls: ['./top-nav-menu.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TopNavMenuComponent implements OnInit {\r\n\r\n  @HostBinding('class')\r\n  hostClassName = 'mui-top-nav-menu';\r\n\r\n  @Input()\r\n  navItem: NavItem;\r\n\r\n  isHighlightedMenu: Observable<boolean>;\r\n  isActiveMenu = false;\r\n\r\n  private readonly baseHref: string;\r\n\r\n  constructor(\r\n      private dialog: MatDialog,\r\n      private service: TopNavigationService,\r\n      @Inject(DOCUMENT) private document: Document,\r\n      private router: Router\r\n  ) {\r\n    this.baseHref = this.document.getElementsByTagName('base')?.[0]?.href;\r\n  }\r\n\r\n  onItemClicked(menuItem: NavItem, event: MouseEvent): void {\r\n    event.preventDefault();\r\n    if (menuItem.id === 'aux-help-onlinehelp' && menuItem.href) {\r\n      this.openHelpLink(menuItem.href);\r\n    } else if (menuItem.properties?.['blank']) {\r\n      window.open(menuItem.href);\r\n    } else if (menuItem.properties?.['modal']) {\r\n      this.openDialog(menuItem);\r\n    } else if (menuItem.href) {\r\n      this.navigateTo(menuItem.href);\r\n    }\r\n  }\r\n\r\n  onMenuOpened(): void {\r\n    this.isActiveMenu = true;\r\n  }\r\n\r\n  onMenuClosed(): void {\r\n    this.isActiveMenu = false;\r\n  }\r\n\r\n  onSubMenuClosed(): void {\r\n    // intentionally empty, just needed to refresh hover state in menu\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isHighlightedMenu = this.service.activeMenuIdChanges\r\n        .pipe(map(val => this.navItem.id === val));\r\n  }\r\n\r\n  /**\r\n   * Navigate to a different view in Engage.\r\n   * Navigation target and methodology is resolved by following logic:\r\n   * 1. If target link has same base href as the document, strip it from the link to have path only\r\n   * 2. If target link had no match for base href, or no router available, set location to target link\r\n   * 3. Try to use the Angular router to navigate to the url (fragment)\r\n   * 4. If router navigation failed, assign location\r\n   */\r\n  private navigateTo(url: string): void {\r\n    this.service.activeNavMenuId = this.navItem.id;\r\n    const routingPath = url.replace(this.baseHref, '');\r\n    if (/https?:\\/{2}/.test(routingPath) || this.router.config.length === 0) {\r\n      window.location.assign(url);\r\n    } else {\r\n      const parsedUrl = this.router.parseUrl(routingPath);\r\n      const navigateResult = this.router.navigateByUrl(parsedUrl.fragment ?? parsedUrl);\r\n      navigateResult.catch(() => {\r\n        window.location.assign(url);\r\n      });\r\n    }\r\n  }\r\n\r\n  private openDialog(menuItem: NavItem): void {\r\n    const config: MatDialogConfig = {\r\n      width: '600px',\r\n      height: '500px',\r\n      autoFocus: false,\r\n      data: {\r\n        title: menuItem.properties?.['title'],\r\n        srcUrl: menuItem.href,\r\n        additionalContent: this.service.getServiceVersionInfos()\r\n      }\r\n    };\r\n    this.dialog.open(TopNavDialogComponent, config);\r\n  }\r\n\r\n  private openHelpLink(url: string): void {\r\n    try {\r\n      const updatedHelpLink = this.service.getUpdatedHelpLink(url);\r\n      window.open(updatedHelpLink);\r\n    } catch (e) {\r\n      console.error('help link malformed', e);\r\n    }\r\n  }\r\n}\r\n","<div *ngIf=\"navItem.icon && navItem.href\"\r\n    class=\"mui-navitem-icon\">\r\n  <a [href]=\"navItem.href\"\r\n      [id]=\"navItem.id\"\r\n  >\r\n    <span class=\"mui-icons\">{{ navItem.icon }}</span>\r\n  </a>\r\n</div>\r\n\r\n<button (menuClosed)=\"onMenuClosed()\"\r\n    (menuOpened)=\"onMenuOpened()\"\r\n    *ngIf=\"navItem.icon && navItem.menu\"\r\n    [class.active]=\"isActiveMenu || (isHighlightedMenu | async)\"\r\n    [matMenuTriggerFor]=\"level2\"\r\n    class=\"mui-navitem-icon-btn\"\r\n    mat-icon-button\r\n    [id]=\"navItem.id\"\r\n>\r\n  <span class=\"mui-icons\">{{ navItem.icon }}</span>\r\n</button>\r\n\r\n<button (menuClosed)=\"onMenuClosed()\"\r\n    (menuOpened)=\"onMenuOpened()\"\r\n    *ngIf=\"navItem.name\"\r\n    [class.active]=\"isActiveMenu || (isHighlightedMenu | async)\"\r\n    [matMenuTriggerFor]=\"level2\"\r\n    class=\"mui-navitem-parent\"\r\n    mat-button\r\n    [id]=\"navItem.id\"\r\n>\r\n  <span>{{ navItem.name }}</span>\r\n  <span class=\"mui-icons\">chevron_down</span>\r\n</button>\r\n\r\n<mat-menu #level2=\"matMenu\"\r\n    class=\"mui-navitem-menu\">\r\n  <ng-container *ngFor=\"let menuItem of navItem.menu\">\r\n    <a (click)=\"onItemClicked(menuItem, $event)\"\r\n        *ngIf=\"menuItem.href\"\r\n        class=\"mui-navitem-button\"\r\n        mat-menu-item\r\n        [id]=\"'2-' + menuItem.id\"\r\n        [href]=\"menuItem.href\"\r\n    >\r\n      <span *ngIf=\"menuItem.icon\"\r\n          class=\"mui-icons\">{{ menuItem.icon }}</span>\r\n      <span>{{ menuItem.name }}</span>\r\n    </a>\r\n    <button *ngIf=\"menuItem.menu\"\r\n        [matMenuTriggerData]=\"{items: menuItem.menu}\"\r\n        [matMenuTriggerFor]=\"level3\"\r\n        class=\"mui-navitem-button\"\r\n        mat-menu-item\r\n        (menuClosed)=\"onSubMenuClosed()\"\r\n        [id]=\"'2-' + menuItem.id\"\r\n    >\r\n      <span>{{ menuItem.name }}</span>\r\n    </button>\r\n\r\n  </ng-container>\r\n</mat-menu>\r\n\r\n<mat-menu #level3=\"matMenu\"\r\n    class=\"mui-navitem-menu\">\r\n  <ng-template let-items=\"items\"\r\n    matMenuContent>\r\n    <a (click)=\"onItemClicked(itm, $event)\"\r\n        *ngFor=\"let itm of items\"\r\n        class=\"mui-navitem-button\"\r\n        mat-menu-item\r\n        [id]=\"'3-' + itm.id\"\r\n        [href]=\"itm.href\"\r\n    >{{ itm.name}}</a>\r\n  </ng-template>\r\n</mat-menu>\r\n\r\n","import { animate, style, transition, trigger } from '@angular/animations';\r\nimport { ViewportRuler } from '@angular/cdk/overlay';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  HostBinding,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { NotificationCenterComponent } from '@mapp-ui/notification-center';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { takeUntil, tap } from 'rxjs/operators';\r\nimport { Navigation } from '../../core/models/navigation';\r\nimport { TopNavigationService } from '../../services/top-navigation.service';\r\n\r\n/**\r\n * This component creates a top navigation bar with main and aux nav section.\r\n * Data for the navigation structure to use is loaded from the provided endpoint url.\r\n */\r\n@Component({\r\n  selector: 'mui-top-navigation',\r\n  exportAs: 'muiTopNavigation',\r\n  templateUrl: './mui-top-navigation.component.html',\r\n  styleUrls: ['./mui-top-navigation.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('fadeInOut', [\r\n      transition(':enter', [\r\n        style({ opacity: 0 }),\r\n        animate('500ms', style({ opacity: 1 })),\r\n      ]),\r\n      transition(':leave', [\r\n        animate('500ms', style({ opacity: 0 }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class MuiTopNavigationComponent implements OnInit, OnDestroy {\r\n\r\n  @HostBinding('class')\r\n  hostClassName = 'mui-top-navigation';\r\n\r\n  /** URL for the API endpoint where navigation data should be loaded from */\r\n  @Input()\r\n  apiUrl: string;\r\n\r\n  /** Template reference for Notification Center component */\r\n  @Input()\r\n  notificationCenter: NotificationCenterComponent;\r\n\r\n  /**\r\n   * Disable pagination functionality if needed. Enabled by default.\r\n   */\r\n  @Input()\r\n  disablePagination: false;\r\n\r\n  /**\r\n   * Navigation component caches its data by default for better performance.\r\n   * The cache can be disabled by setting this property to true.\r\n   */\r\n  @Input()\r\n  disableCache = false\r\n\r\n  @ViewChild('navItemsList', { static: false })\r\n  navItemsContainer: ElementRef<HTMLElement>;\r\n\r\n  navData$: Observable<Navigation>;\r\n\r\n  /** controls visibility of the pagination controls */\r\n  showPaginationControls = false;\r\n  /** disabled state for paginator on the left side */\r\n  disableScrollBefore = false;\r\n  /** disabled state for paginator on the right side */\r\n  disableScrollAfter = false;\r\n\r\n  ghostList = [...Array(10).keys()];\r\n\r\n  private destroyed$ = new Subject<void>();\r\n  private _scrollPosition = 0;\r\n\r\n  constructor(\r\n      private service: TopNavigationService,\r\n      private ruler: ViewportRuler,\r\n      private elementRef: ElementRef<HTMLElement>,\r\n      private cd: ChangeDetectorRef\r\n  ) {\r\n  }\r\n\r\n  get scrollPosition(): number {\r\n    return this._scrollPosition;\r\n  }\r\n\r\n  set scrollPosition(value: number) {\r\n    this.scrollTo(value);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // check for loginAsSystemUser action and force data reload in this case\r\n    const queryParams = new URLSearchParams(window.location.search);\r\n    const actionParam = queryParams.get('action');\r\n    const forceReload = actionParam === 'loginAsSystemUser';\r\n\r\n    this.navData$ = this.service.loadNavigationData(this.apiUrl, this.disableCache, forceReload)\r\n        .pipe(\r\n            tap({\r\n              complete: () => {\r\n                this.initResizeMonitor();\r\n                // give a bit time for rendering to finish and container to be available\r\n                setTimeout(() => this.updatePagination(), 100);\r\n              }\r\n            }),\r\n        );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  /** click handler for the pagination controls in the template */\r\n  onPaginatorClicked(direction: string): void {\r\n    this.scrollMenu(direction);\r\n    this.updatePagination();\r\n  }\r\n\r\n  private initResizeMonitor(): void {\r\n    if (this.disablePagination) {\r\n      return;\r\n    }\r\n\r\n    const resize = this.ruler.change(250);\r\n    const realign = () => {\r\n      this.updatePagination();\r\n    };\r\n\r\n    resize.pipe(\r\n        takeUntil(this.destroyed$)\r\n    )\r\n        .subscribe(() => {\r\n          Promise.resolve()\r\n              .then(realign);\r\n        });\r\n  }\r\n\r\n  /** Main update call which bundles all necessary operations regarding scrolling */\r\n  private updatePagination(): void {\r\n    this.checkPaginationEnabled();\r\n    this.checkScrollingControls();\r\n    this.updateScrollPosition();\r\n  }\r\n\r\n  /** check if pagination controls should be visible */\r\n  private checkPaginationEnabled(): void {\r\n    if (this.disablePagination) {\r\n      this.showPaginationControls = false;\r\n    } else {\r\n      const isEnabled = this.navItemsContainer.nativeElement.scrollWidth >\r\n          this.navItemsContainer.nativeElement.offsetWidth;\r\n\r\n      if (!isEnabled) {\r\n        this.scrollPosition = 0;\r\n      }\r\n      if (isEnabled !== this.showPaginationControls) {\r\n        this.cd.markForCheck();\r\n      }\r\n\r\n      this.showPaginationControls = isEnabled;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update scrolling position to given value. Constrained by container boundaries.\r\n   * @param position new scrolling position to set.\r\n   */\r\n  private scrollTo(position: number): void {\r\n    if (this.disablePagination) {\r\n      return;\r\n    }\r\n\r\n    const maxScrollDistance = this.getMaxScrollDistance();\r\n    this._scrollPosition = Math.max(0, Math.min(maxScrollDistance, position));\r\n    this.checkScrollingControls();\r\n  }\r\n\r\n  /** Scroll the menu in either left or right direction */\r\n  private scrollMenu(direction: string): void {\r\n    const viewLength = this.navItemsContainer.nativeElement.offsetWidth;\r\n    // set the scrolling amount to 1/4 of the container width\r\n    const scrollAmount = (direction === 'before' ? -1 : 1) * viewLength / 4;\r\n    const scrollPosition = this.scrollPosition + scrollAmount;\r\n\r\n    this.scrollTo(scrollPosition);\r\n  }\r\n\r\n  /** Check if left or right scrolling control should be disabled based on the current scrolling position */\r\n  private checkScrollingControls(): void {\r\n    if (this.disablePagination) {\r\n      this.disableScrollAfter = this.disableScrollBefore = true;\r\n    } else {\r\n      this.disableScrollBefore = this.scrollPosition === 0;\r\n      const max = this.getMaxScrollDistance();\r\n      this.disableScrollAfter = this.scrollPosition === max;\r\n      this.cd.markForCheck();\r\n    }\r\n  }\r\n\r\n  /** Calculate maximum scroll distance based on container size of the nav menu items */\r\n  private getMaxScrollDistance(): number {\r\n    const navMenusWidth = this.navItemsContainer.nativeElement.scrollWidth;\r\n    const viewWidth = this.navItemsContainer.nativeElement.offsetWidth;\r\n    return (navMenusWidth - viewWidth) || 0;\r\n  }\r\n\r\n  /** Performs the actual scrolling based on currently set scroll position */\r\n  private updateScrollPosition(): void {\r\n    if (this.disablePagination) {\r\n      return;\r\n    }\r\n\r\n    const scrollOptions: ScrollToOptions = {\r\n      left: this.scrollPosition,\r\n      top: 0,\r\n      behavior: 'smooth'\r\n    };\r\n    this.navItemsContainer.nativeElement.scrollTo(scrollOptions);\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"navData$ | async as navData; else ghosts\">\r\n  <mui-top-nav-menu\r\n      [navItem]=\"navData.mainNav[0]\"></mui-top-nav-menu>\r\n\r\n  <nav class=\"mui-main-nav-container\"\r\n      @fadeInOut>\r\n    <button\r\n        class=\"mui-main-nav-pagination\"\r\n        [class.mui-main-nav-pagination-disabled]=\"disableScrollBefore\"\r\n        [class.mui-main-nav-pagination-visible]=\"showPaginationControls\"\r\n        [disabled]=\"disableScrollBefore\"\r\n        mat-icon-button\r\n        aria-hidden=\"true\"\r\n        (click)=\"onPaginatorClicked('before')\"\r\n    >\r\n      <span class=\"mui-icons\">chevron_left</span>\r\n    </button>\r\n\r\n    <div #navItemsList\r\n        class=\"mui-main-nav-items-container\">\r\n      <ng-container *ngFor=\"let navItem of navData.mainNav; let i = index\">\r\n        <mui-top-nav-menu *ngIf=\"i > 0\"\r\n            [navItem]=\"navItem\"></mui-top-nav-menu>\r\n      </ng-container>\r\n    </div>\r\n\r\n    <button\r\n        class=\"mui-main-nav-pagination\"\r\n        [class.mui-main-nav-pagination-disabled]=\"disableScrollAfter\"\r\n        [class.mui-main-nav-pagination-visible]=\"showPaginationControls\"\r\n        [disabled]=\"disableScrollAfter\"\r\n        mat-icon-button\r\n        aria-hidden=\"true\"\r\n        (click)=\"onPaginatorClicked('after')\"\r\n    >\r\n      <span class=\"mui-icons\">chevron_right</span>\r\n    </button>\r\n  </nav>\r\n  <nav class=\"mui-aux-nav-container\"\r\n      @fadeInOut>\r\n    <ng-container *ngFor=\"let navItem of navData.auxNav\"\r\n        [ngSwitch]=\"navItem.id\"\r\n    >\r\n      <mui-notification-bell\r\n          *ngSwitchCase=\"'aux-notification'\"\r\n          [navItem]=\"navItem\"\r\n          [notificationCenter]=\"notificationCenter\"\r\n      ></mui-notification-bell>\r\n      <mui-search *ngSwitchCase=\"'aux-search'\"\r\n          [navItem]=\"navItem\"></mui-search>\r\n      <mui-profile-menu *ngSwitchCase=\"'aux-user'\"\r\n          [navItem]=\"navItem\"></mui-profile-menu>\r\n      <mui-top-nav-menu *ngSwitchDefault\r\n          [navItem]=\"navItem\"></mui-top-nav-menu>\r\n    </ng-container>\r\n  </nav>\r\n</ng-container>\r\n<ng-template #ghosts>\r\n  <div class=\"nav-ghosts-container\"\r\n      @fadeInOut>\r\n    <div class=\"menu-icon-ghost\">\r\n      <span class=\"mui-icons\">mapp_m</span>\r\n    </div>\r\n    <div *ngFor=\"let g of ghostList\"\r\n        class=\"menu-ghost\"\r\n    ></div>\r\n  </div>\r\n</ng-template>\r\n","import { A11yModule } from '@angular/cdk/a11y';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MuiIconModule } from '../icon';\r\nimport { EditPasswordComponent } from './components/edit-password/edit-password.component';\r\nimport { EditProfileComponent } from './components/edit-profile/edit-profile.component';\r\nimport { NotificationBellComponent } from './components/notification-bell/notification-bell.component';\r\nimport { ProfileMenuComponent } from './components/profile-menu/profile-menu.component';\r\nimport { SearchComponent } from './components/search/search.component';\r\nimport { TimeoutDialogComponent } from './components/timeout-dialog/timeout-dialog.component';\r\nimport { TopNavDialogComponent } from './components/top-nav-dialog/top-nav-dialog.component';\r\nimport { TopNavMenuComponent } from './components/top-nav-menu/top-nav-menu.component';\r\nimport { MuiTopNavigationComponent } from './components/top-nav/mui-top-navigation.component';\r\nimport { LangChangeDialogComponent } from './components/lang-change-dialog/lang-change-dialog.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MuiTopNavigationComponent,\r\n    TopNavMenuComponent,\r\n    NotificationBellComponent,\r\n    SearchComponent,\r\n    ProfileMenuComponent,\r\n    TopNavDialogComponent,\r\n    TimeoutDialogComponent,\r\n    EditProfileComponent,\r\n    EditPasswordComponent,\r\n    LangChangeDialogComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    MatBadgeModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    OverlayModule,\r\n    MatSlideToggleModule,\r\n    MatTabsModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    ReactiveFormsModule,\r\n    A11yModule,\r\n    MuiIconModule\r\n  ],\r\n  exports: [\r\n    MuiTopNavigationComponent\r\n  ]\r\n})\r\nexport class MuiTopNavigationModule {\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { SessionTimerService } from '../services/session-timer.service';\r\n\r\n@Injectable()\r\nexport class SessionTimerInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n      private timerService: SessionTimerService\r\n  ) {\r\n  }\r\n\r\n  intercept(\r\n      req: HttpRequest<any>,\r\n      next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    if (this.timerService) {\r\n      this.timerService.resetTimer();\r\n    }\r\n    return next.handle(req);\r\n  }\r\n\r\n}\r\n","/*\r\n * Public API Surface of common\r\n */\r\n\r\nexport * from './lib/app-header/index';\r\nexport * from './lib/page-header/index';\r\nexport * from './lib/app-nav/index';\r\nexport * from './lib/stepper/index';\r\nexport * from './lib/drawer/index';\r\nexport * from './lib/icon/index';\r\nexport * from './lib/top-navigation/index';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1","i2","i3","i4","i5","SessionTimerService","i1.SessionTimerService","i1.MuiHeadernavService","i7","i9","i11.SessionTimerComponent","i1.MuiLeftnavService","i8","i6","i10","i3.MuiIconComponent","i7.EditProfileComponent","i8.EditPasswordComponent","i3.TopNavigationCacheService","i2.TopNavigationCacheService","i2.SessionTimerService","i3.TopNavigationService","i1.TopNavigationService","i5.TopNavMenuComponent","i6.NotificationBellComponent","i7.SearchComponent","i8.ProfileMenuComponent"],"mappings":"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"}