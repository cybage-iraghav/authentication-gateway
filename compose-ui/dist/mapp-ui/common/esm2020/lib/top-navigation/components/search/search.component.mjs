import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/material/button";
import * as i3 from "@angular/material/input";
import * as i4 from "@angular/material/form-field";
import * as i5 from "@angular/cdk/overlay";
import * as i6 from "@angular/cdk/a11y";
export class SearchComponent {
    constructor() {
        this.isSearchOpen = false;
    }
    onSearchTermEntered(value) {
        const searchQuery = this.navItem.href + encodeURIComponent(value);
        window.location.assign(searchQuery);
    }
}
SearchComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: SearchComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
SearchComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.10", type: SearchComponent, selector: "mui-search", inputs: { navItem: "navItem" }, ngImport: i0, template: "<button #trigger=\"cdkOverlayOrigin\"\r\n    (click)=\"isSearchOpen = !isSearchOpen\"\r\n    [class.active]=\"isSearchOpen\"\r\n    cdkOverlayOrigin\r\n    class=\"mui-auxnav-button\"\r\n    mat-icon-button\r\n    [id]=\"navItem.id\"\r\n>\r\n  <span class=\"mui-icons\">{{ navItem.icon }}</span>\r\n</button>\r\n\r\n<ng-template\r\n    (overlayOutsideClick)=\"isSearchOpen = false\"\r\n    [cdkConnectedOverlayOpen]=\"isSearchOpen\"\r\n    [cdkConnectedOverlayOrigin]=\"trigger\"\r\n    cdkConnectedOverlay\r\n>\r\n  <div class=\"mui-aux-search-panel\"\r\n      cdkTrapFocus\r\n      [cdkTrapFocusAutoCapture]=\"true\"\r\n  >\r\n    <mat-form-field appearance=\"outline\"\r\n        class=\"mui-aux-search-field\">\r\n      <input #search\r\n          (keyup.enter)=\"onSearchTermEntered(search.value)\"\r\n          matInput\r\n          placeholder=\"Search\"\r\n          i18n-placeholder=\"placeholder on search input@@topnav_search_placeholder\"\r\n          cdkFocusInitial\r\n      />\r\n      <button *ngIf=\"search.value !== ''\"\r\n          (click)=\"search.value = ''\"\r\n          aria-label=\"Clear search\"\r\n          mat-icon-button\r\n          matIconSuffix>\r\n        <span class=\"mui-icons search-clear-icon\">close</span>\r\n      </button>\r\n\r\n    </mat-form-field>\r\n  </div>\r\n\r\n</ng-template>\r\n", styles: [":host{display:block;width:48px;height:100%}.mui-auxnav-button{width:100%;height:100%;border-radius:0}.mui-aux-search-panel{padding:.25em}.mui-aux-search-field{width:280px;font-size:14px}.search-clear-icon{font-size:14px;margin:auto;display:block;height:1.357em;line-height:1.357}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.MatIconButton, selector: "button[mat-icon-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { kind: "directive", type: i3.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { kind: "component", type: i4.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i4.MatSuffix, selector: "[matSuffix], [matIconSuffix], [matTextSuffix]", inputs: ["matTextSuffix"] }, { kind: "directive", type: i5.CdkConnectedOverlay, selector: "[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]", inputs: ["cdkConnectedOverlayOrigin", "cdkConnectedOverlayPositions", "cdkConnectedOverlayPositionStrategy", "cdkConnectedOverlayOffsetX", "cdkConnectedOverlayOffsetY", "cdkConnectedOverlayWidth", "cdkConnectedOverlayHeight", "cdkConnectedOverlayMinWidth", "cdkConnectedOverlayMinHeight", "cdkConnectedOverlayBackdropClass", "cdkConnectedOverlayPanelClass", "cdkConnectedOverlayViewportMargin", "cdkConnectedOverlayScrollStrategy", "cdkConnectedOverlayOpen", "cdkConnectedOverlayDisableClose", "cdkConnectedOverlayTransformOriginOn", "cdkConnectedOverlayHasBackdrop", "cdkConnectedOverlayLockPosition", "cdkConnectedOverlayFlexibleDimensions", "cdkConnectedOverlayGrowAfterOpen", "cdkConnectedOverlayPush"], outputs: ["backdropClick", "positionChange", "attach", "detach", "overlayKeydown", "overlayOutsideClick"], exportAs: ["cdkConnectedOverlay"] }, { kind: "directive", type: i5.CdkOverlayOrigin, selector: "[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]", exportAs: ["cdkOverlayOrigin"] }, { kind: "directive", type: i6.CdkTrapFocus, selector: "[cdkTrapFocus]", inputs: ["cdkTrapFocus", "cdkTrapFocusAutoCapture"], exportAs: ["cdkTrapFocus"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: SearchComponent, decorators: [{
            type: Component,
            args: [{ selector: 'mui-search', template: "<button #trigger=\"cdkOverlayOrigin\"\r\n    (click)=\"isSearchOpen = !isSearchOpen\"\r\n    [class.active]=\"isSearchOpen\"\r\n    cdkOverlayOrigin\r\n    class=\"mui-auxnav-button\"\r\n    mat-icon-button\r\n    [id]=\"navItem.id\"\r\n>\r\n  <span class=\"mui-icons\">{{ navItem.icon }}</span>\r\n</button>\r\n\r\n<ng-template\r\n    (overlayOutsideClick)=\"isSearchOpen = false\"\r\n    [cdkConnectedOverlayOpen]=\"isSearchOpen\"\r\n    [cdkConnectedOverlayOrigin]=\"trigger\"\r\n    cdkConnectedOverlay\r\n>\r\n  <div class=\"mui-aux-search-panel\"\r\n      cdkTrapFocus\r\n      [cdkTrapFocusAutoCapture]=\"true\"\r\n  >\r\n    <mat-form-field appearance=\"outline\"\r\n        class=\"mui-aux-search-field\">\r\n      <input #search\r\n          (keyup.enter)=\"onSearchTermEntered(search.value)\"\r\n          matInput\r\n          placeholder=\"Search\"\r\n          i18n-placeholder=\"placeholder on search input@@topnav_search_placeholder\"\r\n          cdkFocusInitial\r\n      />\r\n      <button *ngIf=\"search.value !== ''\"\r\n          (click)=\"search.value = ''\"\r\n          aria-label=\"Clear search\"\r\n          mat-icon-button\r\n          matIconSuffix>\r\n        <span class=\"mui-icons search-clear-icon\">close</span>\r\n      </button>\r\n\r\n    </mat-form-field>\r\n  </div>\r\n\r\n</ng-template>\r\n", styles: [":host{display:block;width:48px;height:100%}.mui-auxnav-button{width:100%;height:100%;border-radius:0}.mui-aux-search-panel{padding:.25em}.mui-aux-search-field{width:280px;font-size:14px}.search-clear-icon{font-size:14px;margin:auto;display:block;height:1.357em;line-height:1.357}\n"] }]
        }], propDecorators: { navItem: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL21hcHAtdWkvY29tbW9uL3NyYy9saWIvdG9wLW5hdmlnYXRpb24vY29tcG9uZW50cy9zZWFyY2gvc2VhcmNoLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL21hcHAtdWkvY29tbW9uL3NyYy9saWIvdG9wLW5hdmlnYXRpb24vY29tcG9uZW50cy9zZWFyY2gvc2VhcmNoLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7OztBQVFqRCxNQUFNLE9BQU8sZUFBZTtJQUw1QjtRQVNFLGlCQUFZLEdBQUcsS0FBSyxDQUFDO0tBTXRCO0lBSkMsbUJBQW1CLENBQUMsS0FBYTtRQUMvQixNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxrQkFBa0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNsRSxNQUFNLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUN0QyxDQUFDOzs2R0FUVSxlQUFlO2lHQUFmLGVBQWUsa0ZDUjVCLHV6Q0EwQ0E7NEZEbENhLGVBQWU7a0JBTDNCLFNBQVM7K0JBQ0UsWUFBWTs4QkFNdEIsT0FBTztzQkFETixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOYXZJdGVtIH0gZnJvbSAnLi4vLi4vY29yZS9tb2RlbHMvbmF2aWdhdGlvbic7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ211aS1zZWFyY2gnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9zZWFyY2guY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3NlYXJjaC5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTZWFyY2hDb21wb25lbnQge1xyXG4gIEBJbnB1dCgpXHJcbiAgbmF2SXRlbTogTmF2SXRlbTtcclxuXHJcbiAgaXNTZWFyY2hPcGVuID0gZmFsc2U7XHJcblxyXG4gIG9uU2VhcmNoVGVybUVudGVyZWQodmFsdWU6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgY29uc3Qgc2VhcmNoUXVlcnkgPSB0aGlzLm5hdkl0ZW0uaHJlZiArIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSk7XHJcbiAgICB3aW5kb3cubG9jYXRpb24uYXNzaWduKHNlYXJjaFF1ZXJ5KTtcclxuICB9XHJcbn1cclxuIiwiPGJ1dHRvbiAjdHJpZ2dlcj1cImNka092ZXJsYXlPcmlnaW5cIlxyXG4gICAgKGNsaWNrKT1cImlzU2VhcmNoT3BlbiA9ICFpc1NlYXJjaE9wZW5cIlxyXG4gICAgW2NsYXNzLmFjdGl2ZV09XCJpc1NlYXJjaE9wZW5cIlxyXG4gICAgY2RrT3ZlcmxheU9yaWdpblxyXG4gICAgY2xhc3M9XCJtdWktYXV4bmF2LWJ1dHRvblwiXHJcbiAgICBtYXQtaWNvbi1idXR0b25cclxuICAgIFtpZF09XCJuYXZJdGVtLmlkXCJcclxuPlxyXG4gIDxzcGFuIGNsYXNzPVwibXVpLWljb25zXCI+e3sgbmF2SXRlbS5pY29uIH19PC9zcGFuPlxyXG48L2J1dHRvbj5cclxuXHJcbjxuZy10ZW1wbGF0ZVxyXG4gICAgKG92ZXJsYXlPdXRzaWRlQ2xpY2spPVwiaXNTZWFyY2hPcGVuID0gZmFsc2VcIlxyXG4gICAgW2Nka0Nvbm5lY3RlZE92ZXJsYXlPcGVuXT1cImlzU2VhcmNoT3BlblwiXHJcbiAgICBbY2RrQ29ubmVjdGVkT3ZlcmxheU9yaWdpbl09XCJ0cmlnZ2VyXCJcclxuICAgIGNka0Nvbm5lY3RlZE92ZXJsYXlcclxuPlxyXG4gIDxkaXYgY2xhc3M9XCJtdWktYXV4LXNlYXJjaC1wYW5lbFwiXHJcbiAgICAgIGNka1RyYXBGb2N1c1xyXG4gICAgICBbY2RrVHJhcEZvY3VzQXV0b0NhcHR1cmVdPVwidHJ1ZVwiXHJcbiAgPlxyXG4gICAgPG1hdC1mb3JtLWZpZWxkIGFwcGVhcmFuY2U9XCJvdXRsaW5lXCJcclxuICAgICAgICBjbGFzcz1cIm11aS1hdXgtc2VhcmNoLWZpZWxkXCI+XHJcbiAgICAgIDxpbnB1dCAjc2VhcmNoXHJcbiAgICAgICAgICAoa2V5dXAuZW50ZXIpPVwib25TZWFyY2hUZXJtRW50ZXJlZChzZWFyY2gudmFsdWUpXCJcclxuICAgICAgICAgIG1hdElucHV0XHJcbiAgICAgICAgICBwbGFjZWhvbGRlcj1cIlNlYXJjaFwiXHJcbiAgICAgICAgICBpMThuLXBsYWNlaG9sZGVyPVwicGxhY2Vob2xkZXIgb24gc2VhcmNoIGlucHV0QEB0b3BuYXZfc2VhcmNoX3BsYWNlaG9sZGVyXCJcclxuICAgICAgICAgIGNka0ZvY3VzSW5pdGlhbFxyXG4gICAgICAvPlxyXG4gICAgICA8YnV0dG9uICpuZ0lmPVwic2VhcmNoLnZhbHVlICE9PSAnJ1wiXHJcbiAgICAgICAgICAoY2xpY2spPVwic2VhcmNoLnZhbHVlID0gJydcIlxyXG4gICAgICAgICAgYXJpYS1sYWJlbD1cIkNsZWFyIHNlYXJjaFwiXHJcbiAgICAgICAgICBtYXQtaWNvbi1idXR0b25cclxuICAgICAgICAgIG1hdEljb25TdWZmaXg+XHJcbiAgICAgICAgPHNwYW4gY2xhc3M9XCJtdWktaWNvbnMgc2VhcmNoLWNsZWFyLWljb25cIj5jbG9zZTwvc3Bhbj5cclxuICAgICAgPC9idXR0b24+XHJcblxyXG4gICAgPC9tYXQtZm9ybS1maWVsZD5cclxuICA8L2Rpdj5cclxuXHJcbjwvbmctdGVtcGxhdGU+XHJcbiJdfQ==